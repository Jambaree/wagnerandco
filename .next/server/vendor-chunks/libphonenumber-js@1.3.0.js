"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/libphonenumber-js@1.3.0";
exports.ids = ["vendor-chunks/libphonenumber-js@1.3.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/AsYouType.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/AsYouType.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DIGIT_PLACEHOLDER: () => (/* binding */ DIGIT_PLACEHOLDER),\n/* harmony export */   close_dangling_braces: () => (/* binding */ close_dangling_braces),\n/* harmony export */   count_occurences: () => (/* binding */ count_occurences),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   repeat: () => (/* binding */ repeat)\n/* harmony export */ });\n/* harmony import */ var _metadata__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./metadata */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/metadata.js\");\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/common.js\");\n/* harmony import */ var _parse__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./parse */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/parse.js\");\n/* harmony import */ var _format__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./format */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/format.js\");\n/* harmony import */ var _getNumberType__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./getNumberType */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/getNumberType.js\");\n/* harmony import */ var _parseIncompletePhoneNumber__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./parseIncompletePhoneNumber */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/parseIncompletePhoneNumber.js\");\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// This is an enhanced port of Google Android `libphonenumber`'s\n// `asyoutypeformatter.js` of 17th November, 2016.\n//\n// https://github.com/googlei18n/libphonenumber/blob/8d21a365061de2ba0675c878a710a7b24f74d2ae/javascript/i18n/phonenumbers/asyoutypeformatter.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Used in phone number format template creation.\n// Could be any digit, I guess.\nvar DUMMY_DIGIT = '9';\nvar DUMMY_DIGIT_MATCHER = new RegExp(DUMMY_DIGIT, 'g');\n// I don't know why is it exactly `15`\nvar LONGEST_NATIONAL_PHONE_NUMBER_LENGTH = 15;\n// Create a phone number consisting only of the digit 9 that matches the\n// `number_pattern` by applying the pattern to the \"longest phone number\" string.\nvar LONGEST_DUMMY_PHONE_NUMBER = repeat(DUMMY_DIGIT, LONGEST_NATIONAL_PHONE_NUMBER_LENGTH);\n\n// The digits that have not been entered yet will be represented by a \\u2008,\n// the punctuation space.\nvar DIGIT_PLACEHOLDER = 'x'; // '\\u2008' (punctuation space)\nvar DIGIT_PLACEHOLDER_MATCHER = new RegExp(DIGIT_PLACEHOLDER);\nvar DIGIT_PLACEHOLDER_MATCHER_GLOBAL = new RegExp(DIGIT_PLACEHOLDER, 'g');\n\n// A pattern that is used to match character classes in regular expressions.\n// An example of a character class is \"[1-4]\".\nvar CHARACTER_CLASS_PATTERN = /\\[([^\\[\\]])*\\]/g;\n\n// Any digit in a regular expression that actually denotes a digit. For\n// example, in the regular expression \"80[0-2]\\d{6,10}\", the first 2 digits\n// (8 and 0) are standalone digits, but the rest are not.\n// Two look-aheads are needed because the number following \\\\d could be a\n// two-digit number, since the phone number can be as long as 15 digits.\nvar STANDALONE_DIGIT_PATTERN = /\\d(?=[^,}][^,}])/g;\n\n// A pattern that is used to determine if a `format` is eligible\n// to be used by the \"as you type formatter\".\n// It is eligible when the `format` contains groups of the dollar sign\n// followed by a single digit, separated by valid phone number punctuation.\n// This prevents invalid punctuation (such as the star sign in Israeli star numbers)\n// getting into the output of the \"as you type formatter\".\nvar ELIGIBLE_FORMAT_PATTERN = new RegExp('^' + '[' + _common__WEBPACK_IMPORTED_MODULE_0__.VALID_PUNCTUATION + ']*' + '(\\\\$\\\\d[' + _common__WEBPACK_IMPORTED_MODULE_0__.VALID_PUNCTUATION + ']*)+' + '$');\n\n// This is the minimum length of the leading digits of a phone number\n// to guarantee the first \"leading digits pattern\" for a phone number format\n// to be preemptive.\nvar MIN_LEADING_DIGITS_LENGTH = 3;\n\nvar VALID_INCOMPLETE_PHONE_NUMBER = '[' + _common__WEBPACK_IMPORTED_MODULE_0__.PLUS_CHARS + ']{0,1}' + '[' + _common__WEBPACK_IMPORTED_MODULE_0__.VALID_PUNCTUATION + _common__WEBPACK_IMPORTED_MODULE_0__.VALID_DIGITS + ']*';\n\nvar VALID_INCOMPLETE_PHONE_NUMBER_PATTERN = new RegExp('^' + VALID_INCOMPLETE_PHONE_NUMBER + '$', 'i');\n\nvar AsYouType = function () {\n\n\t/**\r\n  * @param {string} [country_code] - The default country used for parsing non-international phone numbers.\r\n  * @param {Object} metadata\r\n  */\n\tfunction AsYouType(country_code, metadata) {\n\t\t_classCallCheck(this, AsYouType);\n\n\t\tthis.options = {};\n\n\t\tthis.metadata = new _metadata__WEBPACK_IMPORTED_MODULE_1__[\"default\"](metadata);\n\n\t\tif (country_code && this.metadata.hasCountry(country_code)) {\n\t\t\tthis.default_country = country_code;\n\t\t}\n\n\t\tthis.reset();\n\t}\n\t// Not setting `options` to a constructor argument\n\t// not to break backwards compatibility\n\t// for older versions of the library.\n\n\n\t_createClass(AsYouType, [{\n\t\tkey: 'input',\n\t\tvalue: function input(text) {\n\t\t\t// Parse input\n\n\t\t\tvar extracted_number = (0,_parse__WEBPACK_IMPORTED_MODULE_2__.extract_formatted_phone_number)(text) || '';\n\n\t\t\t// Special case for a lone '+' sign\n\t\t\t// since it's not considered a possible phone number.\n\t\t\tif (!extracted_number) {\n\t\t\t\tif (text && text.indexOf('+') >= 0) {\n\t\t\t\t\textracted_number = '+';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Validate possible first part of a phone number\n\t\t\tif (!(0,_common__WEBPACK_IMPORTED_MODULE_0__.matches_entirely)(extracted_number, VALID_INCOMPLETE_PHONE_NUMBER_PATTERN)) {\n\t\t\t\treturn this.current_output;\n\t\t\t}\n\n\t\t\treturn this.process_input((0,_parseIncompletePhoneNumber__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(extracted_number));\n\t\t}\n\t}, {\n\t\tkey: 'process_input',\n\t\tvalue: function process_input(input) {\n\t\t\t// If an out of position '+' sign detected\n\t\t\t// (or a second '+' sign),\n\t\t\t// then just drop it from the input.\n\t\t\tif (input[0] === '+') {\n\t\t\t\tif (!this.parsed_input) {\n\t\t\t\t\tthis.parsed_input += '+';\n\n\t\t\t\t\t// If a default country was set\n\t\t\t\t\t// then reset it because an explicitly international\n\t\t\t\t\t// phone number is being entered\n\t\t\t\t\tthis.reset_countriness();\n\t\t\t\t}\n\n\t\t\t\tinput = input.slice(1);\n\t\t\t}\n\n\t\t\t// Raw phone number\n\t\t\tthis.parsed_input += input;\n\n\t\t\t// // Reset phone number validation state\n\t\t\t// this.valid = false\n\n\t\t\t// Add digits to the national number\n\t\t\tthis.national_number += input;\n\n\t\t\t// TODO: Deprecated: rename `this.national_number`\n\t\t\t// to `this.nationalNumber` and remove `.getNationalNumber()`.\n\n\t\t\t// Try to format the parsed input\n\n\t\t\tif (this.is_international()) {\n\t\t\t\tif (!this.countryCallingCode) {\n\t\t\t\t\t// No need to format anything\n\t\t\t\t\t// if there's no national phone number.\n\t\t\t\t\t// (e.g. just the country calling code)\n\t\t\t\t\tif (!this.national_number) {\n\t\t\t\t\t\t// Return raw phone number\n\t\t\t\t\t\treturn this.parsed_input;\n\t\t\t\t\t}\n\n\t\t\t\t\t// If one looks at country phone codes\n\t\t\t\t\t// then he can notice that no one country phone code\n\t\t\t\t\t// is ever a (leftmost) substring of another country phone code.\n\t\t\t\t\t// So if a valid country code is extracted so far\n\t\t\t\t\t// then it means that this is the country code.\n\n\t\t\t\t\t// If no country phone code could be extracted so far,\n\t\t\t\t\t// then just return the raw phone number,\n\t\t\t\t\t// because it has no way of knowing\n\t\t\t\t\t// how to format the phone number so far.\n\t\t\t\t\tif (!this.extract_country_calling_code()) {\n\t\t\t\t\t\t// Return raw phone number\n\t\t\t\t\t\treturn this.parsed_input;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Initialize country-specific data\n\t\t\t\t\tthis.initialize_phone_number_formats_for_this_country_calling_code();\n\t\t\t\t\tthis.reset_format();\n\t\t\t\t\tthis.determine_the_country();\n\t\t\t\t}\n\t\t\t\t// `this.country` could be `undefined`,\n\t\t\t\t// for instance, when there is ambiguity\n\t\t\t\t// in a form of several different countries\n\t\t\t\t// each corresponding to the same country phone code\n\t\t\t\t// (e.g. NANPA: USA, Canada, etc),\n\t\t\t\t// and there's not enough digits entered\n\t\t\t\t// to reliably determine the country\n\t\t\t\t// the phone number belongs to.\n\t\t\t\t// Therefore, in cases of such ambiguity,\n\t\t\t\t// each time something is input,\n\t\t\t\t// try to determine the country\n\t\t\t\t// (if it's not determined yet).\n\t\t\t\telse if (!this.country) {\n\t\t\t\t\t\tthis.determine_the_country();\n\t\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Some national prefixes are substrings of other national prefixes\n\t\t\t\t// (for the same country), therefore try to extract national prefix each time\n\t\t\t\t// because a longer national prefix might be available at some point in time.\n\n\t\t\t\tvar previous_national_prefix = this.national_prefix;\n\t\t\t\tthis.national_number = this.national_prefix + this.national_number;\n\n\t\t\t\t// Possibly extract a national prefix\n\t\t\t\tthis.extract_national_prefix();\n\n\t\t\t\tif (this.national_prefix !== previous_national_prefix) {\n\t\t\t\t\t// National number has changed\n\t\t\t\t\t// (due to another national prefix been extracted)\n\t\t\t\t\t// therefore national number has changed\n\t\t\t\t\t// therefore reset all previous formatting data.\n\t\t\t\t\t// (and leading digits matching state)\n\t\t\t\t\tthis.matching_formats = this.available_formats;\n\t\t\t\t\tthis.reset_format();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!this.should_format()) {\n\t\t\t\treturn this.format_as_non_formatted_number();\n\t\t\t}\n\n\t\t\t// Check the available phone number formats\n\t\t\t// based on the currently available leading digits.\n\t\t\tthis.match_formats_by_leading_digits();\n\n\t\t\t// Format the phone number (given the next digits)\n\t\t\tvar formatted_national_phone_number = this.format_national_phone_number(input);\n\n\t\t\t// If the phone number could be formatted,\n\t\t\t// then return it, possibly prepending with country phone code\n\t\t\t// (for international phone numbers only)\n\t\t\tif (formatted_national_phone_number) {\n\t\t\t\treturn this.full_phone_number(formatted_national_phone_number);\n\t\t\t}\n\n\t\t\t// If the phone number couldn't be formatted,\n\t\t\t// then just fall back to the raw phone number.\n\t\t\treturn this.parsed_input;\n\t\t}\n\t}, {\n\t\tkey: 'format_as_non_formatted_number',\n\t\tvalue: function format_as_non_formatted_number() {\n\t\t\tif (this.is_international() && this.countryCallingCode) {\n\t\t\t\tif (this.national_number) {\n\t\t\t\t\t// For convenience, the public `.template` property\n\t\t\t\t\t// contains the whole international number\n\t\t\t\t\t// if the phone number being input is international:\n\t\t\t\t\t// 'x' for the '+' sign, 'x'es for the country phone code,\n\t\t\t\t\t// a spacebar and then the template for the national number digits.\n\t\t\t\t\tthis.template = DIGIT_PLACEHOLDER + repeat(DIGIT_PLACEHOLDER, this.countryCallingCode.length) + ' ' + repeat(DIGIT_PLACEHOLDER, this.national_number.length);\n\n\t\t\t\t\treturn '+' + this.countryCallingCode + ' ' + this.national_number;\n\t\t\t\t}\n\n\t\t\t\treturn '+' + this.countryCallingCode;\n\t\t\t}\n\n\t\t\treturn this.parsed_input;\n\t\t}\n\t}, {\n\t\tkey: 'format_national_phone_number',\n\t\tvalue: function format_national_phone_number(next_digits) {\n\t\t\t// Format the next phone number digits\n\t\t\t// using the previously chosen phone number format.\n\t\t\t//\n\t\t\t// This is done here because if `attempt_to_format_complete_phone_number`\n\t\t\t// was placed before this call then the `template`\n\t\t\t// wouldn't reflect the situation correctly (and would therefore be inconsistent)\n\t\t\t//\n\t\t\tvar national_number_formatted_with_previous_format = void 0;\n\t\t\tif (this.chosen_format) {\n\t\t\t\tnational_number_formatted_with_previous_format = this.format_next_national_number_digits(next_digits);\n\t\t\t}\n\n\t\t\t// See if the input digits can be formatted properly already. If not,\n\t\t\t// use the results from format_next_national_number_digits(), which does formatting\n\t\t\t// based on the formatting pattern chosen.\n\n\t\t\tvar formatted_number = this.attempt_to_format_complete_phone_number();\n\n\t\t\t// Just because a phone number doesn't have a suitable format\n\t\t\t// that doesn't mean that the phone is invalid\n\t\t\t// because phone number formats only format phone numbers,\n\t\t\t// they don't validate them and some (rare) phone numbers\n\t\t\t// are meant to stay non-formatted.\n\t\t\tif (formatted_number) {\n\t\t\t\t// if (this.country)\n\t\t\t\t// {\n\t\t\t\t// \tthis.valid = true\n\t\t\t\t// }\n\n\t\t\t\treturn formatted_number;\n\t\t\t}\n\n\t\t\t// For some phone number formats national prefix\n\n\t\t\t// If the previously chosen phone number format\n\t\t\t// didn't match the next (current) digit being input\n\t\t\t// (leading digits pattern didn't match).\n\t\t\tif (this.choose_another_format()) {\n\t\t\t\t// And a more appropriate phone number format\n\t\t\t\t// has been chosen for these `leading digits`,\n\t\t\t\t// then format the national phone number (so far)\n\t\t\t\t// using the newly selected phone number pattern.\n\n\t\t\t\t// Will return `undefined` if it couldn't format\n\t\t\t\t// the supplied national number\n\t\t\t\t// using the selected phone number pattern.\n\n\t\t\t\treturn this.reformat_national_number();\n\t\t\t}\n\n\t\t\t// If could format the next (current) digit\n\t\t\t// using the previously chosen phone number format\n\t\t\t// then return the formatted number so far.\n\n\t\t\t// If no new phone number format could be chosen,\n\t\t\t// and couldn't format the supplied national number\n\t\t\t// using the selected phone number pattern,\n\t\t\t// then it will return `undefined`.\n\n\t\t\treturn national_number_formatted_with_previous_format;\n\t\t}\n\t}, {\n\t\tkey: 'reset',\n\t\tvalue: function reset() {\n\t\t\t// Input stripped of non-phone-number characters.\n\t\t\t// Can only contain a possible leading '+' sign and digits.\n\t\t\tthis.parsed_input = '';\n\n\t\t\tthis.current_output = '';\n\n\t\t\t// This contains the national prefix that has been extracted. It contains only\n\t\t\t// digits without formatting.\n\t\t\tthis.national_prefix = '';\n\n\t\t\tthis.national_number = '';\n\n\t\t\tthis.reset_countriness();\n\n\t\t\tthis.reset_format();\n\n\t\t\t// this.valid = false\n\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'reset_country',\n\t\tvalue: function reset_country() {\n\t\t\tif (this.is_international()) {\n\t\t\t\tthis.country = undefined;\n\t\t\t} else {\n\t\t\t\tthis.country = this.default_country;\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'reset_countriness',\n\t\tvalue: function reset_countriness() {\n\t\t\tthis.reset_country();\n\n\t\t\tif (this.default_country && !this.is_international()) {\n\t\t\t\tthis.metadata.country(this.default_country);\n\t\t\t\tthis.countryCallingCode = this.metadata.countryCallingCode();\n\n\t\t\t\tthis.initialize_phone_number_formats_for_this_country_calling_code();\n\t\t\t} else {\n\t\t\t\tthis.metadata.country(undefined);\n\t\t\t\tthis.countryCallingCode = undefined;\n\n\t\t\t\tthis.available_formats = [];\n\t\t\t\tthis.matching_formats = this.available_formats;\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'reset_format',\n\t\tvalue: function reset_format() {\n\t\t\tthis.chosen_format = undefined;\n\t\t\tthis.template = undefined;\n\t\t\tthis.partially_populated_template = undefined;\n\t\t\tthis.last_match_position = -1;\n\t\t}\n\n\t\t// Format each digit of national phone number (so far)\n\t\t// using the newly selected phone number pattern.\n\n\t}, {\n\t\tkey: 'reformat_national_number',\n\t\tvalue: function reformat_national_number() {\n\t\t\t// Format each digit of national phone number (so far)\n\t\t\t// using the selected phone number pattern.\n\t\t\treturn this.format_next_national_number_digits(this.national_number);\n\t\t}\n\t}, {\n\t\tkey: 'initialize_phone_number_formats_for_this_country_calling_code',\n\t\tvalue: function initialize_phone_number_formats_for_this_country_calling_code() {\n\t\t\t// Get all \"eligible\" phone number formats for this country\n\t\t\tthis.available_formats = this.metadata.formats().filter(function (format) {\n\t\t\t\treturn ELIGIBLE_FORMAT_PATTERN.test(format.internationalFormat());\n\t\t\t});\n\n\t\t\tthis.matching_formats = this.available_formats;\n\t\t}\n\t}, {\n\t\tkey: 'match_formats_by_leading_digits',\n\t\tvalue: function match_formats_by_leading_digits() {\n\t\t\tvar leading_digits = this.national_number;\n\n\t\t\t// \"leading digits\" pattern list starts with\n\t\t\t// one of a maximum length of 3 digits,\n\t\t\t// and then with each additional digit\n\t\t\t// a more precise \"leading digits\" pattern is specified.\n\n\t\t\tvar index_of_leading_digits_pattern = leading_digits.length - MIN_LEADING_DIGITS_LENGTH;\n\n\t\t\tif (index_of_leading_digits_pattern < 0) {\n\t\t\t\tindex_of_leading_digits_pattern = 0;\n\t\t\t}\n\n\t\t\tthis.matching_formats = this.matching_formats.filter(function (format) {\n\t\t\t\tvar leading_digits_pattern_count = format.leadingDigitsPatterns().length;\n\n\t\t\t\t// Keep everything that isn't restricted by leading digits.\n\t\t\t\tif (leading_digits_pattern_count === 0) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tvar leading_digits_pattern_index = Math.min(index_of_leading_digits_pattern, leading_digits_pattern_count - 1);\n\t\t\t\tvar leading_digits_pattern = format.leadingDigitsPatterns()[leading_digits_pattern_index];\n\n\t\t\t\t// Brackets are required for `^` to be applied to\n\t\t\t\t// all or-ed (`|`) parts, not just the first one.\n\t\t\t\treturn new RegExp('^(' + leading_digits_pattern + ')').test(leading_digits);\n\t\t\t});\n\n\t\t\t// If there was a phone number format chosen\n\t\t\t// and it no longer holds given the new leading digits then reset it.\n\t\t\t// The test for this `if` condition is marked as:\n\t\t\t// \"Reset a chosen format when it no longer holds given the new leading digits\".\n\t\t\t// To construct a valid test case for this one can find a country\n\t\t\t// in `PhoneNumberMetadata.xml` yielding one format for 3 `<leadingDigits>`\n\t\t\t// and yielding another format for 4 `<leadingDigits>` (Australia in this case).\n\t\t\tif (this.chosen_format && this.matching_formats.indexOf(this.chosen_format) === -1) {\n\t\t\t\tthis.reset_format();\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'should_format',\n\t\tvalue: function should_format() {\n\t\t\t// Start matching any formats at all when the national number\n\t\t\t// entered so far is at least 3 digits long,\n\t\t\t// otherwise format matching would give false negatives\n\t\t\t// like when the digits entered so far are `2`\n\t\t\t// and the leading digits pattern is `21` –\n\t\t\t// it's quite obvious in this case that the format could be the one\n\t\t\t// but due to the absence of further digits it would give false negative.\n\t\t\t//\n\t\t\t// Google could have provided leading digits patterns starting\n\t\t\t// with a single digit but they chose not to (for whatever reasons).\n\t\t\t//\n\t\t\treturn this.national_number >= MIN_LEADING_DIGITS_LENGTH;\n\t\t}\n\n\t\t// Check to see if there is an exact pattern match for these digits. If so, we\n\t\t// should use this instead of any other formatting template whose\n\t\t// `leadingDigitsPattern` also matches the input.\n\n\t}, {\n\t\tkey: 'attempt_to_format_complete_phone_number',\n\t\tvalue: function attempt_to_format_complete_phone_number() {\n\t\t\tfor (var _iterator = this.matching_formats, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n\t\t\t\tvar _ref;\n\n\t\t\t\tif (_isArray) {\n\t\t\t\t\tif (_i >= _iterator.length) break;\n\t\t\t\t\t_ref = _iterator[_i++];\n\t\t\t\t} else {\n\t\t\t\t\t_i = _iterator.next();\n\t\t\t\t\tif (_i.done) break;\n\t\t\t\t\t_ref = _i.value;\n\t\t\t\t}\n\n\t\t\t\tvar format = _ref;\n\n\t\t\t\tvar matcher = new RegExp('^(?:' + format.pattern() + ')$');\n\n\t\t\t\tif (!matcher.test(this.national_number)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (!this.is_format_applicable(format)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// To leave the formatter in a consistent state\n\t\t\t\tthis.reset_format();\n\t\t\t\tthis.chosen_format = format;\n\n\t\t\t\tvar formatted_number = (0,_format__WEBPACK_IMPORTED_MODULE_4__.format_national_number_using_format)(this.national_number, format, this.is_international(), this.national_prefix.length > 0, this.metadata);\n\n\t\t\t\t// Set `this.template` and `this.partially_populated_template`.\n\t\t\t\t//\n\t\t\t\t// `else` case doesn't ever happen\n\t\t\t\t// with the current metadata,\n\t\t\t\t// but just in case.\n\t\t\t\t//\n\t\t\t\t/* istanbul ignore else */\n\t\t\t\tif (this.create_formatting_template(format)) {\n\t\t\t\t\t// Populate `this.partially_populated_template`\n\t\t\t\t\tthis.reformat_national_number();\n\t\t\t\t} else {\n\t\t\t\t\t// Prepend `+CountryCode` in case of an international phone number\n\t\t\t\t\tvar full_number = this.full_phone_number(formatted_number);\n\t\t\t\t\tthis.template = full_number.replace(/[\\d\\+]/g, DIGIT_PLACEHOLDER);\n\t\t\t\t\tthis.partially_populated_template = full_number;\n\t\t\t\t}\n\n\t\t\t\treturn formatted_number;\n\t\t\t}\n\t\t}\n\n\t\t// Prepends `+CountryCode` in case of an international phone number\n\n\t}, {\n\t\tkey: 'full_phone_number',\n\t\tvalue: function full_phone_number(formatted_national_number) {\n\t\t\tif (this.is_international()) {\n\t\t\t\treturn '+' + this.countryCallingCode + ' ' + formatted_national_number;\n\t\t\t}\n\n\t\t\treturn formatted_national_number;\n\t\t}\n\n\t\t// Extracts the country calling code from the beginning\n\t\t// of the entered `national_number` (so far),\n\t\t// and places the remaining input into the `national_number`.\n\n\t}, {\n\t\tkey: 'extract_country_calling_code',\n\t\tvalue: function extract_country_calling_code() {\n\t\t\tvar _extractCountryCallin = (0,_common__WEBPACK_IMPORTED_MODULE_0__.extractCountryCallingCode)(this.parsed_input, this.default_country, this.metadata),\n\t\t\t    countryCallingCode = _extractCountryCallin.countryCallingCode,\n\t\t\t    number = _extractCountryCallin.number;\n\n\t\t\tif (!countryCallingCode) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.countryCallingCode = countryCallingCode;\n\n\t\t\t// Sometimes people erroneously write national prefix\n\t\t\t// as part of an international number, e.g. +44 (0) ....\n\t\t\t// This violates the standards for international phone numbers,\n\t\t\t// so \"As You Type\" formatter assumes no national prefix\n\t\t\t// when parsing a phone number starting from `+`.\n\t\t\t// Even if it did attempt to filter-out that national prefix\n\t\t\t// it would look weird for a user trying to enter a digit\n\t\t\t// because from user's perspective the keyboard \"wouldn't be working\".\n\t\t\tthis.national_number = number;\n\n\t\t\tthis.metadata.chooseCountryByCountryCallingCode(countryCallingCode);\n\t\t\treturn this.metadata.selectedCountry() !== undefined;\n\t\t}\n\t}, {\n\t\tkey: 'extract_national_prefix',\n\t\tvalue: function extract_national_prefix() {\n\t\t\tthis.national_prefix = '';\n\n\t\t\tif (!this.metadata.selectedCountry()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Only strip national prefixes for non-international phone numbers\n\t\t\t// because national prefixes can't be present in international phone numbers.\n\t\t\t// Otherwise, while forgiving, it would parse a NANPA number `+1 1877 215 5230`\n\t\t\t// first to `1877 215 5230` and then, stripping the leading `1`, to `877 215 5230`,\n\t\t\t// and then it would assume that's a valid number which it isn't.\n\t\t\t// So no forgiveness for grandmas here.\n\t\t\t// The issue asking for this fix:\n\t\t\t// https://github.com/catamphetamine/libphonenumber-js/issues/159\n\n\t\t\tvar _strip_national_prefi = (0,_parse__WEBPACK_IMPORTED_MODULE_2__.strip_national_prefix_and_carrier_code)(this.national_number, this.metadata),\n\t\t\t    potential_national_number = _strip_national_prefi.number;\n\n\t\t\t// We require that the NSN remaining after stripping the national prefix and\n\t\t\t// carrier code be long enough to be a possible length for the region.\n\t\t\t// Otherwise, we don't do the stripping, since the original number could be\n\t\t\t// a valid short number.\n\n\n\t\t\tif (!this.metadata.possibleLengths() || this.is_possible_number(this.national_number) && !this.is_possible_number(potential_national_number)) {\n\t\t\t\t// Verify the parsed national (significant) number for this country\n\t\t\t\tvar national_number_rule = new RegExp(this.metadata.nationalNumberPattern());\n\t\t\t\t//\n\t\t\t\t// If the original number (before stripping national prefix) was viable,\n\t\t\t\t// and the resultant number is not, then prefer the original phone number.\n\t\t\t\t// This is because for some countries (e.g. Russia) the same digit could be both\n\t\t\t\t// a national prefix and a leading digit of a valid national phone number,\n\t\t\t\t// like `8` is the national prefix for Russia and both\n\t\t\t\t// `8 800 555 35 35` and `800 555 35 35` are valid numbers.\n\t\t\t\tif ((0,_common__WEBPACK_IMPORTED_MODULE_0__.matches_entirely)(this.national_number, national_number_rule) && !(0,_common__WEBPACK_IMPORTED_MODULE_0__.matches_entirely)(potential_national_number, national_number_rule)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.national_prefix = this.national_number.slice(0, this.national_number.length - potential_national_number.length);\n\t\t\tthis.national_number = potential_national_number;\n\n\t\t\treturn this.national_prefix;\n\t\t}\n\t}, {\n\t\tkey: 'is_possible_number',\n\t\tvalue: function is_possible_number(number) {\n\t\t\tvar validation_result = (0,_getNumberType__WEBPACK_IMPORTED_MODULE_5__.check_number_length_for_type)(number, undefined, this.metadata);\n\t\t\tswitch (validation_result) {\n\t\t\t\tcase 'IS_POSSIBLE':\n\t\t\t\t\treturn true;\n\t\t\t\t// case 'IS_POSSIBLE_LOCAL_ONLY':\n\t\t\t\t// \treturn !this.is_international()\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'choose_another_format',\n\t\tvalue: function choose_another_format() {\n\t\t\t// When there are multiple available formats, the formatter uses the first\n\t\t\t// format where a formatting template could be created.\n\t\t\tfor (var _iterator2 = this.matching_formats, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n\t\t\t\tvar _ref2;\n\n\t\t\t\tif (_isArray2) {\n\t\t\t\t\tif (_i2 >= _iterator2.length) break;\n\t\t\t\t\t_ref2 = _iterator2[_i2++];\n\t\t\t\t} else {\n\t\t\t\t\t_i2 = _iterator2.next();\n\t\t\t\t\tif (_i2.done) break;\n\t\t\t\t\t_ref2 = _i2.value;\n\t\t\t\t}\n\n\t\t\t\tvar format = _ref2;\n\n\t\t\t\t// If this format is currently being used\n\t\t\t\t// and is still possible, then stick to it.\n\t\t\t\tif (this.chosen_format === format) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// If this `format` is suitable for \"as you type\",\n\t\t\t\t// then extract the template from this format\n\t\t\t\t// and use it to format the phone number being input.\n\n\t\t\t\tif (!this.is_format_applicable(format)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (!this.create_formatting_template(format)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tthis.chosen_format = format;\n\n\t\t\t\t// With a new formatting template, the matched position\n\t\t\t\t// using the old template needs to be reset.\n\t\t\t\tthis.last_match_position = -1;\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// No format matches the phone number,\n\t\t\t// therefore set `country` to `undefined`\n\t\t\t// (or to the default country).\n\t\t\tthis.reset_country();\n\n\t\t\t// No format matches the national phone number entered\n\t\t\tthis.reset_format();\n\t\t}\n\t}, {\n\t\tkey: 'is_format_applicable',\n\t\tvalue: function is_format_applicable(format) {\n\t\t\t// If national prefix is mandatory for this phone number format\n\t\t\t// and the user didn't input the national prefix,\n\t\t\t// then this phone number format isn't suitable.\n\t\t\tif (!this.is_international() && !this.national_prefix && format.nationalPrefixIsMandatoryWhenFormatting()) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t}, {\n\t\tkey: 'create_formatting_template',\n\t\tvalue: function create_formatting_template(format) {\n\t\t\t// The formatter doesn't format numbers when numberPattern contains '|', e.g.\n\t\t\t// (20|3)\\d{4}. In those cases we quickly return.\n\t\t\t// (Though there's no such format in current metadata)\n\t\t\t/* istanbul ignore if */\n\t\t\tif (format.pattern().indexOf('|') >= 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Get formatting template for this phone number format\n\t\t\tvar template = this.get_template_for_phone_number_format_pattern(format);\n\n\t\t\t// If the national number entered is too long\n\t\t\t// for any phone number format, then abort.\n\t\t\tif (!template) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// This one is for national number only\n\t\t\tthis.partially_populated_template = template;\n\n\t\t\t// For convenience, the public `.template` property\n\t\t\t// contains the whole international number\n\t\t\t// if the phone number being input is international:\n\t\t\t// 'x' for the '+' sign, 'x'es for the country phone code,\n\t\t\t// a spacebar and then the template for the formatted national number.\n\t\t\tif (this.is_international()) {\n\t\t\t\tthis.template = DIGIT_PLACEHOLDER + repeat(DIGIT_PLACEHOLDER, this.countryCallingCode.length) + ' ' + template;\n\t\t\t}\n\t\t\t// For local numbers, replace national prefix\n\t\t\t// with a digit placeholder.\n\t\t\telse {\n\t\t\t\t\tthis.template = template.replace(/\\d/g, DIGIT_PLACEHOLDER);\n\t\t\t\t}\n\n\t\t\t// This one is for the full phone number\n\t\t\treturn this.template;\n\t\t}\n\n\t\t// Generates formatting template for a phone number format\n\n\t}, {\n\t\tkey: 'get_template_for_phone_number_format_pattern',\n\t\tvalue: function get_template_for_phone_number_format_pattern(format) {\n\t\t\t// A very smart trick by the guys at Google\n\t\t\tvar number_pattern = format.pattern()\n\t\t\t// Replace anything in the form of [..] with \\d\n\t\t\t.replace(CHARACTER_CLASS_PATTERN, '\\\\d')\n\t\t\t// Replace any standalone digit (not the one in `{}`) with \\d\n\t\t\t.replace(STANDALONE_DIGIT_PATTERN, '\\\\d');\n\n\t\t\t// This match will always succeed,\n\t\t\t// because the \"longest dummy phone number\"\n\t\t\t// has enough length to accomodate any possible\n\t\t\t// national phone number format pattern.\n\t\t\tvar dummy_phone_number_matching_format_pattern = LONGEST_DUMMY_PHONE_NUMBER.match(number_pattern)[0];\n\n\t\t\t// If the national number entered is too long\n\t\t\t// for any phone number format, then abort.\n\t\t\tif (this.national_number.length > dummy_phone_number_matching_format_pattern.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Prepare the phone number format\n\t\t\tvar number_format = this.get_format_format(format);\n\n\t\t\t// Get a formatting template which can be used to efficiently format\n\t\t\t// a partial number where digits are added one by one.\n\n\t\t\t// Below `strict_pattern` is used for the\n\t\t\t// regular expression (with `^` and `$`).\n\t\t\t// This wasn't originally in Google's `libphonenumber`\n\t\t\t// and I guess they don't really need it\n\t\t\t// because they're not using \"templates\" to format phone numbers\n\t\t\t// but I added `strict_pattern` after encountering\n\t\t\t// South Korean phone number formatting bug.\n\t\t\t//\n\t\t\t// Non-strict regular expression bug demonstration:\n\t\t\t//\n\t\t\t// this.national_number : `111111111` (9 digits)\n\t\t\t//\n\t\t\t// number_pattern : (\\d{2})(\\d{3,4})(\\d{4})\n\t\t\t// number_format : `$1 $2 $3`\n\t\t\t// dummy_phone_number_matching_format_pattern : `9999999999` (10 digits)\n\t\t\t//\n\t\t\t// '9999999999'.replace(new RegExp(/(\\d{2})(\\d{3,4})(\\d{4})/g), '$1 $2 $3') = \"99 9999 9999\"\n\t\t\t//\n\t\t\t// template : xx xxxx xxxx\n\t\t\t//\n\t\t\t// But the correct template in this case is `xx xxx xxxx`.\n\t\t\t// The template was generated incorrectly because of the\n\t\t\t// `{3,4}` variability in the `number_pattern`.\n\t\t\t//\n\t\t\t// The fix is, if `this.national_number` has already sufficient length\n\t\t\t// to satisfy the `number_pattern` completely then `this.national_number` is used\n\t\t\t// instead of `dummy_phone_number_matching_format_pattern`.\n\n\t\t\tvar strict_pattern = new RegExp('^' + number_pattern + '$');\n\t\t\tvar national_number_dummy_digits = this.national_number.replace(/\\d/g, DUMMY_DIGIT);\n\n\t\t\t// If `this.national_number` has already sufficient length\n\t\t\t// to satisfy the `number_pattern` completely then use it\n\t\t\t// instead of `dummy_phone_number_matching_format_pattern`.\n\t\t\tif (strict_pattern.test(national_number_dummy_digits)) {\n\t\t\t\tdummy_phone_number_matching_format_pattern = national_number_dummy_digits;\n\t\t\t}\n\n\t\t\t// Generate formatting template for this phone number format\n\t\t\treturn dummy_phone_number_matching_format_pattern\n\t\t\t// Format the dummy phone number according to the format\n\t\t\t.replace(new RegExp(number_pattern), number_format)\n\t\t\t// Replace each dummy digit with a DIGIT_PLACEHOLDER\n\t\t\t.replace(DUMMY_DIGIT_MATCHER, DIGIT_PLACEHOLDER);\n\t\t}\n\t}, {\n\t\tkey: 'format_next_national_number_digits',\n\t\tvalue: function format_next_national_number_digits(digits) {\n\t\t\t// Using `.split('')` to iterate through a string here\n\t\t\t// to avoid requiring `Symbol.iterator` polyfill.\n\t\t\t// `.split('')` is generally not safe for Unicode,\n\t\t\t// but in this particular case for `digits` it is safe.\n\t\t\t// for (const digit of digits)\n\t\t\tfor (var _iterator3 = digits.split(''), _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n\t\t\t\tvar _ref3;\n\n\t\t\t\tif (_isArray3) {\n\t\t\t\t\tif (_i3 >= _iterator3.length) break;\n\t\t\t\t\t_ref3 = _iterator3[_i3++];\n\t\t\t\t} else {\n\t\t\t\t\t_i3 = _iterator3.next();\n\t\t\t\t\tif (_i3.done) break;\n\t\t\t\t\t_ref3 = _i3.value;\n\t\t\t\t}\n\n\t\t\t\tvar digit = _ref3;\n\n\t\t\t\t// If there is room for more digits in current `template`,\n\t\t\t\t// then set the next digit in the `template`,\n\t\t\t\t// and return the formatted digits so far.\n\n\t\t\t\t// If more digits are entered than the current format could handle\n\t\t\t\tif (this.partially_populated_template.slice(this.last_match_position + 1).search(DIGIT_PLACEHOLDER_MATCHER) === -1) {\n\t\t\t\t\t// Reset the current format,\n\t\t\t\t\t// so that the new format will be chosen\n\t\t\t\t\t// in a subsequent `this.choose_another_format()` call\n\t\t\t\t\t// later in code.\n\t\t\t\t\tthis.chosen_format = undefined;\n\t\t\t\t\tthis.template = undefined;\n\t\t\t\t\tthis.partially_populated_template = undefined;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.last_match_position = this.partially_populated_template.search(DIGIT_PLACEHOLDER_MATCHER);\n\t\t\t\tthis.partially_populated_template = this.partially_populated_template.replace(DIGIT_PLACEHOLDER_MATCHER, digit);\n\t\t\t}\n\n\t\t\t// Return the formatted phone number so far\n\t\t\treturn close_dangling_braces(this.partially_populated_template, this.last_match_position + 1).replace(DIGIT_PLACEHOLDER_MATCHER_GLOBAL, ' ');\n\t\t}\n\t}, {\n\t\tkey: 'is_international',\n\t\tvalue: function is_international() {\n\t\t\treturn this.parsed_input && this.parsed_input[0] === '+';\n\t\t}\n\t}, {\n\t\tkey: 'get_format_format',\n\t\tvalue: function get_format_format(format) {\n\t\t\tif (this.is_international()) {\n\t\t\t\treturn (0,_format__WEBPACK_IMPORTED_MODULE_4__.local_to_international_style)(format.internationalFormat());\n\t\t\t}\n\n\t\t\t// If national prefix formatting rule is set\n\t\t\t// for this phone number format\n\t\t\tif (format.nationalPrefixFormattingRule()) {\n\t\t\t\t// If the user did input the national prefix\n\t\t\t\t// (or if the national prefix formatting rule does not require national prefix)\n\t\t\t\t// then maybe make it part of the phone number template\n\t\t\t\tif (this.national_prefix || !format.usesNationalPrefix()) {\n\t\t\t\t\t// Make the national prefix part of the phone number template\n\t\t\t\t\treturn format.format().replace(_format__WEBPACK_IMPORTED_MODULE_4__.FIRST_GROUP_PATTERN, format.nationalPrefixFormattingRule());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn format.format();\n\t\t}\n\n\t\t// Determines the country of the phone number\n\t\t// entered so far based on the country phone code\n\t\t// and the national phone number.\n\n\t}, {\n\t\tkey: 'determine_the_country',\n\t\tvalue: function determine_the_country() {\n\t\t\tthis.country = (0,_parse__WEBPACK_IMPORTED_MODULE_2__.find_country_code)(this.countryCallingCode, this.national_number, this.metadata);\n\t\t}\n\t}, {\n\t\tkey: 'getNationalNumber',\n\t\tvalue: function getNationalNumber() {\n\t\t\treturn this.national_number;\n\t\t}\n\t}]);\n\n\treturn AsYouType;\n}();\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AsYouType);\n\n\nfunction close_dangling_braces(template, cut_before) {\n\tvar retained_template = template.slice(0, cut_before);\n\n\tvar opening_braces = count_occurences('(', retained_template);\n\tvar closing_braces = count_occurences(')', retained_template);\n\n\tvar dangling_braces = opening_braces - closing_braces;\n\n\twhile (dangling_braces > 0 && cut_before < template.length) {\n\t\tif (template[cut_before] === ')') {\n\t\t\tdangling_braces--;\n\t\t}\n\t\tcut_before++;\n\t}\n\n\treturn template.slice(0, cut_before);\n}\n\n// Counts all occurences of a symbol in a string.\n// Unicode-unsafe (because using `.split()`).\nfunction count_occurences(symbol, string) {\n\tvar count = 0;\n\n\t// Using `.split('')` to iterate through a string here\n\t// to avoid requiring `Symbol.iterator` polyfill.\n\t// `.split('')` is generally not safe for Unicode,\n\t// but in this particular case for counting brackets it is safe.\n\t// for (const character of string)\n\tfor (var _iterator4 = string.split(''), _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n\t\tvar _ref4;\n\n\t\tif (_isArray4) {\n\t\t\tif (_i4 >= _iterator4.length) break;\n\t\t\t_ref4 = _iterator4[_i4++];\n\t\t} else {\n\t\t\t_i4 = _iterator4.next();\n\t\t\tif (_i4.done) break;\n\t\t\t_ref4 = _i4.value;\n\t\t}\n\n\t\tvar character = _ref4;\n\n\t\tif (character === symbol) {\n\t\t\tcount++;\n\t\t}\n\t}\n\n\treturn count;\n}\n\n// Repeats a string (or a symbol) N times.\n// http://stackoverflow.com/questions/202605/repeat-string-javascript\nfunction repeat(string, times) {\n\tif (times < 1) {\n\t\treturn '';\n\t}\n\n\tvar result = '';\n\n\twhile (times > 1) {\n\t\tif (times & 1) {\n\t\t\tresult += string;\n\t\t}\n\n\t\ttimes >>= 1;\n\t\tstring += string;\n\t}\n\n\treturn result + string;\n}\n//# sourceMappingURL=AsYouType.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/AsYouType.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/IDD.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/IDD.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getIDDPrefix: () => (/* binding */ getIDDPrefix),\n/* harmony export */   stripIDDPrefix: () => (/* binding */ stripIDDPrefix)\n/* harmony export */ });\n/* harmony import */ var _metadata__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./metadata */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/metadata.js\");\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/common.js\");\n\n\n\nvar CAPTURING_DIGIT_PATTERN = new RegExp('([' + _common__WEBPACK_IMPORTED_MODULE_0__.VALID_DIGITS + '])');\n\n/**\r\n * Pattern that makes it easy to distinguish whether a region has a single\r\n * international dialing prefix or not. If a region has a single international\r\n * prefix (e.g. 011 in USA), it will be represented as a string that contains\r\n * a sequence of ASCII digits, and possibly a tilde, which signals waiting for\r\n * the tone. If there are multiple available international prefixes in a\r\n * region, they will be represented as a regex string that always contains one\r\n * or more characters that are not ASCII digits or a tilde.\r\n */\nvar SINGLE_IDD_PREFIX = /[\\d]+(?:[~\\u2053\\u223C\\uFF5E][\\d]+)?/;\n\n// export function isSingleIDDPrefix(IDDPrefix)\n// {\n// \treturn matches_entirely(IDDPrefix, SINGLE_IDD_PREFIX)\n// }\n\n// For regions that have multiple IDD prefixes\n// a preferred IDD prefix is returned.\nfunction getIDDPrefix(country, metadata) {\n\tvar countryMetadata = new _metadata__WEBPACK_IMPORTED_MODULE_1__[\"default\"](metadata);\n\tcountryMetadata.country(country);\n\n\tif ((0,_common__WEBPACK_IMPORTED_MODULE_0__.matches_entirely)(countryMetadata.IDDPrefix(), SINGLE_IDD_PREFIX)) {\n\t\treturn countryMetadata.IDDPrefix();\n\t}\n\n\treturn countryMetadata.defaultIDDPrefix();\n}\n\nfunction stripIDDPrefix(number, country, metadata) {\n\tif (!country) {\n\t\treturn;\n\t}\n\n\t// Check if the number is IDD-prefixed.\n\n\tvar countryMetadata = new _metadata__WEBPACK_IMPORTED_MODULE_1__[\"default\"](metadata);\n\tcountryMetadata.country(country);\n\n\tvar IDDPrefixPattern = new RegExp(countryMetadata.IDDPrefix());\n\n\tif (number.search(IDDPrefixPattern) !== 0) {\n\t\treturn;\n\t}\n\n\t// Strip IDD prefix.\n\tnumber = number.slice(number.match(IDDPrefixPattern)[0].length);\n\n\t// Some kind of a weird edge case.\n\t// No explanation from Google given.\n\tvar matchedGroups = number.match(CAPTURING_DIGIT_PATTERN);\n\t/* istanbul ignore next */\n\tif (matchedGroups && matchedGroups[1] != null && matchedGroups[1].length > 0) {\n\t\tif (matchedGroups[1] === '0') {\n\t\t\treturn;\n\t\t}\n\t}\n\n\treturn number;\n}\n//# sourceMappingURL=IDD.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vbGlicGhvbmVudW1iZXItanNAMS4zLjAvbm9kZV9tb2R1bGVzL2xpYnBob25lbnVtYmVyLWpzL2VzNi9JREQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFrQztBQUN3Qjs7QUFFMUQsZ0RBQWdELGlEQUFZOztBQUU1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ087QUFDUCwyQkFBMkIsaURBQVE7QUFDbkM7O0FBRUEsS0FBSyx5REFBZ0I7QUFDckI7QUFDQTs7QUFFQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBOztBQUVBOztBQUVBLDJCQUEyQixpREFBUTtBQUNuQzs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQHdhZ25lcmFuZGNvL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzLy5wbnBtL2xpYnBob25lbnVtYmVyLWpzQDEuMy4wL25vZGVfbW9kdWxlcy9saWJwaG9uZW51bWJlci1qcy9lczYvSURELmpzP2YwZDIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE1ldGFkYXRhIGZyb20gJy4vbWV0YWRhdGEnO1xuaW1wb3J0IHsgbWF0Y2hlc19lbnRpcmVseSwgVkFMSURfRElHSVRTIH0gZnJvbSAnLi9jb21tb24nO1xuXG52YXIgQ0FQVFVSSU5HX0RJR0lUX1BBVFRFUk4gPSBuZXcgUmVnRXhwKCcoWycgKyBWQUxJRF9ESUdJVFMgKyAnXSknKTtcblxuLyoqXHJcbiAqIFBhdHRlcm4gdGhhdCBtYWtlcyBpdCBlYXN5IHRvIGRpc3Rpbmd1aXNoIHdoZXRoZXIgYSByZWdpb24gaGFzIGEgc2luZ2xlXHJcbiAqIGludGVybmF0aW9uYWwgZGlhbGluZyBwcmVmaXggb3Igbm90LiBJZiBhIHJlZ2lvbiBoYXMgYSBzaW5nbGUgaW50ZXJuYXRpb25hbFxyXG4gKiBwcmVmaXggKGUuZy4gMDExIGluIFVTQSksIGl0IHdpbGwgYmUgcmVwcmVzZW50ZWQgYXMgYSBzdHJpbmcgdGhhdCBjb250YWluc1xyXG4gKiBhIHNlcXVlbmNlIG9mIEFTQ0lJIGRpZ2l0cywgYW5kIHBvc3NpYmx5IGEgdGlsZGUsIHdoaWNoIHNpZ25hbHMgd2FpdGluZyBmb3JcclxuICogdGhlIHRvbmUuIElmIHRoZXJlIGFyZSBtdWx0aXBsZSBhdmFpbGFibGUgaW50ZXJuYXRpb25hbCBwcmVmaXhlcyBpbiBhXHJcbiAqIHJlZ2lvbiwgdGhleSB3aWxsIGJlIHJlcHJlc2VudGVkIGFzIGEgcmVnZXggc3RyaW5nIHRoYXQgYWx3YXlzIGNvbnRhaW5zIG9uZVxyXG4gKiBvciBtb3JlIGNoYXJhY3RlcnMgdGhhdCBhcmUgbm90IEFTQ0lJIGRpZ2l0cyBvciBhIHRpbGRlLlxyXG4gKi9cbnZhciBTSU5HTEVfSUREX1BSRUZJWCA9IC9bXFxkXSsoPzpbflxcdTIwNTNcXHUyMjNDXFx1RkY1RV1bXFxkXSspPy87XG5cbi8vIGV4cG9ydCBmdW5jdGlvbiBpc1NpbmdsZUlERFByZWZpeChJRERQcmVmaXgpXG4vLyB7XG4vLyBcdHJldHVybiBtYXRjaGVzX2VudGlyZWx5KElERFByZWZpeCwgU0lOR0xFX0lERF9QUkVGSVgpXG4vLyB9XG5cbi8vIEZvciByZWdpb25zIHRoYXQgaGF2ZSBtdWx0aXBsZSBJREQgcHJlZml4ZXNcbi8vIGEgcHJlZmVycmVkIElERCBwcmVmaXggaXMgcmV0dXJuZWQuXG5leHBvcnQgZnVuY3Rpb24gZ2V0SUREUHJlZml4KGNvdW50cnksIG1ldGFkYXRhKSB7XG5cdHZhciBjb3VudHJ5TWV0YWRhdGEgPSBuZXcgTWV0YWRhdGEobWV0YWRhdGEpO1xuXHRjb3VudHJ5TWV0YWRhdGEuY291bnRyeShjb3VudHJ5KTtcblxuXHRpZiAobWF0Y2hlc19lbnRpcmVseShjb3VudHJ5TWV0YWRhdGEuSUREUHJlZml4KCksIFNJTkdMRV9JRERfUFJFRklYKSkge1xuXHRcdHJldHVybiBjb3VudHJ5TWV0YWRhdGEuSUREUHJlZml4KCk7XG5cdH1cblxuXHRyZXR1cm4gY291bnRyeU1ldGFkYXRhLmRlZmF1bHRJRERQcmVmaXgoKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHN0cmlwSUREUHJlZml4KG51bWJlciwgY291bnRyeSwgbWV0YWRhdGEpIHtcblx0aWYgKCFjb3VudHJ5KSB7XG5cdFx0cmV0dXJuO1xuXHR9XG5cblx0Ly8gQ2hlY2sgaWYgdGhlIG51bWJlciBpcyBJREQtcHJlZml4ZWQuXG5cblx0dmFyIGNvdW50cnlNZXRhZGF0YSA9IG5ldyBNZXRhZGF0YShtZXRhZGF0YSk7XG5cdGNvdW50cnlNZXRhZGF0YS5jb3VudHJ5KGNvdW50cnkpO1xuXG5cdHZhciBJRERQcmVmaXhQYXR0ZXJuID0gbmV3IFJlZ0V4cChjb3VudHJ5TWV0YWRhdGEuSUREUHJlZml4KCkpO1xuXG5cdGlmIChudW1iZXIuc2VhcmNoKElERFByZWZpeFBhdHRlcm4pICE9PSAwKSB7XG5cdFx0cmV0dXJuO1xuXHR9XG5cblx0Ly8gU3RyaXAgSUREIHByZWZpeC5cblx0bnVtYmVyID0gbnVtYmVyLnNsaWNlKG51bWJlci5tYXRjaChJRERQcmVmaXhQYXR0ZXJuKVswXS5sZW5ndGgpO1xuXG5cdC8vIFNvbWUga2luZCBvZiBhIHdlaXJkIGVkZ2UgY2FzZS5cblx0Ly8gTm8gZXhwbGFuYXRpb24gZnJvbSBHb29nbGUgZ2l2ZW4uXG5cdHZhciBtYXRjaGVkR3JvdXBzID0gbnVtYmVyLm1hdGNoKENBUFRVUklOR19ESUdJVF9QQVRURVJOKTtcblx0LyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cblx0aWYgKG1hdGNoZWRHcm91cHMgJiYgbWF0Y2hlZEdyb3Vwc1sxXSAhPSBudWxsICYmIG1hdGNoZWRHcm91cHNbMV0ubGVuZ3RoID4gMCkge1xuXHRcdGlmIChtYXRjaGVkR3JvdXBzWzFdID09PSAnMCcpIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gbnVtYmVyO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SURELmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/IDD.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/RFC3966.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/RFC3966.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatRFC3966: () => (/* binding */ formatRFC3966),\n/* harmony export */   parseRFC3966: () => (/* binding */ parseRFC3966)\n/* harmony export */ });\n/* harmony import */ var _parse__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parse */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/parse.js\");\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\n\n\n// https://www.ietf.org/rfc/rfc3966.txt\n\n/**\r\n * @param  {string} text - Phone URI (RFC 3966).\r\n * @return {object} `{ ?number, ?ext }`.\r\n */\nfunction parseRFC3966(text) {\n\tvar number = void 0;\n\tvar ext = void 0;\n\n\t// Replace \"tel:\" with \"tel=\" for parsing convenience.\n\ttext = text.replace(/^tel:/, 'tel=');\n\n\tfor (var _iterator = text.split(';'), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n\t\tvar _ref;\n\n\t\tif (_isArray) {\n\t\t\tif (_i >= _iterator.length) break;\n\t\t\t_ref = _iterator[_i++];\n\t\t} else {\n\t\t\t_i = _iterator.next();\n\t\t\tif (_i.done) break;\n\t\t\t_ref = _i.value;\n\t\t}\n\n\t\tvar part = _ref;\n\n\t\tvar _part$split = part.split('='),\n\t\t    _part$split2 = _slicedToArray(_part$split, 2),\n\t\t    name = _part$split2[0],\n\t\t    value = _part$split2[1];\n\n\t\tswitch (name) {\n\t\t\tcase 'tel':\n\t\t\t\tnumber = value;\n\t\t\t\tbreak;\n\t\t\tcase 'ext':\n\t\t\t\text = value;\n\t\t\t\tbreak;\n\t\t\tcase 'phone-context':\n\t\t\t\t// Only \"country contexts\" are supported.\n\t\t\t\t// \"Domain contexts\" are ignored.\n\t\t\t\tif (value[0] === '+') {\n\t\t\t\t\tnumber = value + number;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t// If the phone number is not viable, then abort.\n\tif (!(0,_parse__WEBPACK_IMPORTED_MODULE_0__.is_viable_phone_number)(number)) {\n\t\treturn {};\n\t}\n\n\tvar result = { number: number };\n\tif (ext) {\n\t\tresult.ext = ext;\n\t}\n\treturn result;\n}\n\n/**\r\n * @param  {object} - `{ ?number, ?extension }`.\r\n * @return {string} Phone URI (RFC 3966).\r\n */\nfunction formatRFC3966(_ref2) {\n\tvar number = _ref2.number,\n\t    ext = _ref2.ext;\n\n\tif (!number) {\n\t\treturn '';\n\t}\n\n\tif (number[0] !== '+') {\n\t\tthrow new Error('\"formatRFC3966()\" expects \"number\" to be in E.164 format.');\n\t}\n\n\treturn 'tel:' + number + (ext ? ';ext=' + ext : '');\n}\n//# sourceMappingURL=RFC3966.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vbGlicGhvbmVudW1iZXItanNAMS4zLjAvbm9kZV9tb2R1bGVzL2xpYnBob25lbnVtYmVyLWpzL2VzNi9SRkMzOTY2LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLG1DQUFtQyxpQ0FBaUMsZUFBZSxlQUFlLGdCQUFnQixvQkFBb0IsTUFBTSwwQ0FBMEMsK0JBQStCLGFBQWEscUJBQXFCLHVDQUF1QyxjQUFjLFdBQVcsWUFBWSxVQUFVLE1BQU0sMkNBQTJDLFVBQVUsc0JBQXNCLGVBQWUsMkJBQTJCLDBCQUEwQixjQUFjLDJDQUEyQyxnQ0FBZ0MsT0FBTyxtRkFBbUY7O0FBRXBtQjs7QUFFakQ7O0FBRUE7QUFDQSxZQUFZLFFBQVE7QUFDcEIsWUFBWSxRQUFRLEdBQUcsZUFBZTtBQUN0QztBQUNPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBOztBQUVBLG1DQUFtQyxrSEFBa0g7QUFDcko7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsTUFBTSw4REFBc0I7QUFDNUI7QUFDQTs7QUFFQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFlBQVksUUFBUSxLQUFLLHFCQUFxQjtBQUM5QyxZQUFZLFFBQVE7QUFDcEI7QUFDTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxtQ0FBbUM7QUFDbkM7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B3YWduZXJhbmRjby9mcm9udGVuZC8uL25vZGVfbW9kdWxlcy8ucG5wbS9saWJwaG9uZW51bWJlci1qc0AxLjMuMC9ub2RlX21vZHVsZXMvbGlicGhvbmVudW1iZXItanMvZXM2L1JGQzM5NjYuanM/ODI1NCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX3NsaWNlZFRvQXJyYXkgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIHNsaWNlSXRlcmF0b3IoYXJyLCBpKSB7IHZhciBfYXJyID0gW107IHZhciBfbiA9IHRydWU7IHZhciBfZCA9IGZhbHNlOyB2YXIgX2UgPSB1bmRlZmluZWQ7IHRyeSB7IGZvciAodmFyIF9pID0gYXJyW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3M7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHsgX2Fyci5wdXNoKF9zLnZhbHVlKTsgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrOyB9IH0gY2F0Y2ggKGVycikgeyBfZCA9IHRydWU7IF9lID0gZXJyOyB9IGZpbmFsbHkgeyB0cnkgeyBpZiAoIV9uICYmIF9pW1wicmV0dXJuXCJdKSBfaVtcInJldHVyblwiXSgpOyB9IGZpbmFsbHkgeyBpZiAoX2QpIHRocm93IF9lOyB9IH0gcmV0dXJuIF9hcnI7IH0gcmV0dXJuIGZ1bmN0aW9uIChhcnIsIGkpIHsgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgeyByZXR1cm4gYXJyOyB9IGVsc2UgaWYgKFN5bWJvbC5pdGVyYXRvciBpbiBPYmplY3QoYXJyKSkgeyByZXR1cm4gc2xpY2VJdGVyYXRvcihhcnIsIGkpOyB9IGVsc2UgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZVwiKTsgfSB9OyB9KCk7XG5cbmltcG9ydCB7IGlzX3ZpYWJsZV9waG9uZV9udW1iZXIgfSBmcm9tICcuL3BhcnNlJztcblxuLy8gaHR0cHM6Ly93d3cuaWV0Zi5vcmcvcmZjL3JmYzM5NjYudHh0XG5cbi8qKlxyXG4gKiBAcGFyYW0gIHtzdHJpbmd9IHRleHQgLSBQaG9uZSBVUkkgKFJGQyAzOTY2KS5cclxuICogQHJldHVybiB7b2JqZWN0fSBgeyA/bnVtYmVyLCA/ZXh0IH1gLlxyXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZVJGQzM5NjYodGV4dCkge1xuXHR2YXIgbnVtYmVyID0gdm9pZCAwO1xuXHR2YXIgZXh0ID0gdm9pZCAwO1xuXG5cdC8vIFJlcGxhY2UgXCJ0ZWw6XCIgd2l0aCBcInRlbD1cIiBmb3IgcGFyc2luZyBjb252ZW5pZW5jZS5cblx0dGV4dCA9IHRleHQucmVwbGFjZSgvXnRlbDovLCAndGVsPScpO1xuXG5cdGZvciAodmFyIF9pdGVyYXRvciA9IHRleHQuc3BsaXQoJzsnKSwgX2lzQXJyYXkgPSBBcnJheS5pc0FycmF5KF9pdGVyYXRvciksIF9pID0gMCwgX2l0ZXJhdG9yID0gX2lzQXJyYXkgPyBfaXRlcmF0b3IgOiBfaXRlcmF0b3JbU3ltYm9sLml0ZXJhdG9yXSgpOzspIHtcblx0XHR2YXIgX3JlZjtcblxuXHRcdGlmIChfaXNBcnJheSkge1xuXHRcdFx0aWYgKF9pID49IF9pdGVyYXRvci5sZW5ndGgpIGJyZWFrO1xuXHRcdFx0X3JlZiA9IF9pdGVyYXRvcltfaSsrXTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0X2kgPSBfaXRlcmF0b3IubmV4dCgpO1xuXHRcdFx0aWYgKF9pLmRvbmUpIGJyZWFrO1xuXHRcdFx0X3JlZiA9IF9pLnZhbHVlO1xuXHRcdH1cblxuXHRcdHZhciBwYXJ0ID0gX3JlZjtcblxuXHRcdHZhciBfcGFydCRzcGxpdCA9IHBhcnQuc3BsaXQoJz0nKSxcblx0XHQgICAgX3BhcnQkc3BsaXQyID0gX3NsaWNlZFRvQXJyYXkoX3BhcnQkc3BsaXQsIDIpLFxuXHRcdCAgICBuYW1lID0gX3BhcnQkc3BsaXQyWzBdLFxuXHRcdCAgICB2YWx1ZSA9IF9wYXJ0JHNwbGl0MlsxXTtcblxuXHRcdHN3aXRjaCAobmFtZSkge1xuXHRcdFx0Y2FzZSAndGVsJzpcblx0XHRcdFx0bnVtYmVyID0gdmFsdWU7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSAnZXh0Jzpcblx0XHRcdFx0ZXh0ID0gdmFsdWU7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0Y2FzZSAncGhvbmUtY29udGV4dCc6XG5cdFx0XHRcdC8vIE9ubHkgXCJjb3VudHJ5IGNvbnRleHRzXCIgYXJlIHN1cHBvcnRlZC5cblx0XHRcdFx0Ly8gXCJEb21haW4gY29udGV4dHNcIiBhcmUgaWdub3JlZC5cblx0XHRcdFx0aWYgKHZhbHVlWzBdID09PSAnKycpIHtcblx0XHRcdFx0XHRudW1iZXIgPSB2YWx1ZSArIG51bWJlcjtcblx0XHRcdFx0fVxuXHRcdFx0XHRicmVhaztcblx0XHR9XG5cdH1cblxuXHQvLyBJZiB0aGUgcGhvbmUgbnVtYmVyIGlzIG5vdCB2aWFibGUsIHRoZW4gYWJvcnQuXG5cdGlmICghaXNfdmlhYmxlX3Bob25lX251bWJlcihudW1iZXIpKSB7XG5cdFx0cmV0dXJuIHt9O1xuXHR9XG5cblx0dmFyIHJlc3VsdCA9IHsgbnVtYmVyOiBudW1iZXIgfTtcblx0aWYgKGV4dCkge1xuXHRcdHJlc3VsdC5leHQgPSBleHQ7XG5cdH1cblx0cmV0dXJuIHJlc3VsdDtcbn1cblxuLyoqXHJcbiAqIEBwYXJhbSAge29iamVjdH0gLSBgeyA/bnVtYmVyLCA/ZXh0ZW5zaW9uIH1gLlxyXG4gKiBAcmV0dXJuIHtzdHJpbmd9IFBob25lIFVSSSAoUkZDIDM5NjYpLlxyXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXRSRkMzOTY2KF9yZWYyKSB7XG5cdHZhciBudW1iZXIgPSBfcmVmMi5udW1iZXIsXG5cdCAgICBleHQgPSBfcmVmMi5leHQ7XG5cblx0aWYgKCFudW1iZXIpIHtcblx0XHRyZXR1cm4gJyc7XG5cdH1cblxuXHRpZiAobnVtYmVyWzBdICE9PSAnKycpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoJ1wiZm9ybWF0UkZDMzk2NigpXCIgZXhwZWN0cyBcIm51bWJlclwiIHRvIGJlIGluIEUuMTY0IGZvcm1hdC4nKTtcblx0fVxuXG5cdHJldHVybiAndGVsOicgKyBudW1iZXIgKyAoZXh0ID8gJztleHQ9JyArIGV4dCA6ICcnKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVJGQzM5NjYuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/RFC3966.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/common.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/common.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DIGITS: () => (/* binding */ DIGITS),\n/* harmony export */   MAX_LENGTH_COUNTRY_CODE: () => (/* binding */ MAX_LENGTH_COUNTRY_CODE),\n/* harmony export */   MAX_LENGTH_FOR_NSN: () => (/* binding */ MAX_LENGTH_FOR_NSN),\n/* harmony export */   PLUS_CHARS: () => (/* binding */ PLUS_CHARS),\n/* harmony export */   VALID_DIGITS: () => (/* binding */ VALID_DIGITS),\n/* harmony export */   VALID_PUNCTUATION: () => (/* binding */ VALID_PUNCTUATION),\n/* harmony export */   WHITESPACE: () => (/* binding */ WHITESPACE),\n/* harmony export */   create_extension_pattern: () => (/* binding */ create_extension_pattern),\n/* harmony export */   extractCountryCallingCode: () => (/* binding */ extractCountryCallingCode),\n/* harmony export */   matches_entirely: () => (/* binding */ matches_entirely),\n/* harmony export */   parseDigit: () => (/* binding */ parseDigit)\n/* harmony export */ });\n/* harmony import */ var _IDD__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./IDD */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/IDD.js\");\n/* harmony import */ var _parseIncompletePhoneNumber__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parseIncompletePhoneNumber */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/parseIncompletePhoneNumber.js\");\n\n\n\n\n// `DASHES` will be right after the opening square bracket of the \"character class\"\nvar DASHES = '-\\u2010-\\u2015\\u2212\\u30FC\\uFF0D';\nvar SLASHES = '\\uFF0F/';\nvar DOTS = '\\uFF0E.';\nvar WHITESPACE = ' \\xA0\\xAD\\u200B\\u2060\\u3000';\nvar BRACKETS = '()\\uFF08\\uFF09\\uFF3B\\uFF3D\\\\[\\\\]';\n// export const OPENING_BRACKETS = '(\\uFF08\\uFF3B\\\\\\['\nvar TILDES = '~\\u2053\\u223C\\uFF5E';\n\n// Digits accepted in phone numbers\n// (ascii, fullwidth, arabic-indic, and eastern arabic digits).\nvar VALID_DIGITS = '0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9';\n\n// Regular expression of acceptable punctuation found in phone numbers. This\n// excludes punctuation found as a leading character only. This consists of dash\n// characters, white space characters, full stops, slashes, square brackets,\n// parentheses and tildes. Full-width variants are also present.\nvar VALID_PUNCTUATION = '' + DASHES + SLASHES + DOTS + WHITESPACE + BRACKETS + TILDES;\n\nvar PLUS_CHARS = '+\\uFF0B';\nvar LEADING_PLUS_CHARS_PATTERN = new RegExp('^[' + PLUS_CHARS + ']+');\n\n// The ITU says the maximum length should be 15,\n// but one can find longer numbers in Germany.\nvar MAX_LENGTH_FOR_NSN = 17;\n\n// The maximum length of the country calling code.\nvar MAX_LENGTH_COUNTRY_CODE = 3;\n\n// These mappings map a character (key) to a specific digit that should\n// replace it for normalization purposes. Non-European digits that\n// may be used in phone numbers are mapped to a European equivalent.\n//\n// E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.\n//\nvar DIGITS = {\n\t'0': '0',\n\t'1': '1',\n\t'2': '2',\n\t'3': '3',\n\t'4': '4',\n\t'5': '5',\n\t'6': '6',\n\t'7': '7',\n\t'8': '8',\n\t'9': '9',\n\t'\\uFF10': '0', // Fullwidth digit 0\n\t'\\uFF11': '1', // Fullwidth digit 1\n\t'\\uFF12': '2', // Fullwidth digit 2\n\t'\\uFF13': '3', // Fullwidth digit 3\n\t'\\uFF14': '4', // Fullwidth digit 4\n\t'\\uFF15': '5', // Fullwidth digit 5\n\t'\\uFF16': '6', // Fullwidth digit 6\n\t'\\uFF17': '7', // Fullwidth digit 7\n\t'\\uFF18': '8', // Fullwidth digit 8\n\t'\\uFF19': '9', // Fullwidth digit 9\n\t'\\u0660': '0', // Arabic-indic digit 0\n\t'\\u0661': '1', // Arabic-indic digit 1\n\t'\\u0662': '2', // Arabic-indic digit 2\n\t'\\u0663': '3', // Arabic-indic digit 3\n\t'\\u0664': '4', // Arabic-indic digit 4\n\t'\\u0665': '5', // Arabic-indic digit 5\n\t'\\u0666': '6', // Arabic-indic digit 6\n\t'\\u0667': '7', // Arabic-indic digit 7\n\t'\\u0668': '8', // Arabic-indic digit 8\n\t'\\u0669': '9', // Arabic-indic digit 9\n\t'\\u06F0': '0', // Eastern-Arabic digit 0\n\t'\\u06F1': '1', // Eastern-Arabic digit 1\n\t'\\u06F2': '2', // Eastern-Arabic digit 2\n\t'\\u06F3': '3', // Eastern-Arabic digit 3\n\t'\\u06F4': '4', // Eastern-Arabic digit 4\n\t'\\u06F5': '5', // Eastern-Arabic digit 5\n\t'\\u06F6': '6', // Eastern-Arabic digit 6\n\t'\\u06F7': '7', // Eastern-Arabic digit 7\n\t'\\u06F8': '8', // Eastern-Arabic digit 8\n\t'\\u06F9': '9' // Eastern-Arabic digit 9\n};\n\nfunction parseDigit(character) {\n\treturn DIGITS[character];\n}\n\n// Parses a formatted phone number\n// and returns `{ countryCallingCode, number }`\n// where `number` is just the \"number\" part\n// which is left after extracting `countryCallingCode`\n// and is not necessarily a \"national (significant) number\"\n// and might as well contain national prefix.\n//\nfunction extractCountryCallingCode(number, country, metadata) {\n\tnumber = (0,_parseIncompletePhoneNumber__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(number);\n\n\tif (!number) {\n\t\treturn {};\n\t}\n\n\t// If this is not an international phone number,\n\t// then don't extract country phone code.\n\tif (number[0] !== '+') {\n\t\t// Convert an \"out-of-country\" dialing phone number\n\t\t// to a proper international phone number.\n\t\tvar numberWithoutIDD = (0,_IDD__WEBPACK_IMPORTED_MODULE_1__.stripIDDPrefix)(number, country, metadata.metadata);\n\n\t\t// If an IDD prefix was stripped then\n\t\t// convert the number to international one\n\t\t// for subsequent parsing.\n\t\tif (numberWithoutIDD && numberWithoutIDD !== number) {\n\t\t\tnumber = '+' + numberWithoutIDD;\n\t\t} else {\n\t\t\treturn { number: number };\n\t\t}\n\t}\n\n\t// Fast abortion: country codes do not begin with a '0'\n\tif (number[1] === '0') {\n\t\treturn {};\n\t}\n\n\t// The thing with country phone codes\n\t// is that they are orthogonal to each other\n\t// i.e. there's no such country phone code A\n\t// for which country phone code B exists\n\t// where B starts with A.\n\t// Therefore, while scanning digits,\n\t// if a valid country code is found,\n\t// that means that it is the country code.\n\t//\n\tvar i = 2;\n\twhile (i - 1 <= MAX_LENGTH_COUNTRY_CODE && i <= number.length) {\n\t\tvar countryCallingCode = number.slice(1, i);\n\n\t\tif (metadata.countryCallingCodes()[countryCallingCode]) {\n\t\t\treturn {\n\t\t\t\tcountryCallingCode: countryCallingCode,\n\t\t\t\tnumber: number.slice(i)\n\t\t\t};\n\t\t}\n\n\t\ti++;\n\t}\n\n\treturn {};\n}\n\n// Checks whether the entire input sequence can be matched\n// against the regular expression.\nfunction matches_entirely() {\n\tvar text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\tvar regular_expression = arguments[1];\n\n\tif (typeof regular_expression === 'string') {\n\t\tregular_expression = '^(?:' + regular_expression + ')$';\n\t}\n\n\tvar matched_groups = text.match(regular_expression);\n\treturn matched_groups !== null && matched_groups[0].length === text.length;\n}\n\n// The RFC 3966 format for extensions.\nvar RFC3966_EXTN_PREFIX = ';ext=';\n\n// Pattern to capture digits used in an extension.\n// Places a maximum length of '7' for an extension.\nvar CAPTURING_EXTN_DIGITS = '([' + VALID_DIGITS + ']{1,7})';\n\n/**\r\n * Regexp of all possible ways to write extensions, for use when parsing. This\r\n * will be run as a case-insensitive regexp match. Wide character versions are\r\n * also provided after each ASCII version. There are three regular expressions\r\n * here. The first covers RFC 3966 format, where the extension is added using\r\n * ';ext='. The second more generic one starts with optional white space and\r\n * ends with an optional full stop (.), followed by zero or more spaces/tabs\r\n * /commas and then the numbers themselves. The other one covers the special\r\n * case of American numbers where the extension is written with a hash at the\r\n * end, such as '- 503#'. Note that the only capturing groups should be around\r\n * the digits that you want to capture as part of the extension, or else parsing\r\n * will fail! We allow two options for representing the accented o - the\r\n * character itself, and one in the unicode decomposed form with the combining\r\n * acute accent.\r\n */\nfunction create_extension_pattern(purpose) {\n\t// One-character symbols that can be used to indicate an extension.\n\tvar single_extension_characters = 'x\\uFF58#\\uFF03~\\uFF5E';\n\n\tswitch (purpose) {\n\t\t// For parsing, we are slightly more lenient in our interpretation than for matching. Here we\n\t\t// allow \"comma\" and \"semicolon\" as possible extension indicators. When matching, these are\n\t\tcase 'parsing':\n\t\t\tsingle_extension_characters = ',;' + single_extension_characters;\n\t}\n\n\treturn RFC3966_EXTN_PREFIX + CAPTURING_EXTN_DIGITS + '|' + '[ \\xA0\\\\t,]*' + '(?:e?xt(?:ensi(?:o\\u0301?|\\xF3))?n?|\\uFF45?\\uFF58\\uFF54\\uFF4E?|' + '[' + single_extension_characters + ']|int|anexo|\\uFF49\\uFF4E\\uFF54)' + '[:\\\\.\\uFF0E]?[ \\xA0\\\\t,-]*' + CAPTURING_EXTN_DIGITS + '#?|' + '[- ]+([' + VALID_DIGITS + ']{1,5})#';\n}\n//# sourceMappingURL=common.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/common.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/findNumbers/isValidCandidate.js":
/*!***********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/findNumbers/isValidCandidate.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LEAD_CLASS: () => (/* binding */ LEAD_CLASS),\n/* harmony export */   \"default\": () => (/* binding */ isValidCandidate)\n/* harmony export */ });\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/common.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/findNumbers/util.js\");\n/* harmony import */ var _utf_8__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utf-8 */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/findNumbers/utf-8.js\");\n// Copy-pasted from `PhoneNumberMatcher.js`.\n\n\n\n\n\n\n\nvar OPENING_PARENS = '(\\\\[\\uFF08\\uFF3B';\nvar CLOSING_PARENS = ')\\\\]\\uFF09\\uFF3D';\nvar NON_PARENS = '[^' + OPENING_PARENS + CLOSING_PARENS + ']';\n\nvar LEAD_CLASS = '[' + OPENING_PARENS + _common__WEBPACK_IMPORTED_MODULE_0__.PLUS_CHARS + ']';\n\n// Punctuation that may be at the start of a phone number - brackets and plus signs.\nvar LEAD_CLASS_LEADING = new RegExp('^' + LEAD_CLASS);\n\n// Limit on the number of pairs of brackets in a phone number.\nvar BRACKET_PAIR_LIMIT = (0,_util__WEBPACK_IMPORTED_MODULE_1__.limit)(0, 3);\n\n/**\r\n * Pattern to check that brackets match. Opening brackets should be closed within a phone number.\r\n * This also checks that there is something inside the brackets. Having no brackets at all is also\r\n * fine.\r\n *\r\n * An opening bracket at the beginning may not be closed, but subsequent ones should be.  It's\r\n * also possible that the leading bracket was dropped, so we shouldn't be surprised if we see a\r\n * closing bracket first. We limit the sets of brackets in a phone number to four.\r\n */\nvar MATCHING_BRACKETS_ENTIRE = new RegExp('^' + \"(?:[\" + OPENING_PARENS + \"])?\" + \"(?:\" + NON_PARENS + \"+\" + \"[\" + CLOSING_PARENS + \"])?\" + NON_PARENS + \"+\" + \"(?:[\" + OPENING_PARENS + \"]\" + NON_PARENS + \"+[\" + CLOSING_PARENS + \"])\" + BRACKET_PAIR_LIMIT + NON_PARENS + \"*\" + '$');\n\n/**\r\n * Matches strings that look like publication pages. Example:\r\n * <pre>Computing Complete Answers to Queries in the Presence of Limited Access Patterns.\r\n * Chen Li. VLDB J. 12(3): 211-227 (2003).</pre>\r\n *\r\n * The string \"211-227 (2003)\" is not a telephone number.\r\n */\nvar PUB_PAGES = /\\d{1,5}-+\\d{1,5}\\s{0,4}\\(\\d{1,4}/;\n\nfunction isValidCandidate(candidate, offset, text, leniency) {\n\t// Check the candidate doesn't contain any formatting\n\t// which would indicate that it really isn't a phone number.\n\tif (!MATCHING_BRACKETS_ENTIRE.test(candidate) || PUB_PAGES.test(candidate)) {\n\t\treturn;\n\t}\n\n\t// If leniency is set to VALID or stricter, we also want to skip numbers that are surrounded\n\t// by Latin alphabetic characters, to skip cases like abc8005001234 or 8005001234def.\n\tif (leniency !== 'POSSIBLE') {\n\t\t// If the candidate is not at the start of the text,\n\t\t// and does not start with phone-number punctuation,\n\t\t// check the previous character.\n\t\tif (offset > 0 && !LEAD_CLASS_LEADING.test(candidate)) {\n\t\t\tvar previousChar = text[offset - 1];\n\t\t\t// We return null if it is a latin letter or an invalid punctuation symbol.\n\t\t\tif ((0,_utf_8__WEBPACK_IMPORTED_MODULE_2__.isInvalidPunctuationSymbol)(previousChar) || (0,_utf_8__WEBPACK_IMPORTED_MODULE_2__.isLatinLetter)(previousChar)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tvar lastCharIndex = offset + candidate.length;\n\t\tif (lastCharIndex < text.length) {\n\t\t\tvar nextChar = text[lastCharIndex];\n\t\t\tif ((0,_utf_8__WEBPACK_IMPORTED_MODULE_2__.isInvalidPunctuationSymbol)(nextChar) || (0,_utf_8__WEBPACK_IMPORTED_MODULE_2__.isLatinLetter)(nextChar)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n//# sourceMappingURL=isValidCandidate.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vbGlicGhvbmVudW1iZXItanNAMS4zLjAvbm9kZV9tb2R1bGVzL2xpYnBob25lbnVtYmVyLWpzL2VzNi9maW5kTnVtYmVycy9pc1ZhbGlkQ2FuZGlkYXRlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7O0FBRXVDOztBQUVSOztBQUVxQzs7QUFFcEU7QUFDQTtBQUNBOztBQUVPLHdDQUF3QywrQ0FBVTs7QUFFekQ7QUFDQTs7QUFFQTtBQUNBLHlCQUF5Qiw0Q0FBSzs7QUFFOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsSUFBSSxLQUFLLElBQUksR0FBRyxJQUFJLEtBQUssSUFBSTs7QUFFbEM7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU8sa0VBQTBCLGtCQUFrQixxREFBYTtBQUNoRTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsT0FBTyxrRUFBMEIsY0FBYyxxREFBYTtBQUM1RDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ad2FnbmVyYW5kY28vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvLnBucG0vbGlicGhvbmVudW1iZXItanNAMS4zLjAvbm9kZV9tb2R1bGVzL2xpYnBob25lbnVtYmVyLWpzL2VzNi9maW5kTnVtYmVycy9pc1ZhbGlkQ2FuZGlkYXRlLmpzPzc4ZjEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weS1wYXN0ZWQgZnJvbSBgUGhvbmVOdW1iZXJNYXRjaGVyLmpzYC5cblxuaW1wb3J0IHsgUExVU19DSEFSUyB9IGZyb20gJy4uL2NvbW1vbic7XG5cbmltcG9ydCB7IGxpbWl0IH0gZnJvbSAnLi91dGlsJztcblxuaW1wb3J0IHsgaXNMYXRpbkxldHRlciwgaXNJbnZhbGlkUHVuY3R1YXRpb25TeW1ib2wgfSBmcm9tICcuL3V0Zi04JztcblxudmFyIE9QRU5JTkdfUEFSRU5TID0gJyhcXFxcW1xcdUZGMDhcXHVGRjNCJztcbnZhciBDTE9TSU5HX1BBUkVOUyA9ICcpXFxcXF1cXHVGRjA5XFx1RkYzRCc7XG52YXIgTk9OX1BBUkVOUyA9ICdbXicgKyBPUEVOSU5HX1BBUkVOUyArIENMT1NJTkdfUEFSRU5TICsgJ10nO1xuXG5leHBvcnQgdmFyIExFQURfQ0xBU1MgPSAnWycgKyBPUEVOSU5HX1BBUkVOUyArIFBMVVNfQ0hBUlMgKyAnXSc7XG5cbi8vIFB1bmN0dWF0aW9uIHRoYXQgbWF5IGJlIGF0IHRoZSBzdGFydCBvZiBhIHBob25lIG51bWJlciAtIGJyYWNrZXRzIGFuZCBwbHVzIHNpZ25zLlxudmFyIExFQURfQ0xBU1NfTEVBRElORyA9IG5ldyBSZWdFeHAoJ14nICsgTEVBRF9DTEFTUyk7XG5cbi8vIExpbWl0IG9uIHRoZSBudW1iZXIgb2YgcGFpcnMgb2YgYnJhY2tldHMgaW4gYSBwaG9uZSBudW1iZXIuXG52YXIgQlJBQ0tFVF9QQUlSX0xJTUlUID0gbGltaXQoMCwgMyk7XG5cbi8qKlxyXG4gKiBQYXR0ZXJuIHRvIGNoZWNrIHRoYXQgYnJhY2tldHMgbWF0Y2guIE9wZW5pbmcgYnJhY2tldHMgc2hvdWxkIGJlIGNsb3NlZCB3aXRoaW4gYSBwaG9uZSBudW1iZXIuXHJcbiAqIFRoaXMgYWxzbyBjaGVja3MgdGhhdCB0aGVyZSBpcyBzb21ldGhpbmcgaW5zaWRlIHRoZSBicmFja2V0cy4gSGF2aW5nIG5vIGJyYWNrZXRzIGF0IGFsbCBpcyBhbHNvXHJcbiAqIGZpbmUuXHJcbiAqXHJcbiAqIEFuIG9wZW5pbmcgYnJhY2tldCBhdCB0aGUgYmVnaW5uaW5nIG1heSBub3QgYmUgY2xvc2VkLCBidXQgc3Vic2VxdWVudCBvbmVzIHNob3VsZCBiZS4gIEl0J3NcclxuICogYWxzbyBwb3NzaWJsZSB0aGF0IHRoZSBsZWFkaW5nIGJyYWNrZXQgd2FzIGRyb3BwZWQsIHNvIHdlIHNob3VsZG4ndCBiZSBzdXJwcmlzZWQgaWYgd2Ugc2VlIGFcclxuICogY2xvc2luZyBicmFja2V0IGZpcnN0LiBXZSBsaW1pdCB0aGUgc2V0cyBvZiBicmFja2V0cyBpbiBhIHBob25lIG51bWJlciB0byBmb3VyLlxyXG4gKi9cbnZhciBNQVRDSElOR19CUkFDS0VUU19FTlRJUkUgPSBuZXcgUmVnRXhwKCdeJyArIFwiKD86W1wiICsgT1BFTklOR19QQVJFTlMgKyBcIl0pP1wiICsgXCIoPzpcIiArIE5PTl9QQVJFTlMgKyBcIitcIiArIFwiW1wiICsgQ0xPU0lOR19QQVJFTlMgKyBcIl0pP1wiICsgTk9OX1BBUkVOUyArIFwiK1wiICsgXCIoPzpbXCIgKyBPUEVOSU5HX1BBUkVOUyArIFwiXVwiICsgTk9OX1BBUkVOUyArIFwiK1tcIiArIENMT1NJTkdfUEFSRU5TICsgXCJdKVwiICsgQlJBQ0tFVF9QQUlSX0xJTUlUICsgTk9OX1BBUkVOUyArIFwiKlwiICsgJyQnKTtcblxuLyoqXHJcbiAqIE1hdGNoZXMgc3RyaW5ncyB0aGF0IGxvb2sgbGlrZSBwdWJsaWNhdGlvbiBwYWdlcy4gRXhhbXBsZTpcclxuICogPHByZT5Db21wdXRpbmcgQ29tcGxldGUgQW5zd2VycyB0byBRdWVyaWVzIGluIHRoZSBQcmVzZW5jZSBvZiBMaW1pdGVkIEFjY2VzcyBQYXR0ZXJucy5cclxuICogQ2hlbiBMaS4gVkxEQiBKLiAxMigzKTogMjExLTIyNyAoMjAwMykuPC9wcmU+XHJcbiAqXHJcbiAqIFRoZSBzdHJpbmcgXCIyMTEtMjI3ICgyMDAzKVwiIGlzIG5vdCBhIHRlbGVwaG9uZSBudW1iZXIuXHJcbiAqL1xudmFyIFBVQl9QQUdFUyA9IC9cXGR7MSw1fS0rXFxkezEsNX1cXHN7MCw0fVxcKFxcZHsxLDR9LztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaXNWYWxpZENhbmRpZGF0ZShjYW5kaWRhdGUsIG9mZnNldCwgdGV4dCwgbGVuaWVuY3kpIHtcblx0Ly8gQ2hlY2sgdGhlIGNhbmRpZGF0ZSBkb2Vzbid0IGNvbnRhaW4gYW55IGZvcm1hdHRpbmdcblx0Ly8gd2hpY2ggd291bGQgaW5kaWNhdGUgdGhhdCBpdCByZWFsbHkgaXNuJ3QgYSBwaG9uZSBudW1iZXIuXG5cdGlmICghTUFUQ0hJTkdfQlJBQ0tFVFNfRU5USVJFLnRlc3QoY2FuZGlkYXRlKSB8fCBQVUJfUEFHRVMudGVzdChjYW5kaWRhdGUpKSB7XG5cdFx0cmV0dXJuO1xuXHR9XG5cblx0Ly8gSWYgbGVuaWVuY3kgaXMgc2V0IHRvIFZBTElEIG9yIHN0cmljdGVyLCB3ZSBhbHNvIHdhbnQgdG8gc2tpcCBudW1iZXJzIHRoYXQgYXJlIHN1cnJvdW5kZWRcblx0Ly8gYnkgTGF0aW4gYWxwaGFiZXRpYyBjaGFyYWN0ZXJzLCB0byBza2lwIGNhc2VzIGxpa2UgYWJjODAwNTAwMTIzNCBvciA4MDA1MDAxMjM0ZGVmLlxuXHRpZiAobGVuaWVuY3kgIT09ICdQT1NTSUJMRScpIHtcblx0XHQvLyBJZiB0aGUgY2FuZGlkYXRlIGlzIG5vdCBhdCB0aGUgc3RhcnQgb2YgdGhlIHRleHQsXG5cdFx0Ly8gYW5kIGRvZXMgbm90IHN0YXJ0IHdpdGggcGhvbmUtbnVtYmVyIHB1bmN0dWF0aW9uLFxuXHRcdC8vIGNoZWNrIHRoZSBwcmV2aW91cyBjaGFyYWN0ZXIuXG5cdFx0aWYgKG9mZnNldCA+IDAgJiYgIUxFQURfQ0xBU1NfTEVBRElORy50ZXN0KGNhbmRpZGF0ZSkpIHtcblx0XHRcdHZhciBwcmV2aW91c0NoYXIgPSB0ZXh0W29mZnNldCAtIDFdO1xuXHRcdFx0Ly8gV2UgcmV0dXJuIG51bGwgaWYgaXQgaXMgYSBsYXRpbiBsZXR0ZXIgb3IgYW4gaW52YWxpZCBwdW5jdHVhdGlvbiBzeW1ib2wuXG5cdFx0XHRpZiAoaXNJbnZhbGlkUHVuY3R1YXRpb25TeW1ib2wocHJldmlvdXNDaGFyKSB8fCBpc0xhdGluTGV0dGVyKHByZXZpb3VzQ2hhcikpIHtcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHZhciBsYXN0Q2hhckluZGV4ID0gb2Zmc2V0ICsgY2FuZGlkYXRlLmxlbmd0aDtcblx0XHRpZiAobGFzdENoYXJJbmRleCA8IHRleHQubGVuZ3RoKSB7XG5cdFx0XHR2YXIgbmV4dENoYXIgPSB0ZXh0W2xhc3RDaGFySW5kZXhdO1xuXHRcdFx0aWYgKGlzSW52YWxpZFB1bmN0dWF0aW9uU3ltYm9sKG5leHRDaGFyKSB8fCBpc0xhdGluTGV0dGVyKG5leHRDaGFyKSkge1xuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHRydWU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pc1ZhbGlkQ2FuZGlkYXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/findNumbers/isValidCandidate.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/findNumbers/isValidPreCandidate.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/findNumbers/isValidPreCandidate.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isValidPreCandidate)\n/* harmony export */ });\n// Matches strings that look like dates using \"/\" as a separator.\n// Examples: 3/10/2011, 31/10/96 or 08/31/95.\nvar SLASH_SEPARATED_DATES = /(?:(?:[0-3]?\\d\\/[01]?\\d)|(?:[01]?\\d\\/[0-3]?\\d))\\/(?:[12]\\d)?\\d{2}/;\n\n// Matches timestamps.\n// Examples: \"2012-01-02 08:00\".\n// Note that the reg-ex does not include the\n// trailing \":\\d\\d\" -- that is covered by TIME_STAMPS_SUFFIX.\nvar TIME_STAMPS = /[12]\\d{3}[-/]?[01]\\d[-/]?[0-3]\\d +[0-2]\\d$/;\nvar TIME_STAMPS_SUFFIX_LEADING = /^:[0-5]\\d/;\n\nfunction isValidPreCandidate(candidate, offset, text) {\n\t// Skip a match that is more likely to be a date.\n\tif (SLASH_SEPARATED_DATES.test(candidate)) {\n\t\treturn false;\n\t}\n\n\t// Skip potential time-stamps.\n\tif (TIME_STAMPS.test(candidate)) {\n\t\tvar followingText = text.slice(offset + candidate.length);\n\t\tif (TIME_STAMPS_SUFFIX_LEADING.test(followingText)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n//# sourceMappingURL=isValidPreCandidate.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vbGlicGhvbmVudW1iZXItanNAMS4zLjAvbm9kZV9tb2R1bGVzL2xpYnBob25lbnVtYmVyLWpzL2VzNi9maW5kTnVtYmVycy9pc1ZhbGlkUHJlQ2FuZGlkYXRlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0EsNEZBQTRGLEVBQUU7O0FBRTlGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLEVBQUU7QUFDNUI7O0FBRWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ad2FnbmVyYW5kY28vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvLnBucG0vbGlicGhvbmVudW1iZXItanNAMS4zLjAvbm9kZV9tb2R1bGVzL2xpYnBob25lbnVtYmVyLWpzL2VzNi9maW5kTnVtYmVycy9pc1ZhbGlkUHJlQ2FuZGlkYXRlLmpzP2U2MjYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gTWF0Y2hlcyBzdHJpbmdzIHRoYXQgbG9vayBsaWtlIGRhdGVzIHVzaW5nIFwiL1wiIGFzIGEgc2VwYXJhdG9yLlxuLy8gRXhhbXBsZXM6IDMvMTAvMjAxMSwgMzEvMTAvOTYgb3IgMDgvMzEvOTUuXG52YXIgU0xBU0hfU0VQQVJBVEVEX0RBVEVTID0gLyg/Oig/OlswLTNdP1xcZFxcL1swMV0/XFxkKXwoPzpbMDFdP1xcZFxcL1swLTNdP1xcZCkpXFwvKD86WzEyXVxcZCk/XFxkezJ9LztcblxuLy8gTWF0Y2hlcyB0aW1lc3RhbXBzLlxuLy8gRXhhbXBsZXM6IFwiMjAxMi0wMS0wMiAwODowMFwiLlxuLy8gTm90ZSB0aGF0IHRoZSByZWctZXggZG9lcyBub3QgaW5jbHVkZSB0aGVcbi8vIHRyYWlsaW5nIFwiOlxcZFxcZFwiIC0tIHRoYXQgaXMgY292ZXJlZCBieSBUSU1FX1NUQU1QU19TVUZGSVguXG52YXIgVElNRV9TVEFNUFMgPSAvWzEyXVxcZHszfVstL10/WzAxXVxcZFstL10/WzAtM11cXGQgK1swLTJdXFxkJC87XG52YXIgVElNRV9TVEFNUFNfU1VGRklYX0xFQURJTkcgPSAvXjpbMC01XVxcZC87XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGlzVmFsaWRQcmVDYW5kaWRhdGUoY2FuZGlkYXRlLCBvZmZzZXQsIHRleHQpIHtcblx0Ly8gU2tpcCBhIG1hdGNoIHRoYXQgaXMgbW9yZSBsaWtlbHkgdG8gYmUgYSBkYXRlLlxuXHRpZiAoU0xBU0hfU0VQQVJBVEVEX0RBVEVTLnRlc3QoY2FuZGlkYXRlKSkge1xuXHRcdHJldHVybiBmYWxzZTtcblx0fVxuXG5cdC8vIFNraXAgcG90ZW50aWFsIHRpbWUtc3RhbXBzLlxuXHRpZiAoVElNRV9TVEFNUFMudGVzdChjYW5kaWRhdGUpKSB7XG5cdFx0dmFyIGZvbGxvd2luZ1RleHQgPSB0ZXh0LnNsaWNlKG9mZnNldCArIGNhbmRpZGF0ZS5sZW5ndGgpO1xuXHRcdGlmIChUSU1FX1NUQU1QU19TVUZGSVhfTEVBRElORy50ZXN0KGZvbGxvd2luZ1RleHQpKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHRydWU7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pc1ZhbGlkUHJlQ2FuZGlkYXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/findNumbers/isValidPreCandidate.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/findNumbers/parsePreCandidate.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/findNumbers/parsePreCandidate.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ parsePreCandidate)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/findNumbers/util.js\");\n\n\n// Regular expression of characters typically used to start a second phone number for the purposes\n// of parsing. This allows us to strip off parts of the number that are actually the start of\n// another number, such as for: (530) 583-6985 x302/x2303 -> the second extension here makes this\n// actually two phone numbers, (530) 583-6985 x302 and (530) 583-6985 x2303. We remove the second\n// extension so that the first number is parsed correctly.\n//\n// Matches a slash (\\ or /) followed by a space followed by an `x`.\n//\nvar SECOND_NUMBER_START_PATTERN = /[\\\\/] *x/;\n\nfunction parsePreCandidate(candidate) {\n\t// Check for extra numbers at the end.\n\t// TODO: This is the place to start when trying to support extraction of multiple phone number\n\t// from split notations (+41 79 123 45 67 / 68).\n\treturn (0,_util__WEBPACK_IMPORTED_MODULE_0__.trimAfterFirstMatch)(SECOND_NUMBER_START_PATTERN, candidate);\n}\n//# sourceMappingURL=parsePreCandidate.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vbGlicGhvbmVudW1iZXItanNAMS4zLjAvbm9kZV9tb2R1bGVzL2xpYnBob25lbnVtYmVyLWpzL2VzNi9maW5kTnVtYmVycy9wYXJzZVByZUNhbmRpZGF0ZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUE2Qzs7QUFFN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsUUFBUSwwREFBbUI7QUFDM0I7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B3YWduZXJhbmRjby9mcm9udGVuZC8uL25vZGVfbW9kdWxlcy8ucG5wbS9saWJwaG9uZW51bWJlci1qc0AxLjMuMC9ub2RlX21vZHVsZXMvbGlicGhvbmVudW1iZXItanMvZXM2L2ZpbmROdW1iZXJzL3BhcnNlUHJlQ2FuZGlkYXRlLmpzPzRhNDEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdHJpbUFmdGVyRmlyc3RNYXRjaCB9IGZyb20gJy4vdXRpbCc7XG5cbi8vIFJlZ3VsYXIgZXhwcmVzc2lvbiBvZiBjaGFyYWN0ZXJzIHR5cGljYWxseSB1c2VkIHRvIHN0YXJ0IGEgc2Vjb25kIHBob25lIG51bWJlciBmb3IgdGhlIHB1cnBvc2VzXG4vLyBvZiBwYXJzaW5nLiBUaGlzIGFsbG93cyB1cyB0byBzdHJpcCBvZmYgcGFydHMgb2YgdGhlIG51bWJlciB0aGF0IGFyZSBhY3R1YWxseSB0aGUgc3RhcnQgb2Zcbi8vIGFub3RoZXIgbnVtYmVyLCBzdWNoIGFzIGZvcjogKDUzMCkgNTgzLTY5ODUgeDMwMi94MjMwMyAtPiB0aGUgc2Vjb25kIGV4dGVuc2lvbiBoZXJlIG1ha2VzIHRoaXNcbi8vIGFjdHVhbGx5IHR3byBwaG9uZSBudW1iZXJzLCAoNTMwKSA1ODMtNjk4NSB4MzAyIGFuZCAoNTMwKSA1ODMtNjk4NSB4MjMwMy4gV2UgcmVtb3ZlIHRoZSBzZWNvbmRcbi8vIGV4dGVuc2lvbiBzbyB0aGF0IHRoZSBmaXJzdCBudW1iZXIgaXMgcGFyc2VkIGNvcnJlY3RseS5cbi8vXG4vLyBNYXRjaGVzIGEgc2xhc2ggKFxcIG9yIC8pIGZvbGxvd2VkIGJ5IGEgc3BhY2UgZm9sbG93ZWQgYnkgYW4gYHhgLlxuLy9cbnZhciBTRUNPTkRfTlVNQkVSX1NUQVJUX1BBVFRFUk4gPSAvW1xcXFwvXSAqeC87XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHBhcnNlUHJlQ2FuZGlkYXRlKGNhbmRpZGF0ZSkge1xuXHQvLyBDaGVjayBmb3IgZXh0cmEgbnVtYmVycyBhdCB0aGUgZW5kLlxuXHQvLyBUT0RPOiBUaGlzIGlzIHRoZSBwbGFjZSB0byBzdGFydCB3aGVuIHRyeWluZyB0byBzdXBwb3J0IGV4dHJhY3Rpb24gb2YgbXVsdGlwbGUgcGhvbmUgbnVtYmVyXG5cdC8vIGZyb20gc3BsaXQgbm90YXRpb25zICgrNDEgNzkgMTIzIDQ1IDY3IC8gNjgpLlxuXHRyZXR1cm4gdHJpbUFmdGVyRmlyc3RNYXRjaChTRUNPTkRfTlVNQkVSX1NUQVJUX1BBVFRFUk4sIGNhbmRpZGF0ZSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXJzZVByZUNhbmRpZGF0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/findNumbers/parsePreCandidate.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/findNumbers/utf-8.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/findNumbers/utf-8.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PZ: () => (/* binding */ PZ),\n/* harmony export */   _pL: () => (/* binding */ _pL),\n/* harmony export */   _pN: () => (/* binding */ _pN),\n/* harmony export */   isInvalidPunctuationSymbol: () => (/* binding */ isInvalidPunctuationSymbol),\n/* harmony export */   isLatinLetter: () => (/* binding */ isLatinLetter),\n/* harmony export */   pNd: () => (/* binding */ pNd),\n/* harmony export */   pZ: () => (/* binding */ pZ)\n/* harmony export */ });\n// Javascript doesn't support UTF-8 regular expressions.\n// So mimicking them here.\n\n// Copy-pasted from `PhoneNumberMatcher.js`.\n\n/**\r\n * \"\\p{Z}\" is any kind of whitespace or invisible separator (\"Separator\").\r\n * http://www.regular-expressions.info/unicode.html\r\n * \"\\P{Z}\" is the reverse of \"\\p{Z}\".\r\n * \"\\p{N}\" is any kind of numeric character in any script (\"Number\").\r\n * \"\\p{Nd}\" is a digit zero through nine in any script except \"ideographic scripts\" (\"Decimal_Digit_Number\").\r\n * \"\\p{Sc}\" is a currency symbol (\"Currency_Symbol\").\r\n * \"\\p{L}\" is any kind of letter from any language (\"Letter\").\r\n * \"\\p{Mn}\" is \"non-spacing mark\".\r\n *\r\n * Javascript doesn't support Unicode Regular Expressions\r\n * so substituting it with this explicit set of characters.\r\n *\r\n * https://stackoverflow.com/questions/13210194/javascript-regex-equivalent-of-a-za-z-using-pl\r\n * https://github.com/danielberndt/babel-plugin-utf-8-regex/blob/master/src/transformer.js\r\n */\n\nvar _pZ = ' \\xA0\\u1680\\u180E\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000';\nvar pZ = '[' + _pZ + ']';\nvar PZ = '[^' + _pZ + ']';\n\nvar _pN = '0-9\\xB2\\xB3\\xB9\\xBC-\\xBE\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u09F4-\\u09F9\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0B72-\\u0B77\\u0BE6-\\u0BF2\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0CE6-\\u0CEF\\u0D66-\\u0D75\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F33\\u1040-\\u1049\\u1090-\\u1099\\u1369-\\u137C\\u16EE-\\u16F0\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19DA\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2150-\\u2182\\u2185-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2CFD\\u3007\\u3021-\\u3029\\u3038-\\u303A\\u3192-\\u3195\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\uA620-\\uA629\\uA6E6-\\uA6EF\\uA830-\\uA835\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19';\n// const pN = `[${_pN}]`\n\nvar _pNd = '0-9\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0BE6-\\u0BEF\\u0C66-\\u0C6F\\u0CE6-\\u0CEF\\u0D66-\\u0D6F\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F29\\u1040-\\u1049\\u1090-\\u1099\\u17E0-\\u17E9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19D9\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\uA620-\\uA629\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19';\nvar pNd = '[' + _pNd + ']';\n\nvar _pL = 'A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC';\nvar pL = '[' + _pL + ']';\nvar pL_regexp = new RegExp(pL);\n\nvar _pSc = '$\\xA2-\\xA5\\u058F\\u060B\\u09F2\\u09F3\\u09FB\\u0AF1\\u0BF9\\u0E3F\\u17DB\\u20A0-\\u20B9\\uA838\\uFDFC\\uFE69\\uFF04\\uFFE0\\uFFE1\\uFFE5\\uFFE6';\nvar pSc = '[' + _pSc + ']';\nvar pSc_regexp = new RegExp(pSc);\n\nvar _pMn = '\\u0300-\\u036F\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E4-\\u08FE\\u0900-\\u0902\\u093A\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0957\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4\\u17B5\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1BAB\\u1BE6\\u1BE8\\u1BE9\\u1BED\\u1BEF-\\u1BF1\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1CF4\\u1DC0-\\u1DE6\\u1DFC-\\u1DFF\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302D\\u3099\\u309A\\uA66F\\uA674-\\uA67D\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEC\\uAAED\\uAAF6\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE26';\nvar pMn = '[' + _pMn + ']';\nvar pMn_regexp = new RegExp(pMn);\n\nvar _InBasic_Latin = '\\0-\\x7F';\nvar _InLatin_1_Supplement = '\\x80-\\xFF';\nvar _InLatin_Extended_A = '\\u0100-\\u017F';\nvar _InLatin_Extended_Additional = '\\u1E00-\\u1EFF';\nvar _InLatin_Extended_B = '\\u0180-\\u024F';\nvar _InCombining_Diacritical_Marks = '\\u0300-\\u036F';\n\nvar latinLetterRegexp = new RegExp('[' + _InBasic_Latin + _InLatin_1_Supplement + _InLatin_Extended_A + _InLatin_Extended_Additional + _InLatin_Extended_B + _InCombining_Diacritical_Marks + ']');\n\n/**\r\n * Helper method to determine if a character is a Latin-script letter or not.\r\n * For our purposes, combining marks should also return true since we assume\r\n * they have been added to a preceding Latin character.\r\n */\nfunction isLatinLetter(letter) {\n  // Combining marks are a subset of non-spacing-mark.\n  if (!pL_regexp.test(letter) && !pMn_regexp.test(letter)) {\n    return false;\n  }\n\n  return latinLetterRegexp.test(letter);\n}\n\nfunction isInvalidPunctuationSymbol(character) {\n  return character === '%' || pSc_regexp.test(character);\n}\n//# sourceMappingURL=utf-8.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/findNumbers/utf-8.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/findNumbers/util.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/findNumbers/util.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   endsWith: () => (/* binding */ endsWith),\n/* harmony export */   limit: () => (/* binding */ limit),\n/* harmony export */   startsWith: () => (/* binding */ startsWith),\n/* harmony export */   trimAfterFirstMatch: () => (/* binding */ trimAfterFirstMatch)\n/* harmony export */ });\n/** Returns a regular expression quantifier with an upper and lower limit. */\nfunction limit(lower, upper) {\n\tif (lower < 0 || upper <= 0 || upper < lower) {\n\t\tthrow new TypeError();\n\t}\n\treturn \"{\" + lower + \",\" + upper + \"}\";\n}\n\n/**\r\n * Trims away any characters after the first match of {@code pattern} in {@code candidate},\r\n * returning the trimmed version.\r\n */\nfunction trimAfterFirstMatch(regexp, string) {\n\tvar index = string.search(regexp);\n\n\tif (index >= 0) {\n\t\treturn string.slice(0, index);\n\t}\n\n\treturn string;\n}\n\nfunction startsWith(string, substring) {\n\treturn string.indexOf(substring) === 0;\n}\n\nfunction endsWith(string, substring) {\n\treturn string.indexOf(substring, string.length - substring.length) === string.length - substring.length;\n}\n//# sourceMappingURL=util.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vbGlicGhvbmVudW1iZXItanNAMS4zLjAvbm9kZV9tb2R1bGVzL2xpYnBob25lbnVtYmVyLWpzL2VzNi9maW5kTnVtYmVycy91dGlsLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsVUFBVSw0QkFBNEI7QUFDdEM7O0FBRUE7QUFDQSx1REFBdUQsZUFBZSxJQUFJLGdCQUFnQjtBQUMxRjtBQUNBO0FBQ087QUFDUDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFTztBQUNQO0FBQ0E7O0FBRU87QUFDUDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ad2FnbmVyYW5kY28vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvLnBucG0vbGlicGhvbmVudW1iZXItanNAMS4zLjAvbm9kZV9tb2R1bGVzL2xpYnBob25lbnVtYmVyLWpzL2VzNi9maW5kTnVtYmVycy91dGlsLmpzP2M2Y2EiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIFJldHVybnMgYSByZWd1bGFyIGV4cHJlc3Npb24gcXVhbnRpZmllciB3aXRoIGFuIHVwcGVyIGFuZCBsb3dlciBsaW1pdC4gKi9cbmV4cG9ydCBmdW5jdGlvbiBsaW1pdChsb3dlciwgdXBwZXIpIHtcblx0aWYgKGxvd2VyIDwgMCB8fCB1cHBlciA8PSAwIHx8IHVwcGVyIDwgbG93ZXIpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCk7XG5cdH1cblx0cmV0dXJuIFwie1wiICsgbG93ZXIgKyBcIixcIiArIHVwcGVyICsgXCJ9XCI7XG59XG5cbi8qKlxyXG4gKiBUcmltcyBhd2F5IGFueSBjaGFyYWN0ZXJzIGFmdGVyIHRoZSBmaXJzdCBtYXRjaCBvZiB7QGNvZGUgcGF0dGVybn0gaW4ge0Bjb2RlIGNhbmRpZGF0ZX0sXHJcbiAqIHJldHVybmluZyB0aGUgdHJpbW1lZCB2ZXJzaW9uLlxyXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0cmltQWZ0ZXJGaXJzdE1hdGNoKHJlZ2V4cCwgc3RyaW5nKSB7XG5cdHZhciBpbmRleCA9IHN0cmluZy5zZWFyY2gocmVnZXhwKTtcblxuXHRpZiAoaW5kZXggPj0gMCkge1xuXHRcdHJldHVybiBzdHJpbmcuc2xpY2UoMCwgaW5kZXgpO1xuXHR9XG5cblx0cmV0dXJuIHN0cmluZztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHN0YXJ0c1dpdGgoc3RyaW5nLCBzdWJzdHJpbmcpIHtcblx0cmV0dXJuIHN0cmluZy5pbmRleE9mKHN1YnN0cmluZykgPT09IDA7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBlbmRzV2l0aChzdHJpbmcsIHN1YnN0cmluZykge1xuXHRyZXR1cm4gc3RyaW5nLmluZGV4T2Yoc3Vic3RyaW5nLCBzdHJpbmcubGVuZ3RoIC0gc3Vic3RyaW5nLmxlbmd0aCkgPT09IHN0cmluZy5sZW5ndGggLSBzdWJzdHJpbmcubGVuZ3RoO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/findNumbers/util.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/findPhoneNumbers.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/findPhoneNumbers.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PhoneNumberSearch: () => (/* binding */ PhoneNumberSearch),\n/* harmony export */   \"default\": () => (/* binding */ findPhoneNumbers),\n/* harmony export */   searchPhoneNumbers: () => (/* binding */ searchPhoneNumbers),\n/* harmony export */   sort_out_arguments: () => (/* binding */ sort_out_arguments)\n/* harmony export */ });\n/* harmony import */ var _parse__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./parse */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/parse.js\");\n/* harmony import */ var _metadata__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./metadata */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/metadata.js\");\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/common.js\");\n/* harmony import */ var _findNumbers_parsePreCandidate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./findNumbers/parsePreCandidate */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/findNumbers/parsePreCandidate.js\");\n/* harmony import */ var _findNumbers_isValidPreCandidate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./findNumbers/isValidPreCandidate */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/findNumbers/isValidPreCandidate.js\");\n/* harmony import */ var _findNumbers_isValidCandidate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./findNumbers/isValidCandidate */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/findNumbers/isValidCandidate.js\");\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\n\n\n// Copy-pasted from `./parse.js`.\nvar VALID_PHONE_NUMBER = '[' + _common__WEBPACK_IMPORTED_MODULE_0__.PLUS_CHARS + ']{0,1}' + '(?:' + '[' + _common__WEBPACK_IMPORTED_MODULE_0__.VALID_PUNCTUATION + ']*' + '[' + _common__WEBPACK_IMPORTED_MODULE_0__.VALID_DIGITS + ']' + '){3,}' + '[' + _common__WEBPACK_IMPORTED_MODULE_0__.VALID_PUNCTUATION + _common__WEBPACK_IMPORTED_MODULE_0__.VALID_DIGITS + ']*';\n\nvar EXTN_PATTERNS_FOR_PARSING = (0,_common__WEBPACK_IMPORTED_MODULE_0__.create_extension_pattern)('parsing');\n\nvar WHITESPACE_IN_THE_BEGINNING_PATTERN = new RegExp('^[' + _common__WEBPACK_IMPORTED_MODULE_0__.WHITESPACE + ']+');\nvar WHITESPACE_IN_THE_END_PATTERN = new RegExp('[' + _common__WEBPACK_IMPORTED_MODULE_0__.WHITESPACE + ']+$');\n\n// // Regular expression for getting opening brackets for a valid number\n// // found using `PHONE_NUMBER_START_PATTERN` for prepending those brackets to the number.\n// const BEFORE_NUMBER_DIGITS_PUNCTUATION = new RegExp('[' + OPENING_BRACKETS + ']+' + '[' + WHITESPACE + ']*' + '$')\n\nvar VALID_PRECEDING_CHARACTER_PATTERN = /[^a-zA-Z0-9]/;\n\nfunction findPhoneNumbers(arg_1, arg_2, arg_3, arg_4) {\n\tvar _sort_out_arguments = sort_out_arguments(arg_1, arg_2, arg_3, arg_4),\n\t    text = _sort_out_arguments.text,\n\t    options = _sort_out_arguments.options,\n\t    metadata = _sort_out_arguments.metadata;\n\n\tvar search = new PhoneNumberSearch(text, options, metadata.metadata);\n\n\tvar phones = [];\n\n\twhile (search.hasNext()) {\n\t\tphones.push(search.next());\n\t}\n\n\treturn phones;\n}\n\n/**\r\n * @return ES6 `for ... of` iterator.\r\n */\nfunction searchPhoneNumbers(arg_1, arg_2, arg_3, arg_4) {\n\tvar _sort_out_arguments2 = sort_out_arguments(arg_1, arg_2, arg_3, arg_4),\n\t    text = _sort_out_arguments2.text,\n\t    options = _sort_out_arguments2.options,\n\t    metadata = _sort_out_arguments2.metadata;\n\n\tvar search = new PhoneNumberSearch(text, options, metadata.metadata);\n\n\treturn _defineProperty({}, Symbol.iterator, function () {\n\t\treturn {\n\t\t\tnext: function next() {\n\t\t\t\tif (search.hasNext()) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue: search.next()\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tdone: true\n\t\t\t\t};\n\t\t\t}\n\t\t};\n\t});\n}\n\n/**\r\n * Extracts a parseable phone number including any opening brackets, etc.\r\n * @param  {string} text - Input.\r\n * @return {object} `{ ?number, ?startsAt, ?endsAt }`.\r\n */\nvar PhoneNumberSearch = function () {\n\tfunction PhoneNumberSearch(text) {\n\t\tvar options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\tvar metadata = arguments[2];\n\n\t\t_classCallCheck(this, PhoneNumberSearch);\n\n\t\tthis.state = 'NOT_READY';\n\n\t\tthis.text = text;\n\t\tthis.options = options;\n\t\tthis.metadata = metadata;\n\n\t\tthis.regexp = new RegExp(VALID_PHONE_NUMBER +\n\t\t// Phone number extensions\n\t\t'(?:' + EXTN_PATTERNS_FOR_PARSING + ')?', 'ig');\n\n\t\t// this.searching_from = 0\n\t}\n\t// Iteration tristate.\n\n\n\t_createClass(PhoneNumberSearch, [{\n\t\tkey: 'find',\n\t\tvalue: function find() {\n\t\t\tvar matches = this.regexp.exec(this.text);\n\n\t\t\tif (!matches) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar number = matches[0];\n\t\t\tvar startsAt = matches.index;\n\n\t\t\tnumber = number.replace(WHITESPACE_IN_THE_BEGINNING_PATTERN, '');\n\t\t\tstartsAt += matches[0].length - number.length;\n\t\t\tnumber = number.replace(WHITESPACE_IN_THE_END_PATTERN, '');\n\n\t\t\tnumber = (0,_findNumbers_parsePreCandidate__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(number);\n\n\t\t\tvar result = this.parseCandidate(number, startsAt);\n\n\t\t\tif (result) {\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\t// Tail recursion.\n\t\t\t// Try the next one if this one is not a valid phone number.\n\t\t\treturn this.find();\n\t\t}\n\t}, {\n\t\tkey: 'parseCandidate',\n\t\tvalue: function parseCandidate(number, startsAt) {\n\t\t\tif (!(0,_findNumbers_isValidPreCandidate__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(number, startsAt, this.text)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Don't parse phone numbers which are non-phone numbers\n\t\t\t// due to being part of something else (e.g. a UUID).\n\t\t\t// https://github.com/catamphetamine/libphonenumber-js/issues/213\n\t\t\t// Copy-pasted from Google's `PhoneNumberMatcher.js` (`.parseAndValidate()`).\n\t\t\tif (!(0,_findNumbers_isValidCandidate__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(number, startsAt, this.text, this.options.extended ? 'POSSIBLE' : 'VALID')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// // Prepend any opening brackets left behind by the\n\t\t\t// // `PHONE_NUMBER_START_PATTERN` regexp.\n\t\t\t// const text_before_number = text.slice(this.searching_from, startsAt)\n\t\t\t// const full_number_starts_at = text_before_number.search(BEFORE_NUMBER_DIGITS_PUNCTUATION)\n\t\t\t// if (full_number_starts_at >= 0)\n\t\t\t// {\n\t\t\t// \tnumber   = text_before_number.slice(full_number_starts_at) + number\n\t\t\t// \tstartsAt = full_number_starts_at\n\t\t\t// }\n\t\t\t//\n\t\t\t// this.searching_from = matches.lastIndex\n\n\t\t\tvar result = (0,_parse__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(number, this.options, this.metadata);\n\n\t\t\tif (!result.phone) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresult.startsAt = startsAt;\n\t\t\tresult.endsAt = startsAt + number.length;\n\n\t\t\treturn result;\n\t\t}\n\t}, {\n\t\tkey: 'hasNext',\n\t\tvalue: function hasNext() {\n\t\t\tif (this.state === 'NOT_READY') {\n\t\t\t\tthis.last_match = this.find();\n\n\t\t\t\tif (this.last_match) {\n\t\t\t\t\tthis.state = 'READY';\n\t\t\t\t} else {\n\t\t\t\t\tthis.state = 'DONE';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this.state === 'READY';\n\t\t}\n\t}, {\n\t\tkey: 'next',\n\t\tvalue: function next() {\n\t\t\t// Check the state and find the next match as a side-effect if necessary.\n\t\t\tif (!this.hasNext()) {\n\t\t\t\tthrow new Error('No next element');\n\t\t\t}\n\n\t\t\t// Don't retain that memory any longer than necessary.\n\t\t\tvar result = this.last_match;\n\t\t\tthis.last_match = null;\n\t\t\tthis.state = 'NOT_READY';\n\t\t\treturn result;\n\t\t}\n\t}]);\n\n\treturn PhoneNumberSearch;\n}();\n\nfunction sort_out_arguments(arg_1, arg_2, arg_3, arg_4) {\n\tvar text = void 0;\n\tvar options = void 0;\n\tvar metadata = void 0;\n\n\t// If the phone number is passed as a string.\n\t// `parse('88005553535', ...)`.\n\tif (typeof arg_1 === 'string') {\n\t\ttext = arg_1;\n\t} else throw new TypeError('A text for parsing must be a string.');\n\n\t// If \"default country\" argument is being passed\n\t// then move it to `options`.\n\t// `findNumbers('88005553535', 'RU', [options], metadata)`.\n\tif (typeof arg_2 === 'string') {\n\t\tif (arg_4) {\n\t\t\toptions = _extends({ defaultCountry: arg_2 }, arg_3);\n\t\t\tmetadata = arg_4;\n\t\t} else {\n\t\t\toptions = { defaultCountry: arg_2 };\n\t\t\tmetadata = arg_3;\n\t\t}\n\t}\n\t// No \"default country\" argument is being passed.\n\t// Only international phone numbers are passed.\n\t// `findNumbers('+78005553535', [options], metadata)`.\n\telse {\n\t\t\tif (arg_3) {\n\t\t\t\toptions = arg_2;\n\t\t\t\tmetadata = arg_3;\n\t\t\t} else {\n\t\t\t\tmetadata = arg_2;\n\t\t\t}\n\t\t}\n\n\tif (!options) {\n\t\toptions = {};\n\t}\n\n\t// // Apply default options.\n\t// if (options)\n\t// {\n\t// \toptions = { ...default_options, ...options }\n\t// }\n\t// else\n\t// {\n\t// \toptions = default_options\n\t// }\n\n\treturn { text: text, options: options, metadata: new _metadata__WEBPACK_IMPORTED_MODULE_5__[\"default\"](metadata) };\n}\n//# sourceMappingURL=findPhoneNumbers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/findPhoneNumbers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/format.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/format.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FIRST_GROUP_PATTERN: () => (/* binding */ FIRST_GROUP_PATTERN),\n/* harmony export */   choose_format_for_number: () => (/* binding */ choose_format_for_number),\n/* harmony export */   \"default\": () => (/* binding */ format),\n/* harmony export */   formatIDDSameCountryCallingCodeNumber: () => (/* binding */ formatIDDSameCountryCallingCodeNumber),\n/* harmony export */   format_national_number_using_format: () => (/* binding */ format_national_number_using_format),\n/* harmony export */   local_to_international_style: () => (/* binding */ local_to_international_style)\n/* harmony export */ });\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/common.js\");\n/* harmony import */ var _IDD__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./IDD */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/IDD.js\");\n/* harmony import */ var _metadata__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./metadata */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/metadata.js\");\n/* harmony import */ var _RFC3966__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./RFC3966 */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/RFC3966.js\");\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n// This is a port of Google Android `libphonenumber`'s\n// `phonenumberutil.js` of 17th November, 2016.\n//\n// https://github.com/googlei18n/libphonenumber/commits/master/javascript/i18n/phonenumbers/phonenumberutil.js\n\n\n\n\n\n\n\n\n\nvar defaultOptions = {\n\tformatExtension: function formatExtension(number, extension, metadata) {\n\t\treturn '' + number + metadata.ext() + extension;\n\t}\n\n\t// Formats a phone number\n\t//\n\t// Example use cases:\n\t//\n\t// ```js\n\t// format('8005553535', 'RU', 'International')\n\t// format('8005553535', 'RU', 'International', metadata)\n\t// format({ phone: '8005553535', country: 'RU' }, 'International')\n\t// format({ phone: '8005553535', country: 'RU' }, 'International', metadata)\n\t// format('+78005553535', 'National')\n\t// format('+78005553535', 'National', metadata)\n\t// ```\n\t//\n};function format(arg_1, arg_2, arg_3, arg_4, arg_5) {\n\tvar _sort_out_arguments = sort_out_arguments(arg_1, arg_2, arg_3, arg_4, arg_5),\n\t    input = _sort_out_arguments.input,\n\t    format_type = _sort_out_arguments.format_type,\n\t    options = _sort_out_arguments.options,\n\t    metadata = _sort_out_arguments.metadata;\n\n\tif (input.country && metadata.hasCountry(input.country)) {\n\t\tmetadata.country(input.country);\n\t}\n\n\t// `number` is a national (significant) number in this case.\n\n\tvar _extractCountryCallin = (0,_common__WEBPACK_IMPORTED_MODULE_0__.extractCountryCallingCode)(input.phone, null, metadata),\n\t    countryCallingCode = _extractCountryCallin.countryCallingCode,\n\t    number = _extractCountryCallin.number;\n\n\tcountryCallingCode = countryCallingCode || input.countryCallingCode;\n\n\tif (countryCallingCode) {\n\t\t// Check country restriction\n\t\tif (input.country && metadata.selectedCountry() && countryCallingCode !== metadata.countryCallingCode()) {\n\t\t\treturn input.phone;\n\t\t}\n\n\t\tmetadata.chooseCountryByCountryCallingCode(countryCallingCode);\n\t}\n\n\tif (!metadata.selectedCountry()) {\n\t\treturn input.phone;\n\t}\n\n\tswitch (format_type) {\n\t\tcase 'International':\n\t\t\tif (!number) {\n\t\t\t\treturn '+' + metadata.countryCallingCode();\n\t\t\t}\n\t\t\tnumber = format_national_number(number, 'International', false, metadata);\n\t\t\tnumber = '+' + metadata.countryCallingCode() + ' ' + number;\n\t\t\treturn add_extension(number, input.ext, metadata, options.formatExtension);\n\n\t\tcase 'E.164':\n\t\t\t// `E.164` doesn't define \"phone number extensions\".\n\t\t\treturn '+' + metadata.countryCallingCode() + input.phone;\n\n\t\tcase 'RFC3966':\n\t\t\treturn (0,_RFC3966__WEBPACK_IMPORTED_MODULE_1__.formatRFC3966)({\n\t\t\t\tnumber: '+' + metadata.countryCallingCode() + input.phone,\n\t\t\t\text: input.ext\n\t\t\t});\n\n\t\tcase 'IDD':\n\t\t\tif (!options.fromCountry) {\n\t\t\t\treturn;\n\t\t\t\t// throw new Error('`fromCountry` option not passed for IDD-prefixed formatting.')\n\t\t\t}\n\t\t\tvar IDDPrefix = (0,_IDD__WEBPACK_IMPORTED_MODULE_2__.getIDDPrefix)(options.fromCountry, metadata.metadata);\n\t\t\tif (!IDDPrefix) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (options.humanReadable) {\n\t\t\t\tvar formattedForSameCountryCallingCode = countryCallingCode && formatIDDSameCountryCallingCodeNumber(number, countryCallingCode, options.fromCountry, metadata);\n\t\t\t\tif (formattedForSameCountryCallingCode) {\n\t\t\t\t\tnumber = formattedForSameCountryCallingCode;\n\t\t\t\t} else {\n\t\t\t\t\tnumber = IDDPrefix + ' ' + metadata.countryCallingCode() + ' ' + format_national_number(number, 'International', false, metadata);\n\t\t\t\t}\n\t\t\t\treturn add_extension(number, input.ext, metadata, options.formatExtension);\n\t\t\t}\n\t\t\treturn '' + IDDPrefix + metadata.countryCallingCode() + number;\n\n\t\tcase 'National':\n\t\t\tif (!number) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tnumber = format_national_number(number, 'National', false, metadata);\n\t\t\treturn add_extension(number, input.ext, metadata, options.formatExtension);\n\t}\n}\n\n// This was originally set to $1 but there are some countries for which the\n// first group is not used in the national pattern (e.g. Argentina) so the $1\n// group does not match correctly.  Therefore, we use \\d, so that the first\n// group actually used in the pattern will be matched.\nvar FIRST_GROUP_PATTERN = /(\\$\\d)/;\n\nfunction format_national_number_using_format(number, format, international, enforce_national_prefix, metadata) {\n\tvar format_pattern_matcher = new RegExp(format.pattern());\n\n\t// National prefix is omitted if there's no national prefix formatting rule\n\t// set for this country, or when this rule is set but\n\t// national prefix is optional for this phone number format\n\t// (and it is not enforced explicitly)\n\tvar national_prefix_may_be_omitted = !format.nationalPrefixFormattingRule() || format.nationalPrefixFormattingRule() && format.nationalPrefixIsOptionalWhenFormatting() && !enforce_national_prefix;\n\n\tif (!international && !national_prefix_may_be_omitted) {\n\t\treturn number.replace(format_pattern_matcher, format.format().replace(FIRST_GROUP_PATTERN, format.nationalPrefixFormattingRule()));\n\t}\n\n\tvar formatted_number = number.replace(format_pattern_matcher, international ? format.internationalFormat() : format.format());\n\n\tif (international) {\n\t\treturn local_to_international_style(formatted_number);\n\t}\n\n\treturn formatted_number;\n}\n\nfunction format_national_number(number, format_as, enforce_national_prefix, metadata) {\n\tvar format = choose_format_for_number(metadata.formats(), number);\n\n\tif (!format) {\n\t\treturn number;\n\t}\n\n\treturn format_national_number_using_format(number, format, format_as === 'International', enforce_national_prefix, metadata);\n}\n\nfunction choose_format_for_number(available_formats, national_number) {\n\tfor (var _iterator = available_formats, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n\t\tvar _ref;\n\n\t\tif (_isArray) {\n\t\t\tif (_i >= _iterator.length) break;\n\t\t\t_ref = _iterator[_i++];\n\t\t} else {\n\t\t\t_i = _iterator.next();\n\t\t\tif (_i.done) break;\n\t\t\t_ref = _i.value;\n\t\t}\n\n\t\tvar _format = _ref;\n\n\t\t// Validate leading digits\n\t\tif (_format.leadingDigitsPatterns().length > 0) {\n\t\t\t// The last leading_digits_pattern is used here, as it is the most detailed\n\t\t\tvar last_leading_digits_pattern = _format.leadingDigitsPatterns()[_format.leadingDigitsPatterns().length - 1];\n\n\t\t\t// If leading digits don't match then move on to the next phone number format\n\t\t\tif (national_number.search(last_leading_digits_pattern) !== 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\t// Check that the national number matches the phone number format regular expression\n\t\tif ((0,_common__WEBPACK_IMPORTED_MODULE_0__.matches_entirely)(national_number, new RegExp(_format.pattern()))) {\n\t\t\treturn _format;\n\t\t}\n\t}\n}\n\n// Removes brackets and replaces dashes with spaces.\n//\n// E.g. \"(999) 111-22-33\" -> \"999 111 22 33\"\n//\nfunction local_to_international_style(local) {\n\treturn local.replace(new RegExp('[' + _common__WEBPACK_IMPORTED_MODULE_0__.VALID_PUNCTUATION + ']+', 'g'), ' ').trim();\n}\n\n// Sort out arguments\nfunction sort_out_arguments(arg_1, arg_2, arg_3, arg_4, arg_5) {\n\tvar input = void 0;\n\tvar format_type = void 0;\n\tvar options = void 0;\n\tvar metadata = void 0;\n\n\t// Sort out arguments.\n\n\t// If the phone number is passed as a string.\n\t// `format('8005553535', ...)`.\n\tif (typeof arg_1 === 'string') {\n\t\t// If country code is supplied.\n\t\t// `format('8005553535', 'RU', 'National', [options], metadata)`.\n\t\tif (typeof arg_3 === 'string') {\n\t\t\t// Will be `parse()`d later in code\n\t\t\tinput = {\n\t\t\t\tphone: arg_1,\n\t\t\t\tcountry: arg_2\n\t\t\t};\n\n\t\t\tformat_type = arg_3;\n\n\t\t\tif (arg_5) {\n\t\t\t\toptions = arg_4;\n\t\t\t\tmetadata = arg_5;\n\t\t\t} else {\n\t\t\t\tmetadata = arg_4;\n\t\t\t}\n\t\t}\n\t\t// Just an international phone number is supplied\n\t\t// `format('+78005553535', 'National', [options], metadata)`.\n\t\telse {\n\t\t\t\t// Will be `parse()`d later in code\n\t\t\t\tinput = {\n\t\t\t\t\tphone: arg_1\n\t\t\t\t};\n\n\t\t\t\tif (typeof arg_2 !== 'string') {\n\t\t\t\t\tthrow new Error('Format type argument not passed for `format()`');\n\t\t\t\t}\n\n\t\t\t\tformat_type = arg_2;\n\n\t\t\t\tif (arg_4) {\n\t\t\t\t\toptions = arg_3;\n\t\t\t\t\tmetadata = arg_4;\n\t\t\t\t} else {\n\t\t\t\t\tmetadata = arg_3;\n\t\t\t\t}\n\t\t\t}\n\t}\n\t// If the phone number is passed as a parsed number object.\n\t// `format({ phone: '8005553535', country: 'RU' }, 'National', [options], metadata)`.\n\telse if (is_object(arg_1) && typeof arg_1.phone === 'string') {\n\t\t\tinput = arg_1;\n\t\t\tformat_type = arg_2;\n\n\t\t\tif (arg_4) {\n\t\t\t\toptions = arg_3;\n\t\t\t\tmetadata = arg_4;\n\t\t\t} else {\n\t\t\t\tmetadata = arg_3;\n\t\t\t}\n\t\t} else throw new TypeError('A phone number must either be a string or an object of shape { phone, [country] }.');\n\n\t// Validate `format_type`.\n\tswitch (format_type) {\n\t\tcase 'International':\n\t\tcase 'E.164':\n\t\tcase 'National':\n\t\tcase 'RFC3966':\n\t\tcase 'IDD':\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new Error('Unknown format type argument passed to \"format()\": \"' + format_type + '\"');\n\t}\n\n\t// Apply default options.\n\tif (options) {\n\t\toptions = _extends({}, defaultOptions, options);\n\t} else {\n\t\toptions = defaultOptions;\n\t}\n\n\treturn { input: input, format_type: format_type, options: options, metadata: new _metadata__WEBPACK_IMPORTED_MODULE_3__[\"default\"](metadata) };\n}\n\n// Babel transforms `typeof` into some \"branches\"\n// so istanbul will show this as \"branch not covered\".\n/* istanbul ignore next */\nvar is_object = function is_object(_) {\n\treturn (typeof _ === 'undefined' ? 'undefined' : _typeof(_)) === 'object';\n};\n\nfunction add_extension(number, ext, metadata, formatExtension) {\n\treturn ext ? formatExtension(number, ext, metadata) : number;\n}\n\nfunction formatIDDSameCountryCallingCodeNumber(number, toCountryCallingCode, fromCountry, toCountryMetadata) {\n\tvar fromCountryMetadata = new _metadata__WEBPACK_IMPORTED_MODULE_3__[\"default\"](toCountryMetadata.metadata);\n\tfromCountryMetadata.country(fromCountry);\n\n\t// If calling within the same country calling code.\n\tif (toCountryCallingCode === fromCountryMetadata.countryCallingCode()) {\n\t\t// For NANPA regions, return the national format for these regions\n\t\t// but prefix it with the country calling code.\n\t\tif (toCountryCallingCode === '1') {\n\t\t\treturn toCountryCallingCode + ' ' + format_national_number(number, 'National', false, toCountryMetadata);\n\t\t}\n\n\t\t// If regions share a country calling code, the country calling code need\n\t\t// not be dialled. This also applies when dialling within a region, so this\n\t\t// if clause covers both these cases. Technically this is the case for\n\t\t// dialling from La Reunion to other overseas departments of France (French\n\t\t// Guiana, Martinique, Guadeloupe), but not vice versa - so we don't cover\n\t\t// this edge case for now and for those cases return the version including\n\t\t// country calling code. Details here:\n\t\t// http://www.petitfute.com/voyage/225-info-pratiques-reunion\n\t\treturn format_national_number(number, 'National', false, toCountryMetadata);\n\t}\n}\n//# sourceMappingURL=format.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/format.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/getCountryCallingCode.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/getCountryCallingCode.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _metadata__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./metadata */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/metadata.js\");\n\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(country, metadata) {\n\tmetadata = new _metadata__WEBPACK_IMPORTED_MODULE_0__[\"default\"](metadata);\n\n\tif (!metadata.hasCountry(country)) {\n\t\tthrow new Error('Unknown country: ' + country);\n\t}\n\n\treturn metadata.country(country).countryCallingCode();\n}\n//# sourceMappingURL=getCountryCallingCode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vbGlicGhvbmVudW1iZXItanNAMS4zLjAvbm9kZV9tb2R1bGVzL2xpYnBob25lbnVtYmVyLWpzL2VzNi9nZXRDb3VudHJ5Q2FsbGluZ0NvZGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBa0M7O0FBRWxDLDZCQUFlLG9DQUFVO0FBQ3pCLGdCQUFnQixpREFBUTs7QUFFeEI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B3YWduZXJhbmRjby9mcm9udGVuZC8uL25vZGVfbW9kdWxlcy8ucG5wbS9saWJwaG9uZW51bWJlci1qc0AxLjMuMC9ub2RlX21vZHVsZXMvbGlicGhvbmVudW1iZXItanMvZXM2L2dldENvdW50cnlDYWxsaW5nQ29kZS5qcz80YzA4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBNZXRhZGF0YSBmcm9tICcuL21ldGFkYXRhJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gKGNvdW50cnksIG1ldGFkYXRhKSB7XG5cdG1ldGFkYXRhID0gbmV3IE1ldGFkYXRhKG1ldGFkYXRhKTtcblxuXHRpZiAoIW1ldGFkYXRhLmhhc0NvdW50cnkoY291bnRyeSkpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoJ1Vua25vd24gY291bnRyeTogJyArIGNvdW50cnkpO1xuXHR9XG5cblx0cmV0dXJuIG1ldGFkYXRhLmNvdW50cnkoY291bnRyeSkuY291bnRyeUNhbGxpbmdDb2RlKCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRDb3VudHJ5Q2FsbGluZ0NvZGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/getCountryCallingCode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/getNumberType.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/getNumberType.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   check_number_length_for_type: () => (/* binding */ check_number_length_for_type),\n/* harmony export */   \"default\": () => (/* binding */ get_number_type),\n/* harmony export */   is_of_type: () => (/* binding */ is_of_type),\n/* harmony export */   merge_arrays: () => (/* binding */ merge_arrays),\n/* harmony export */   sort_out_arguments: () => (/* binding */ sort_out_arguments)\n/* harmony export */ });\n/* harmony import */ var _parse__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parse */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/parse.js\");\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/common.js\");\n/* harmony import */ var _metadata__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./metadata */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/metadata.js\");\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n\n\n\n\n\n\nvar non_fixed_line_types = ['MOBILE', 'PREMIUM_RATE', 'TOLL_FREE', 'SHARED_COST', 'VOIP', 'PERSONAL_NUMBER', 'PAGER', 'UAN', 'VOICEMAIL'];\n\n// Finds out national phone number type (fixed line, mobile, etc)\nfunction get_number_type(arg_1, arg_2, arg_3) {\n\tvar _sort_out_arguments = sort_out_arguments(arg_1, arg_2, arg_3),\n\t    input = _sort_out_arguments.input,\n\t    metadata = _sort_out_arguments.metadata;\n\n\t// When no input was passed\n\n\n\tif (!input) {\n\t\treturn;\n\t}\n\n\t// When `parse()` returned `{}`\n\t// meaning that the phone number is not a valid one.\n\tif (!input.country) {\n\t\treturn;\n\t}\n\n\tif (!metadata.hasCountry(input.country)) {\n\t\tthrow new Error('Unknown country: ' + input.country);\n\t}\n\n\tvar national_number = input.phone;\n\tmetadata.country(input.country);\n\n\t// The following is copy-pasted from the original function:\n\t// https://github.com/googlei18n/libphonenumber/blob/3ea547d4fbaa2d0b67588904dfa5d3f2557c27ff/javascript/i18n/phonenumbers/phonenumberutil.js#L2835\n\n\t// Is this national number even valid for this country\n\tif (!(0,_common__WEBPACK_IMPORTED_MODULE_0__.matches_entirely)(national_number, metadata.nationalNumberPattern())) {\n\t\treturn;\n\t}\n\n\t// Is it fixed line number\n\tif (is_of_type(national_number, 'FIXED_LINE', metadata)) {\n\t\t// Because duplicate regular expressions are removed\n\t\t// to reduce metadata size, if \"mobile\" pattern is \"\"\n\t\t// then it means it was removed due to being a duplicate of the fixed-line pattern.\n\t\t//\n\t\tif (metadata.type('MOBILE') && metadata.type('MOBILE').pattern() === '') {\n\t\t\treturn 'FIXED_LINE_OR_MOBILE';\n\t\t}\n\n\t\t// v1 metadata.\n\t\t// Legacy.\n\t\t// Deprecated.\n\t\tif (!metadata.type('MOBILE')) {\n\t\t\treturn 'FIXED_LINE_OR_MOBILE';\n\t\t}\n\n\t\t// Check if the number happens to qualify as both fixed line and mobile.\n\t\t// (no such country in the minimal metadata set)\n\t\t/* istanbul ignore if */\n\t\tif (is_of_type(national_number, 'MOBILE', metadata)) {\n\t\t\treturn 'FIXED_LINE_OR_MOBILE';\n\t\t}\n\n\t\treturn 'FIXED_LINE';\n\t}\n\n\tfor (var _iterator = non_fixed_line_types, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n\t\tvar _ref;\n\n\t\tif (_isArray) {\n\t\t\tif (_i >= _iterator.length) break;\n\t\t\t_ref = _iterator[_i++];\n\t\t} else {\n\t\t\t_i = _iterator.next();\n\t\t\tif (_i.done) break;\n\t\t\t_ref = _i.value;\n\t\t}\n\n\t\tvar _type = _ref;\n\n\t\tif (is_of_type(national_number, _type, metadata)) {\n\t\t\treturn _type;\n\t\t}\n\t}\n}\n\nfunction is_of_type(national_number, type, metadata) {\n\ttype = metadata.type(type);\n\n\tif (!type || !type.pattern()) {\n\t\treturn false;\n\t}\n\n\t// Check if any possible number lengths are present;\n\t// if so, we use them to avoid checking\n\t// the validation pattern if they don't match.\n\t// If they are absent, this means they match\n\t// the general description, which we have\n\t// already checked before a specific number type.\n\tif (type.possibleLengths() && type.possibleLengths().indexOf(national_number.length) < 0) {\n\t\treturn false;\n\t}\n\n\treturn (0,_common__WEBPACK_IMPORTED_MODULE_0__.matches_entirely)(national_number, type.pattern());\n}\n\n// Sort out arguments\nfunction sort_out_arguments(arg_1, arg_2, arg_3) {\n\tvar input = void 0;\n\tvar metadata = void 0;\n\n\t// If the phone number is passed as a string.\n\t// `getNumberType('88005553535', ...)`.\n\tif (typeof arg_1 === 'string') {\n\t\t// If \"resrict country\" argument is being passed\n\t\t// then convert it to an `options` object.\n\t\t// `getNumberType('88005553535', 'RU', metadata)`.\n\t\tif (typeof arg_2 === 'string' || arg_2 === undefined) {\n\t\t\tmetadata = arg_3;\n\n\t\t\t// `parse` extracts phone numbers from raw text,\n\t\t\t// therefore it will cut off all \"garbage\" characters,\n\t\t\t// while this `validate` function needs to verify\n\t\t\t// that the phone number contains no \"garbage\"\n\t\t\t// therefore the explicit `is_viable_phone_number` check.\n\t\t\tif ((0,_parse__WEBPACK_IMPORTED_MODULE_1__.is_viable_phone_number)(arg_1)) {\n\t\t\t\tinput = (0,_parse__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(arg_1, arg_2, metadata);\n\t\t\t}\n\t\t}\n\t\t// No \"resrict country\" argument is being passed.\n\t\t// International phone number is passed.\n\t\t// `getNumberType('+78005553535', metadata)`.\n\t\telse {\n\t\t\t\tmetadata = arg_2;\n\n\t\t\t\t// `parse` extracts phone numbers from raw text,\n\t\t\t\t// therefore it will cut off all \"garbage\" characters,\n\t\t\t\t// while this `validate` function needs to verify\n\t\t\t\t// that the phone number contains no \"garbage\"\n\t\t\t\t// therefore the explicit `is_viable_phone_number` check.\n\t\t\t\tif ((0,_parse__WEBPACK_IMPORTED_MODULE_1__.is_viable_phone_number)(arg_1)) {\n\t\t\t\t\tinput = (0,_parse__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(arg_1, metadata);\n\t\t\t\t}\n\t\t\t}\n\t}\n\t// If the phone number is passed as a parsed phone number.\n\t// `getNumberType({ phone: '88005553535', country: 'RU' }, ...)`.\n\telse if (is_object(arg_1) && typeof arg_1.phone === 'string') {\n\t\t\t// The `arg_1` must be a valid phone number\n\t\t\t// as a whole, not just a part of it which gets parsed here.\n\t\t\tif ((0,_parse__WEBPACK_IMPORTED_MODULE_1__.is_viable_phone_number)(arg_1.phone)) {\n\t\t\t\tinput = arg_1;\n\t\t\t}\n\n\t\t\tmetadata = arg_2;\n\t\t} else throw new TypeError('A phone number must either be a string or an object of shape { phone, [country] }.');\n\n\treturn { input: input, metadata: new _metadata__WEBPACK_IMPORTED_MODULE_2__[\"default\"](metadata) };\n}\n\n// Should only be called for the \"new\" metadata which has \"possible lengths\".\nfunction check_number_length_for_type(national_number, type, metadata) {\n\tvar type_info = metadata.type(type);\n\n\t// There should always be \"<possiblePengths/>\" set for every type element.\n\t// This is declared in the XML schema.\n\t// For size efficiency, where a sub-description (e.g. fixed-line)\n\t// has the same \"<possiblePengths/>\" as the \"general description\", this is missing,\n\t// so we fall back to the \"general description\". Where no numbers of the type\n\t// exist at all, there is one possible length (-1) which is guaranteed\n\t// not to match the length of any real phone number.\n\tvar possible_lengths = type_info && type_info.possibleLengths() || metadata.possibleLengths();\n\t// let local_lengths    = type_info && type.possibleLengthsLocal() || metadata.possibleLengthsLocal()\n\n\tif (type === 'FIXED_LINE_OR_MOBILE') {\n\t\t// No such country in metadata.\n\t\t/* istanbul ignore next */\n\t\tif (!metadata.type('FIXED_LINE')) {\n\t\t\t// The rare case has been encountered where no fixedLine data is available\n\t\t\t// (true for some non-geographical entities), so we just check mobile.\n\t\t\treturn test_number_length_for_type(national_number, 'MOBILE', metadata);\n\t\t}\n\n\t\tvar mobile_type = metadata.type('MOBILE');\n\n\t\tif (mobile_type) {\n\t\t\t// Merge the mobile data in if there was any. \"Concat\" creates a new\n\t\t\t// array, it doesn't edit possible_lengths in place, so we don't need a copy.\n\t\t\t// Note that when adding the possible lengths from mobile, we have\n\t\t\t// to again check they aren't empty since if they are this indicates\n\t\t\t// they are the same as the general desc and should be obtained from there.\n\t\t\tpossible_lengths = merge_arrays(possible_lengths, mobile_type.possibleLengths());\n\t\t\t// The current list is sorted; we need to merge in the new list and\n\t\t\t// re-sort (duplicates are okay). Sorting isn't so expensive because\n\t\t\t// the lists are very small.\n\n\t\t\t// if (local_lengths)\n\t\t\t// {\n\t\t\t// \tlocal_lengths = merge_arrays(local_lengths, mobile_type.possibleLengthsLocal())\n\t\t\t// }\n\t\t\t// else\n\t\t\t// {\n\t\t\t// \tlocal_lengths = mobile_type.possibleLengthsLocal()\n\t\t\t// }\n\t\t}\n\t}\n\t// If the type doesn't exist then return 'INVALID_LENGTH'.\n\telse if (type && !type_info) {\n\t\t\treturn 'INVALID_LENGTH';\n\t\t}\n\n\tvar actual_length = national_number.length;\n\n\t// // This is safe because there is never an overlap beween the possible lengths\n\t// // and the local-only lengths; this is checked at build time.\n\t// if (local_lengths && local_lengths.indexOf(national_number.length) >= 0)\n\t// {\n\t// \treturn 'IS_POSSIBLE_LOCAL_ONLY'\n\t// }\n\n\tvar minimum_length = possible_lengths[0];\n\n\tif (minimum_length === actual_length) {\n\t\treturn 'IS_POSSIBLE';\n\t}\n\n\tif (minimum_length > actual_length) {\n\t\treturn 'TOO_SHORT';\n\t}\n\n\tif (possible_lengths[possible_lengths.length - 1] < actual_length) {\n\t\treturn 'TOO_LONG';\n\t}\n\n\t// We skip the first element since we've already checked it.\n\treturn possible_lengths.indexOf(actual_length, 1) >= 0 ? 'IS_POSSIBLE' : 'INVALID_LENGTH';\n}\n\n// Babel transforms `typeof` into some \"branches\"\n// so istanbul will show this as \"branch not covered\".\n/* istanbul ignore next */\nvar is_object = function is_object(_) {\n\treturn (typeof _ === 'undefined' ? 'undefined' : _typeof(_)) === 'object';\n};\n\nfunction merge_arrays(a, b) {\n\tvar merged = a.slice();\n\n\tfor (var _iterator2 = b, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n\t\tvar _ref2;\n\n\t\tif (_isArray2) {\n\t\t\tif (_i2 >= _iterator2.length) break;\n\t\t\t_ref2 = _iterator2[_i2++];\n\t\t} else {\n\t\t\t_i2 = _iterator2.next();\n\t\t\tif (_i2.done) break;\n\t\t\t_ref2 = _i2.value;\n\t\t}\n\n\t\tvar element = _ref2;\n\n\t\tif (a.indexOf(element) < 0) {\n\t\t\tmerged.push(element);\n\t\t}\n\t}\n\n\treturn merged.sort(function (a, b) {\n\t\treturn a - b;\n\t});\n\n\t// ES6 version, requires Set polyfill.\n\t// let merged = new Set(a)\n\t// for (const element of b)\n\t// {\n\t// \tmerged.add(i)\n\t// }\n\t// return Array.from(merged).sort((a, b) => a - b)\n}\n//# sourceMappingURL=getNumberType.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/getNumberType.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/isValidNumberForRegion.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/isValidNumberForRegion.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isValidNumberForRegion)\n/* harmony export */ });\n/* harmony import */ var _getNumberType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getNumberType */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/getNumberType.js\");\n/* harmony import */ var _validate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./validate */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/validate.js\");\n\n\n\n/**\r\n * Checks if a given phone number is valid.\r\n *\r\n * If the `number` is a string, it will be parsed to an object,\r\n * but only if it contains only valid phone number characters.\r\n * If the `number` is an object, it is used as is.\r\n *\r\n * The `country` argument is the country the number must belong to.\r\n * This is a stricter version of `isValidNumber(number, defaultCountry)`.\r\n * Though restricting a country might not be a good idea.\r\n * https://github.com/googlei18n/libphonenumber/blob/master/FAQ.md#when-should-i-use-isvalidnumberforregion\r\n *\r\n * Doesn't accept `number` object, only `number` string with a `country` string.\r\n */\nfunction isValidNumberForRegion(number, country, _metadata) {\n  if (typeof number !== 'string') {\n    throw new TypeError('number must be a string');\n  }\n\n  if (typeof country !== 'string') {\n    throw new TypeError('country must be a string');\n  }\n\n  var _sort_out_arguments = (0,_getNumberType__WEBPACK_IMPORTED_MODULE_0__.sort_out_arguments)(number, country, _metadata),\n      input = _sort_out_arguments.input,\n      metadata = _sort_out_arguments.metadata;\n\n  var isValid = (0,_validate__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(input, metadata.metadata);\n\n  return isValid && input.country === country;\n}\n//# sourceMappingURL=isValidNumberForRegion.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vbGlicGhvbmVudW1iZXItanNAMS4zLjAvbm9kZV9tb2R1bGVzL2xpYnBob25lbnVtYmVyLWpzL2VzNi9pc1ZhbGlkTnVtYmVyRm9yUmVnaW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxRDtBQUNkOztBQUV2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2U7QUFDZjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLDRCQUE0QixrRUFBa0I7QUFDOUM7QUFDQTs7QUFFQSxnQkFBZ0IscURBQWE7O0FBRTdCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B3YWduZXJhbmRjby9mcm9udGVuZC8uL25vZGVfbW9kdWxlcy8ucG5wbS9saWJwaG9uZW51bWJlci1qc0AxLjMuMC9ub2RlX21vZHVsZXMvbGlicGhvbmVudW1iZXItanMvZXM2L2lzVmFsaWROdW1iZXJGb3JSZWdpb24uanM/OGE3MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzb3J0X291dF9hcmd1bWVudHMgfSBmcm9tICcuL2dldE51bWJlclR5cGUnO1xuaW1wb3J0IGlzVmFsaWROdW1iZXIgZnJvbSAnLi92YWxpZGF0ZSc7XG5cbi8qKlxyXG4gKiBDaGVja3MgaWYgYSBnaXZlbiBwaG9uZSBudW1iZXIgaXMgdmFsaWQuXHJcbiAqXHJcbiAqIElmIHRoZSBgbnVtYmVyYCBpcyBhIHN0cmluZywgaXQgd2lsbCBiZSBwYXJzZWQgdG8gYW4gb2JqZWN0LFxyXG4gKiBidXQgb25seSBpZiBpdCBjb250YWlucyBvbmx5IHZhbGlkIHBob25lIG51bWJlciBjaGFyYWN0ZXJzLlxyXG4gKiBJZiB0aGUgYG51bWJlcmAgaXMgYW4gb2JqZWN0LCBpdCBpcyB1c2VkIGFzIGlzLlxyXG4gKlxyXG4gKiBUaGUgYGNvdW50cnlgIGFyZ3VtZW50IGlzIHRoZSBjb3VudHJ5IHRoZSBudW1iZXIgbXVzdCBiZWxvbmcgdG8uXHJcbiAqIFRoaXMgaXMgYSBzdHJpY3RlciB2ZXJzaW9uIG9mIGBpc1ZhbGlkTnVtYmVyKG51bWJlciwgZGVmYXVsdENvdW50cnkpYC5cclxuICogVGhvdWdoIHJlc3RyaWN0aW5nIGEgY291bnRyeSBtaWdodCBub3QgYmUgYSBnb29kIGlkZWEuXHJcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9nb29nbGVpMThuL2xpYnBob25lbnVtYmVyL2Jsb2IvbWFzdGVyL0ZBUS5tZCN3aGVuLXNob3VsZC1pLXVzZS1pc3ZhbGlkbnVtYmVyZm9ycmVnaW9uXHJcbiAqXHJcbiAqIERvZXNuJ3QgYWNjZXB0IGBudW1iZXJgIG9iamVjdCwgb25seSBgbnVtYmVyYCBzdHJpbmcgd2l0aCBhIGBjb3VudHJ5YCBzdHJpbmcuXHJcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaXNWYWxpZE51bWJlckZvclJlZ2lvbihudW1iZXIsIGNvdW50cnksIF9tZXRhZGF0YSkge1xuICBpZiAodHlwZW9mIG51bWJlciAhPT0gJ3N0cmluZycpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdudW1iZXIgbXVzdCBiZSBhIHN0cmluZycpO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBjb3VudHJ5ICE9PSAnc3RyaW5nJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2NvdW50cnkgbXVzdCBiZSBhIHN0cmluZycpO1xuICB9XG5cbiAgdmFyIF9zb3J0X291dF9hcmd1bWVudHMgPSBzb3J0X291dF9hcmd1bWVudHMobnVtYmVyLCBjb3VudHJ5LCBfbWV0YWRhdGEpLFxuICAgICAgaW5wdXQgPSBfc29ydF9vdXRfYXJndW1lbnRzLmlucHV0LFxuICAgICAgbWV0YWRhdGEgPSBfc29ydF9vdXRfYXJndW1lbnRzLm1ldGFkYXRhO1xuXG4gIHZhciBpc1ZhbGlkID0gaXNWYWxpZE51bWJlcihpbnB1dCwgbWV0YWRhdGEubWV0YWRhdGEpO1xuXG4gIHJldHVybiBpc1ZhbGlkICYmIGlucHV0LmNvdW50cnkgPT09IGNvdW50cnk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pc1ZhbGlkTnVtYmVyRm9yUmVnaW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/isValidNumberForRegion.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/metadata.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/metadata.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getExtPrefix: () => (/* binding */ getExtPrefix),\n/* harmony export */   validateMetadata: () => (/* binding */ validateMetadata)\n/* harmony export */ });\n/* harmony import */ var semver_compare__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! semver-compare */ \"(ssr)/./node_modules/.pnpm/semver-compare@1.0.0/node_modules/semver-compare/index.js\");\n/* harmony import */ var semver_compare__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(semver_compare__WEBPACK_IMPORTED_MODULE_0__);\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\n// Added \"possibleLengths\" and renamed\n// \"country_phone_code_to_countries\" to \"country_calling_codes\".\nvar V2 = '1.0.18';\n\n// Added \"idd_prefix\" and \"default_idd_prefix\".\nvar V3 = '1.2.0';\n\nvar DEFAULT_EXT_PREFIX = ' ext. ';\n\nvar Metadata = function () {\n\tfunction Metadata(metadata) {\n\t\t_classCallCheck(this, Metadata);\n\n\t\tvalidateMetadata(metadata);\n\n\t\tthis.metadata = metadata;\n\n\t\tthis.v1 = !metadata.version;\n\t\tthis.v2 = metadata.version !== undefined && semver_compare__WEBPACK_IMPORTED_MODULE_0___default()(metadata.version, V3) === -1;\n\t\tthis.v3 = metadata.version !== undefined; // && compare(metadata.version, V4) === -1\n\t}\n\n\t_createClass(Metadata, [{\n\t\tkey: 'hasCountry',\n\t\tvalue: function hasCountry(country) {\n\t\t\treturn this.metadata.countries[country] !== undefined;\n\t\t}\n\t}, {\n\t\tkey: 'country',\n\t\tvalue: function country(_country) {\n\t\t\tif (!_country) {\n\t\t\t\tthis._country = undefined;\n\t\t\t\tthis.country_metadata = undefined;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tif (!this.hasCountry(_country)) {\n\t\t\t\tthrow new Error('Unknown country: ' + _country);\n\t\t\t}\n\n\t\t\tthis._country = _country;\n\t\t\tthis.country_metadata = this.metadata.countries[_country];\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'countryCallingCode',\n\t\tvalue: function countryCallingCode() {\n\t\t\treturn this.country_metadata[0];\n\t\t}\n\t}, {\n\t\tkey: 'IDDPrefix',\n\t\tvalue: function IDDPrefix() {\n\t\t\tif (this.v1 || this.v2) return;\n\t\t\treturn this.country_metadata[1];\n\t\t}\n\t}, {\n\t\tkey: 'defaultIDDPrefix',\n\t\tvalue: function defaultIDDPrefix() {\n\t\t\tif (this.v1 || this.v2) return;\n\t\t\treturn this.country_metadata[12];\n\t\t}\n\t}, {\n\t\tkey: 'nationalNumberPattern',\n\t\tvalue: function nationalNumberPattern() {\n\t\t\tif (this.v1 || this.v2) return this.country_metadata[1];\n\t\t\treturn this.country_metadata[2];\n\t\t}\n\t}, {\n\t\tkey: 'possibleLengths',\n\t\tvalue: function possibleLengths() {\n\t\t\tif (this.v1) return;\n\t\t\treturn this.country_metadata[this.v2 ? 2 : 3];\n\t\t}\n\t}, {\n\t\tkey: 'formats',\n\t\tvalue: function formats() {\n\t\t\tvar _this = this;\n\n\t\t\tvar formats = this.country_metadata[this.v1 ? 2 : this.v2 ? 3 : 4] || [];\n\t\t\treturn formats.map(function (_) {\n\t\t\t\treturn new Format(_, _this);\n\t\t\t});\n\t\t}\n\t}, {\n\t\tkey: 'nationalPrefix',\n\t\tvalue: function nationalPrefix() {\n\t\t\treturn this.country_metadata[this.v1 ? 3 : this.v2 ? 4 : 5];\n\t\t}\n\t}, {\n\t\tkey: 'nationalPrefixFormattingRule',\n\t\tvalue: function nationalPrefixFormattingRule() {\n\t\t\treturn this.country_metadata[this.v1 ? 4 : this.v2 ? 5 : 6];\n\t\t}\n\t}, {\n\t\tkey: 'nationalPrefixForParsing',\n\t\tvalue: function nationalPrefixForParsing() {\n\t\t\t// If `national_prefix_for_parsing` is not set explicitly,\n\t\t\t// then infer it from `national_prefix` (if any)\n\t\t\treturn this.country_metadata[this.v1 ? 5 : this.v2 ? 6 : 7] || this.nationalPrefix();\n\t\t}\n\t}, {\n\t\tkey: 'nationalPrefixTransformRule',\n\t\tvalue: function nationalPrefixTransformRule() {\n\t\t\treturn this.country_metadata[this.v1 ? 6 : this.v2 ? 7 : 8];\n\t\t}\n\t}, {\n\t\tkey: 'nationalPrefixIsOptionalWhenFormatting',\n\t\tvalue: function nationalPrefixIsOptionalWhenFormatting() {\n\t\t\treturn !!this.country_metadata[this.v1 ? 7 : this.v2 ? 8 : 9];\n\t\t}\n\t}, {\n\t\tkey: 'leadingDigits',\n\t\tvalue: function leadingDigits() {\n\t\t\treturn this.country_metadata[this.v1 ? 8 : this.v2 ? 9 : 10];\n\t\t}\n\t}, {\n\t\tkey: 'types',\n\t\tvalue: function types() {\n\t\t\treturn this.country_metadata[this.v1 ? 9 : this.v2 ? 10 : 11];\n\t\t}\n\t}, {\n\t\tkey: 'hasTypes',\n\t\tvalue: function hasTypes() {\n\t\t\t// Versions 1.2.0 - 1.2.4: can be `[]`.\n\t\t\t/* istanbul ignore next */\n\t\t\tif (this.types() && this.types().length === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// Versions <= 1.2.4: can be `undefined`.\n\t\t\t// Version >= 1.2.5: can be `0`.\n\t\t\treturn !!this.types();\n\t\t}\n\t}, {\n\t\tkey: 'type',\n\t\tvalue: function type(_type) {\n\t\t\tif (this.hasTypes() && getType(this.types(), _type)) {\n\t\t\t\treturn new Type(getType(this.types(), _type), this);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'ext',\n\t\tvalue: function ext() {\n\t\t\tif (this.v1 || this.v2) return DEFAULT_EXT_PREFIX;\n\t\t\treturn this.country_metadata[13] || DEFAULT_EXT_PREFIX;\n\t\t}\n\t}, {\n\t\tkey: 'countryCallingCodes',\n\t\tvalue: function countryCallingCodes() {\n\t\t\tif (this.v1) return this.metadata.country_phone_code_to_countries;\n\t\t\treturn this.metadata.country_calling_codes;\n\t\t}\n\n\t\t// Formatting information for regions which share\n\t\t// a country calling code is contained by only one region\n\t\t// for performance reasons. For example, for NANPA region\n\t\t// (\"North American Numbering Plan Administration\",\n\t\t//  which includes USA, Canada, Cayman Islands, Bahamas, etc)\n\t\t// it will be contained in the metadata for `US`.\n\t\t//\n\t\t// `country_calling_code` is always valid.\n\t\t// But the actual country may not necessarily be part of the metadata.\n\t\t//\n\n\t}, {\n\t\tkey: 'chooseCountryByCountryCallingCode',\n\t\tvalue: function chooseCountryByCountryCallingCode(country_calling_code) {\n\t\t\tvar country = this.countryCallingCodes()[country_calling_code][0];\n\n\t\t\t// Do not want to test this case.\n\t\t\t// (custom metadata, not all countries).\n\t\t\t/* istanbul ignore else */\n\t\t\tif (this.hasCountry(country)) {\n\t\t\t\tthis.country(country);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'selectedCountry',\n\t\tvalue: function selectedCountry() {\n\t\t\treturn this._country;\n\t\t}\n\t}]);\n\n\treturn Metadata;\n}();\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Metadata);\n\nvar Format = function () {\n\tfunction Format(format, metadata) {\n\t\t_classCallCheck(this, Format);\n\n\t\tthis._format = format;\n\t\tthis.metadata = metadata;\n\t}\n\n\t_createClass(Format, [{\n\t\tkey: 'pattern',\n\t\tvalue: function pattern() {\n\t\t\treturn this._format[0];\n\t\t}\n\t}, {\n\t\tkey: 'format',\n\t\tvalue: function format() {\n\t\t\treturn this._format[1];\n\t\t}\n\t}, {\n\t\tkey: 'leadingDigitsPatterns',\n\t\tvalue: function leadingDigitsPatterns() {\n\t\t\treturn this._format[2] || [];\n\t\t}\n\t}, {\n\t\tkey: 'nationalPrefixFormattingRule',\n\t\tvalue: function nationalPrefixFormattingRule() {\n\t\t\treturn this._format[3] || this.metadata.nationalPrefixFormattingRule();\n\t\t}\n\t}, {\n\t\tkey: 'nationalPrefixIsOptionalWhenFormatting',\n\t\tvalue: function nationalPrefixIsOptionalWhenFormatting() {\n\t\t\treturn !!this._format[4] || this.metadata.nationalPrefixIsOptionalWhenFormatting();\n\t\t}\n\t}, {\n\t\tkey: 'nationalPrefixIsMandatoryWhenFormatting',\n\t\tvalue: function nationalPrefixIsMandatoryWhenFormatting() {\n\t\t\t// National prefix is omitted if there's no national prefix formatting rule\n\t\t\t// set for this country, or when the national prefix formatting rule\n\t\t\t// contains no national prefix itself, or when this rule is set but\n\t\t\t// national prefix is optional for this phone number format\n\t\t\t// (and it is not enforced explicitly)\n\t\t\treturn this.nationalPrefixFormattingRule() &&\n\t\t\t// Check that national prefix formatting rule is not a dummy one.\n\t\t\t// Check that national prefix formatting rule actually has national prefix digit(s).\n\t\t\tthis.usesNationalPrefix() &&\n\t\t\t// Or maybe national prefix is optional for this format\n\t\t\t!this.nationalPrefixIsOptionalWhenFormatting();\n\t\t}\n\n\t\t// Checks whether national prefix formatting rule contains national prefix\n\n\t}, {\n\t\tkey: 'usesNationalPrefix',\n\t\tvalue: function usesNationalPrefix() {\n\t\t\t// Check that national prefix formatting rule is not a dummy one\n\t\t\treturn this.nationalPrefixFormattingRule() !== '$1' &&\n\t\t\t// Check that national prefix formatting rule actually has national prefix digit(s)\n\t\t\t/\\d/.test(this.nationalPrefixFormattingRule().replace('$1', ''));\n\t\t}\n\t}, {\n\t\tkey: 'internationalFormat',\n\t\tvalue: function internationalFormat() {\n\t\t\treturn this._format[5] || this.format();\n\t\t}\n\t}]);\n\n\treturn Format;\n}();\n\nvar Type = function () {\n\tfunction Type(type, metadata) {\n\t\t_classCallCheck(this, Type);\n\n\t\tthis.type = type;\n\t\tthis.metadata = metadata;\n\t}\n\n\t_createClass(Type, [{\n\t\tkey: 'pattern',\n\t\tvalue: function pattern() {\n\t\t\tif (this.metadata.v1) return this.type;\n\t\t\treturn this.type[0];\n\t\t}\n\t}, {\n\t\tkey: 'possibleLengths',\n\t\tvalue: function possibleLengths() {\n\t\t\tif (this.metadata.v1) return;\n\t\t\treturn this.type[1] || this.metadata.possibleLengths();\n\t\t}\n\t}]);\n\n\treturn Type;\n}();\n\nfunction getType(types, type) {\n\tswitch (type) {\n\t\tcase 'FIXED_LINE':\n\t\t\treturn types[0];\n\t\tcase 'MOBILE':\n\t\t\treturn types[1];\n\t\tcase 'TOLL_FREE':\n\t\t\treturn types[2];\n\t\tcase 'PREMIUM_RATE':\n\t\t\treturn types[3];\n\t\tcase 'PERSONAL_NUMBER':\n\t\t\treturn types[4];\n\t\tcase 'VOICEMAIL':\n\t\t\treturn types[5];\n\t\tcase 'UAN':\n\t\t\treturn types[6];\n\t\tcase 'PAGER':\n\t\t\treturn types[7];\n\t\tcase 'VOIP':\n\t\t\treturn types[8];\n\t\tcase 'SHARED_COST':\n\t\t\treturn types[9];\n\t}\n}\n\nfunction validateMetadata(metadata) {\n\tif (!metadata) {\n\t\tthrow new Error('[libphonenumber-js] `metadata` argument not passed. Check your arguments.');\n\t}\n\n\t// `country_phone_code_to_countries` was renamed to\n\t// `country_calling_codes` in `1.0.18`.\n\tif (!is_object(metadata) || !is_object(metadata.countries) || !is_object(metadata.country_calling_codes) && !is_object(metadata.country_phone_code_to_countries)) {\n\t\tthrow new Error('[libphonenumber-js] `metadata` argument was passed but it\\'s not a valid metadata. Must be an object having `.countries` and `.country_calling_codes` child object properties. Got ' + (is_object(metadata) ? 'an object of shape: { ' + Object.keys(metadata).join(', ') + ' }' : 'a ' + type_of(metadata) + ': ' + metadata) + '.');\n\t}\n}\n\n// Babel transforms `typeof` into some \"branches\"\n// so istanbul will show this as \"branch not covered\".\n/* istanbul ignore next */\nvar is_object = function is_object(_) {\n\treturn (typeof _ === 'undefined' ? 'undefined' : _typeof(_)) === 'object';\n};\n\n// Babel transforms `typeof` into some \"branches\"\n// so istanbul will show this as \"branch not covered\".\n/* istanbul ignore next */\nvar type_of = function type_of(_) {\n\treturn typeof _ === 'undefined' ? 'undefined' : _typeof(_);\n};\n\nfunction getExtPrefix(country, metadata) {\n\treturn new Metadata(metadata).country(country).ext();\n}\n//# sourceMappingURL=metadata.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/metadata.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/parse.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/parse.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ parse),\n/* harmony export */   extract_formatted_phone_number: () => (/* binding */ extract_formatted_phone_number),\n/* harmony export */   find_country_code: () => (/* binding */ find_country_code),\n/* harmony export */   is_viable_phone_number: () => (/* binding */ is_viable_phone_number),\n/* harmony export */   strip_national_prefix_and_carrier_code: () => (/* binding */ strip_national_prefix_and_carrier_code)\n/* harmony export */ });\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/common.js\");\n/* harmony import */ var _parseIncompletePhoneNumber__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./parseIncompletePhoneNumber */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/parseIncompletePhoneNumber.js\");\n/* harmony import */ var _metadata__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./metadata */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/metadata.js\");\n/* harmony import */ var _getCountryCallingCode__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getCountryCallingCode */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/getCountryCallingCode.js\");\n/* harmony import */ var _getNumberType__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getNumberType */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/getNumberType.js\");\n/* harmony import */ var _RFC3966__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./RFC3966 */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/RFC3966.js\");\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n// This is a port of Google Android `libphonenumber`'s\n// `phonenumberutil.js` of 17th November, 2016.\n//\n// https://github.com/googlei18n/libphonenumber/commits/master/javascript/i18n/phonenumbers/phonenumberutil.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n// The minimum length of the national significant number.\nvar MIN_LENGTH_FOR_NSN = 2;\n\n// We don't allow input strings for parsing to be longer than 250 chars.\n// This prevents malicious input from consuming CPU.\nvar MAX_INPUT_STRING_LENGTH = 250;\n\n/**\r\n * Regexp of all possible ways to write extensions, for use when parsing. This\r\n * will be run as a case-insensitive regexp match. Wide character versions are\r\n * also provided after each ASCII version. There are three regular expressions\r\n * here. The first covers RFC 3966 format, where the extension is added using\r\n * ';ext='. The second more generic one starts with optional white space and\r\n * ends with an optional full stop (.), followed by zero or more spaces/tabs\r\n * /commas and then the numbers themselves. The other one covers the special\r\n * case of American numbers where the extension is written with a hash at the\r\n * end, such as '- 503#'. Note that the only capturing groups should be around\r\n * the digits that you want to capture as part of the extension, or else parsing\r\n * will fail! We allow two options for representing the accented o - the\r\n * character itself, and one in the unicode decomposed form with the combining\r\n * acute accent.\r\n */\nvar EXTN_PATTERNS_FOR_PARSING = (0,_common__WEBPACK_IMPORTED_MODULE_0__.create_extension_pattern)('parsing');\n\n// Regexp of all known extension prefixes used by different regions followed by\n// 1 or more valid digits, for use when parsing.\nvar EXTN_PATTERN = new RegExp('(?:' + EXTN_PATTERNS_FOR_PARSING + ')$', 'i');\n\n//  Regular expression of viable phone numbers. This is location independent.\n//  Checks we have at least three leading digits, and only valid punctuation,\n//  alpha characters and digits in the phone number. Does not include extension\n//  data. The symbol 'x' is allowed here as valid punctuation since it is often\n//  used as a placeholder for carrier codes, for example in Brazilian phone\n//  numbers. We also allow multiple '+' characters at the start.\n//\n//  Corresponds to the following:\n//  [digits]{minLengthNsn}|\n//  plus_sign*\n//  (([punctuation]|[star])*[digits]){3,}([punctuation]|[star]|[digits]|[alpha])*\n//\n//  The first reg-ex is to allow short numbers (two digits long) to be parsed if\n//  they are entered as \"15\" etc, but only if there is no punctuation in them.\n//  The second expression restricts the number of digits to three or more, but\n//  then allows them to be in international form, and to have alpha-characters\n//  and punctuation. We split up the two reg-exes here and combine them when\n//  creating the reg-ex VALID_PHONE_NUMBER_PATTERN itself so we can prefix it\n//  with ^ and append $ to each branch.\n//\n//  \"Note VALID_PUNCTUATION starts with a -,\n//   so must be the first in the range\" (c) Google devs.\n//  (wtf did they mean by saying that; probably nothing)\n//\nvar MIN_LENGTH_PHONE_NUMBER_PATTERN = '[' + _common__WEBPACK_IMPORTED_MODULE_0__.VALID_DIGITS + ']{' + MIN_LENGTH_FOR_NSN + '}';\n//\n// And this is the second reg-exp:\n// (see MIN_LENGTH_PHONE_NUMBER_PATTERN for a full description of this reg-exp)\n//\nvar VALID_PHONE_NUMBER = '[' + _common__WEBPACK_IMPORTED_MODULE_0__.PLUS_CHARS + ']{0,1}' + '(?:' + '[' + _common__WEBPACK_IMPORTED_MODULE_0__.VALID_PUNCTUATION + ']*' + '[' + _common__WEBPACK_IMPORTED_MODULE_0__.VALID_DIGITS + ']' + '){3,}' + '[' + _common__WEBPACK_IMPORTED_MODULE_0__.VALID_PUNCTUATION + _common__WEBPACK_IMPORTED_MODULE_0__.VALID_DIGITS + ']*';\n\n// The combined regular expression for valid phone numbers:\n//\nvar VALID_PHONE_NUMBER_PATTERN = new RegExp(\n// Either a short two-digit-only phone number\n'^' + MIN_LENGTH_PHONE_NUMBER_PATTERN + '$' + '|' +\n// Or a longer fully parsed phone number (min 3 characters)\n'^' + VALID_PHONE_NUMBER +\n// Phone number extensions\n'(?:' + EXTN_PATTERNS_FOR_PARSING + ')?' + '$', 'i');\n\n// This consists of the plus symbol, digits, and arabic-indic digits.\nvar PHONE_NUMBER_START_PATTERN = new RegExp('[' + _common__WEBPACK_IMPORTED_MODULE_0__.PLUS_CHARS + _common__WEBPACK_IMPORTED_MODULE_0__.VALID_DIGITS + ']');\n\n// Regular expression of trailing characters that we want to remove.\nvar AFTER_PHONE_NUMBER_END_PATTERN = new RegExp('[^' + _common__WEBPACK_IMPORTED_MODULE_0__.VALID_DIGITS + ']+$');\n\nvar default_options = {\n\tcountry: {}\n\n\t// `options`:\n\t//  {\n\t//    country:\n\t//    {\n\t//      restrict - (a two-letter country code)\n\t//                 the phone number must be in this country\n\t//\n\t//      default - (a two-letter country code)\n\t//                default country to use for phone number parsing and validation\n\t//                (if no country code could be derived from the phone number)\n\t//    }\n\t//  }\n\t//\n\t// Returns `{ country, number }`\n\t//\n\t// Example use cases:\n\t//\n\t// ```js\n\t// parse('8 (800) 555-35-35', 'RU')\n\t// parse('8 (800) 555-35-35', 'RU', metadata)\n\t// parse('8 (800) 555-35-35', { country: { default: 'RU' } })\n\t// parse('8 (800) 555-35-35', { country: { default: 'RU' } }, metadata)\n\t// parse('+7 800 555 35 35')\n\t// parse('+7 800 555 35 35', metadata)\n\t// ```\n\t//\n};function parse(arg_1, arg_2, arg_3, arg_4) {\n\tvar _sort_out_arguments = sort_out_arguments(arg_1, arg_2, arg_3, arg_4),\n\t    text = _sort_out_arguments.text,\n\t    options = _sort_out_arguments.options,\n\t    metadata = _sort_out_arguments.metadata;\n\n\t// Validate `defaultCountry`.\n\n\n\tif (options.defaultCountry && !metadata.hasCountry(options.defaultCountry)) {\n\t\tthrow new Error('Unknown country: ' + options.defaultCountry);\n\t}\n\n\t// Parse the phone number.\n\n\tvar _parse_input = parse_input(text),\n\t    formatted_phone_number = _parse_input.number,\n\t    ext = _parse_input.ext;\n\n\t// If the phone number is not viable then return nothing.\n\n\n\tif (!formatted_phone_number) {\n\t\treturn {};\n\t}\n\n\tvar _parse_phone_number = parse_phone_number(formatted_phone_number, options.defaultCountry, metadata),\n\t    country = _parse_phone_number.country,\n\t    national_number = _parse_phone_number.national_number,\n\t    countryCallingCode = _parse_phone_number.countryCallingCode,\n\t    carrierCode = _parse_phone_number.carrierCode;\n\n\tif (!metadata.selectedCountry()) {\n\t\treturn {};\n\t}\n\n\t// Validate national (significant) number length.\n\t//\n\t// A sidenote:\n\t//\n\t// They say that sometimes national (significant) numbers\n\t// can be longer than `MAX_LENGTH_FOR_NSN` (e.g. in Germany).\n\t// https://github.com/googlei18n/libphonenumber/blob/7e1748645552da39c4e1ba731e47969d97bdb539/resources/phonenumber.proto#L36\n\t// Such numbers will just be discarded.\n\t//\n\tif (national_number.length < MIN_LENGTH_FOR_NSN || national_number.length > _common__WEBPACK_IMPORTED_MODULE_0__.MAX_LENGTH_FOR_NSN) {\n\t\t// Google's demo just throws an error in this case.\n\t\treturn {};\n\t}\n\n\t// Check if national phone number pattern matches the number\n\t// National number pattern is different for each country,\n\t// even for those ones which are part of the \"NANPA\" group.\n\tvar valid = country && (0,_common__WEBPACK_IMPORTED_MODULE_0__.matches_entirely)(national_number, new RegExp(metadata.nationalNumberPattern())) ? true : false;\n\n\tif (!options.extended) {\n\t\treturn valid ? result(country, national_number, ext) : {};\n\t}\n\n\treturn {\n\t\tcountry: country,\n\t\tcountryCallingCode: countryCallingCode,\n\t\tcarrierCode: carrierCode,\n\t\tvalid: valid,\n\t\tpossible: valid ? true : options.extended === true && metadata.possibleLengths() && is_possible_number(national_number, countryCallingCode !== undefined, metadata),\n\t\tphone: national_number,\n\t\text: ext\n\t};\n}\n\n// Checks to see if the string of characters could possibly be a phone number at\n// all. At the moment, checks to see that the string begins with at least 2\n// digits, ignoring any punctuation commonly found in phone numbers. This method\n// does not require the number to be normalized in advance - but does assume\n// that leading non-number symbols have been removed, such as by the method\n// `extract_possible_number`.\n//\nfunction is_viable_phone_number(number) {\n\treturn number.length >= MIN_LENGTH_FOR_NSN && (0,_common__WEBPACK_IMPORTED_MODULE_0__.matches_entirely)(number, VALID_PHONE_NUMBER_PATTERN);\n}\n\n/**\r\n * Extracts a parseable phone number.\r\n * @param  {string} text - Input.\r\n * @return {string}.\r\n */\nfunction extract_formatted_phone_number(text) {\n\tif (!text || text.length > MAX_INPUT_STRING_LENGTH) {\n\t\treturn;\n\t}\n\n\t// Attempt to extract a possible number from the string passed in\n\n\tvar starts_at = text.search(PHONE_NUMBER_START_PATTERN);\n\n\tif (starts_at < 0) {\n\t\treturn;\n\t}\n\n\treturn text\n\t// Trim everything to the left of the phone number\n\t.slice(starts_at)\n\t// Remove trailing non-numerical characters\n\t.replace(AFTER_PHONE_NUMBER_END_PATTERN, '');\n}\n\n// Strips any national prefix (such as 0, 1) present in the number provided.\n// \"Carrier codes\" are only used  in Colombia and Brazil,\n// and only when dialing within those countries from a mobile phone to a fixed line number.\nfunction strip_national_prefix_and_carrier_code(number, metadata) {\n\tif (!number || !metadata.nationalPrefixForParsing()) {\n\t\treturn { number: number };\n\t}\n\n\t// Attempt to parse the first digits as a national prefix\n\tvar national_prefix_pattern = new RegExp('^(?:' + metadata.nationalPrefixForParsing() + ')');\n\tvar national_prefix_matcher = national_prefix_pattern.exec(number);\n\n\t// If no national prefix is present in the phone number,\n\t// but the national prefix is optional for this country,\n\t// then consider this phone number valid.\n\t//\n\t// Google's reference `libphonenumber` implementation\n\t// wouldn't recognize such phone numbers as valid,\n\t// but I think it would perfectly make sense\n\t// to consider such phone numbers as valid\n\t// because if a national phone number was originally\n\t// formatted without the national prefix\n\t// then it must be parseable back into the original national number.\n\t// In other words, `parse(format(number))`\n\t// must always be equal to `number`.\n\t//\n\tif (!national_prefix_matcher) {\n\t\treturn { number: number };\n\t}\n\n\tvar national_significant_number = void 0;\n\n\t// `national_prefix_for_parsing` capturing groups\n\t// (used only for really messy cases: Argentina, Brazil, Mexico, Somalia)\n\tvar captured_groups_count = national_prefix_matcher.length - 1;\n\n\t// If the national number tranformation is needed then do it.\n\t//\n\t// I don't know what did they mean by `&& national_prefix_matcher[captured_groups_count]`.\n\t// https://github.com/googlei18n/libphonenumber/blob/d978e59c2e6b1ddfb6816cd190e1b62d9a96bc3b/javascript/i18n/phonenumbers/phonenumberutil.js#L3885\n\t// https://github.com/googlei18n/libphonenumber/blob/d978e59c2e6b1ddfb6816cd190e1b62d9a96bc3b/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L2906\n\t//\n\tif (metadata.nationalPrefixTransformRule() && national_prefix_matcher[captured_groups_count]) {\n\t\tnational_significant_number = number.replace(national_prefix_pattern, metadata.nationalPrefixTransformRule());\n\t}\n\t// Else, no transformation is necessary,\n\t// and just strip the national prefix.\n\telse {\n\t\t\tnational_significant_number = number.slice(national_prefix_matcher[0].length);\n\t\t}\n\n\tvar carrierCode = void 0;\n\tif (captured_groups_count > 0) {\n\t\tcarrierCode = national_prefix_matcher[1];\n\t}\n\n\t// The following is done in `get_country_and_national_number_for_local_number()` instead.\n\t//\n\t// // Verify the parsed national (significant) number for this country\n\t// const national_number_rule = new RegExp(metadata.nationalNumberPattern())\n\t// //\n\t// // If the original number (before stripping national prefix) was viable,\n\t// // and the resultant number is not, then prefer the original phone number.\n\t// // This is because for some countries (e.g. Russia) the same digit could be both\n\t// // a national prefix and a leading digit of a valid national phone number,\n\t// // like `8` is the national prefix for Russia and both\n\t// // `8 800 555 35 35` and `800 555 35 35` are valid numbers.\n\t// if (matches_entirely(number, national_number_rule) &&\n\t// \t\t!matches_entirely(national_significant_number, national_number_rule))\n\t// {\n\t// \treturn number\n\t// }\n\n\t// Return the parsed national (significant) number\n\treturn {\n\t\tnumber: national_significant_number,\n\t\tcarrierCode: carrierCode\n\t};\n}\n\nfunction find_country_code(country_calling_code, national_phone_number, metadata) {\n\t// Is always non-empty, because `country_calling_code` is always valid\n\tvar possible_countries = metadata.countryCallingCodes()[country_calling_code];\n\n\t// If there's just one country corresponding to the country code,\n\t// then just return it, without further phone number digits validation.\n\tif (possible_countries.length === 1) {\n\t\treturn possible_countries[0];\n\t}\n\n\treturn _find_country_code(possible_countries, national_phone_number, metadata.metadata);\n}\n\n// Changes `metadata` `country`.\nfunction _find_country_code(possible_countries, national_phone_number, metadata) {\n\tmetadata = new _metadata__WEBPACK_IMPORTED_MODULE_1__[\"default\"](metadata);\n\n\tfor (var _iterator = possible_countries, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n\t\tvar _ref;\n\n\t\tif (_isArray) {\n\t\t\tif (_i >= _iterator.length) break;\n\t\t\t_ref = _iterator[_i++];\n\t\t} else {\n\t\t\t_i = _iterator.next();\n\t\t\tif (_i.done) break;\n\t\t\t_ref = _i.value;\n\t\t}\n\n\t\tvar country = _ref;\n\n\t\tmetadata.country(country);\n\n\t\t// Leading digits check would be the simplest one\n\t\tif (metadata.leadingDigits()) {\n\t\t\tif (national_phone_number && national_phone_number.search(metadata.leadingDigits()) === 0) {\n\t\t\t\treturn country;\n\t\t\t}\n\t\t}\n\t\t// Else perform full validation with all of those\n\t\t// fixed-line/mobile/etc regular expressions.\n\t\telse if ((0,_getNumberType__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({ phone: national_phone_number, country: country }, metadata.metadata)) {\n\t\t\t\treturn country;\n\t\t\t}\n\t}\n}\n\n// Sort out arguments\nfunction sort_out_arguments(arg_1, arg_2, arg_3, arg_4) {\n\tvar text = void 0;\n\tvar options = void 0;\n\tvar metadata = void 0;\n\n\t// If the phone number is passed as a string.\n\t// `parse('88005553535', ...)`.\n\tif (typeof arg_1 === 'string') {\n\t\ttext = arg_1;\n\t} else throw new TypeError('A phone number for parsing must be a string.');\n\n\t// If \"default country\" argument is being passed\n\t// then move it to `options`.\n\t// `parse('88005553535', 'RU', [options], metadata)`.\n\tif (typeof arg_2 === 'string') {\n\t\tif (arg_4) {\n\t\t\toptions = _extends({ defaultCountry: arg_2 }, arg_3);\n\t\t\tmetadata = arg_4;\n\t\t} else {\n\t\t\toptions = { defaultCountry: arg_2 };\n\t\t\tmetadata = arg_3;\n\t\t}\n\t}\n\t// No \"default country\" argument is being passed.\n\t// International phone number is passed.\n\t// `parse('+78005553535', [options], metadata)`.\n\telse {\n\t\t\tif (arg_3) {\n\t\t\t\toptions = arg_2;\n\t\t\t\tmetadata = arg_3;\n\t\t\t} else {\n\t\t\t\tmetadata = arg_2;\n\t\t\t}\n\t\t}\n\n\t// Apply default options.\n\tif (options) {\n\t\toptions = _extends({}, default_options, options);\n\t} else {\n\t\toptions = default_options;\n\t}\n\n\treturn { text: text, options: options, metadata: new _metadata__WEBPACK_IMPORTED_MODULE_1__[\"default\"](metadata) };\n}\n\n// Strips any extension (as in, the part of the number dialled after the call is\n// connected, usually indicated with extn, ext, x or similar) from the end of\n// the number, and returns it.\nfunction strip_extension(number) {\n\tvar start = number.search(EXTN_PATTERN);\n\tif (start < 0) {\n\t\treturn {};\n\t}\n\n\t// If we find a potential extension, and the number preceding this is a viable\n\t// number, we assume it is an extension.\n\tvar number_without_extension = number.slice(0, start);\n\t/* istanbul ignore if - seems a bit of a redundant check */\n\tif (!is_viable_phone_number(number_without_extension)) {\n\t\treturn {};\n\t}\n\n\tvar matches = number.match(EXTN_PATTERN);\n\tvar i = 1;\n\twhile (i < matches.length) {\n\t\tif (matches[i] != null && matches[i].length > 0) {\n\t\t\treturn {\n\t\t\t\tnumber: number_without_extension,\n\t\t\t\text: matches[i]\n\t\t\t};\n\t\t}\n\t\ti++;\n\t}\n}\n\nfunction is_possible_number(national_number, is_international, metadata) {\n\tswitch ((0,_getNumberType__WEBPACK_IMPORTED_MODULE_2__.check_number_length_for_type)(national_number, undefined, metadata)) {\n\t\tcase 'IS_POSSIBLE':\n\t\t\treturn true;\n\t\t// case 'IS_POSSIBLE_LOCAL_ONLY':\n\t\t// \treturn !is_international\n\t\tdefault:\n\t\t\treturn false;\n\t}\n}\n\n/**\r\n * @param  {string} text - Input.\r\n * @return {object} `{ ?number, ?ext }`.\r\n */\nfunction parse_input(text) {\n\t// Parse RFC 3966 phone number URI.\n\tif (text && text.indexOf('tel:') === 0) {\n\t\treturn (0,_RFC3966__WEBPACK_IMPORTED_MODULE_3__.parseRFC3966)(text);\n\t}\n\n\tvar number = extract_formatted_phone_number(text);\n\n\t// If the phone number is not viable, then abort.\n\tif (!number || !is_viable_phone_number(number)) {\n\t\treturn {};\n\t}\n\n\t// Attempt to parse extension first, since it doesn't require region-specific\n\t// data and we want to have the non-normalised number here.\n\tvar with_extension_stripped = strip_extension(number);\n\tif (with_extension_stripped.ext) {\n\t\treturn with_extension_stripped;\n\t}\n\n\treturn { number: number };\n}\n\n/**\r\n * Creates `parse()` result object.\r\n */\nfunction result(country, national_number, ext) {\n\tvar result = {\n\t\tcountry: country,\n\t\tphone: national_number\n\t};\n\n\tif (ext) {\n\t\tresult.ext = ext;\n\t}\n\n\treturn result;\n}\n\n/**\r\n * Parses a viable phone number.\r\n * Returns `{ country, countryCallingCode, national_number }`.\r\n */\nfunction parse_phone_number(formatted_phone_number, default_country, metadata) {\n\tvar _extractCountryCallin = (0,_common__WEBPACK_IMPORTED_MODULE_0__.extractCountryCallingCode)(formatted_phone_number, default_country, metadata),\n\t    countryCallingCode = _extractCountryCallin.countryCallingCode,\n\t    number = _extractCountryCallin.number;\n\n\tif (!number) {\n\t\treturn { countryCallingCode: countryCallingCode };\n\t}\n\n\tvar country = void 0;\n\n\tif (countryCallingCode) {\n\t\tmetadata.chooseCountryByCountryCallingCode(countryCallingCode);\n\t} else if (default_country) {\n\t\tmetadata.country(default_country);\n\t\tcountry = default_country;\n\t\tcountryCallingCode = (0,_getCountryCallingCode__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(default_country, metadata.metadata);\n\t} else return {};\n\n\tvar _parse_national_numbe = parse_national_number(number, metadata),\n\t    national_number = _parse_national_numbe.national_number,\n\t    carrier_code = _parse_national_numbe.carrier_code;\n\n\t// Sometimes there are several countries\n\t// corresponding to the same country phone code\n\t// (e.g. NANPA countries all having `1` country phone code).\n\t// Therefore, to reliably determine the exact country,\n\t// national (significant) number should have been parsed first.\n\t//\n\t// When `metadata.json` is generated, all \"ambiguous\" country phone codes\n\t// get their countries populated with the full set of\n\t// \"phone number type\" regular expressions.\n\t//\n\n\n\tvar exactCountry = find_country_code(countryCallingCode, national_number, metadata);\n\tif (exactCountry) {\n\t\tcountry = exactCountry;\n\t\tmetadata.country(country);\n\t}\n\n\treturn {\n\t\tcountry: country,\n\t\tcountryCallingCode: countryCallingCode,\n\t\tnational_number: national_number,\n\t\tcarrierCode: carrier_code\n\t};\n}\n\nfunction parse_national_number(number, metadata) {\n\tvar national_number = (0,_parseIncompletePhoneNumber__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(number);\n\tvar carrier_code = void 0;\n\n\t// Only strip national prefixes for non-international phone numbers\n\t// because national prefixes can't be present in international phone numbers.\n\t// Otherwise, while forgiving, it would parse a NANPA number `+1 1877 215 5230`\n\t// first to `1877 215 5230` and then, stripping the leading `1`, to `877 215 5230`,\n\t// and then it would assume that's a valid number which it isn't.\n\t// So no forgiveness for grandmas here.\n\t// The issue asking for this fix:\n\t// https://github.com/catamphetamine/libphonenumber-js/issues/159\n\n\tvar _strip_national_prefi = strip_national_prefix_and_carrier_code(national_number, metadata),\n\t    potential_national_number = _strip_national_prefi.number,\n\t    carrierCode = _strip_national_prefi.carrierCode;\n\n\t// If metadata has \"possible lengths\" then employ the new algorythm.\n\n\n\tif (metadata.possibleLengths()) {\n\t\t// We require that the NSN remaining after stripping the national prefix and\n\t\t// carrier code be long enough to be a possible length for the region.\n\t\t// Otherwise, we don't do the stripping, since the original number could be\n\t\t// a valid short number.\n\t\tswitch ((0,_getNumberType__WEBPACK_IMPORTED_MODULE_2__.check_number_length_for_type)(potential_national_number, undefined, metadata)) {\n\t\t\tcase 'TOO_SHORT':\n\t\t\t// case 'IS_POSSIBLE_LOCAL_ONLY':\n\t\t\tcase 'INVALID_LENGTH':\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tnational_number = potential_national_number;\n\t\t\t\tcarrier_code = carrierCode;\n\t\t}\n\t} else {\n\t\t// If the original number (before stripping national prefix) was viable,\n\t\t// and the resultant number is not, then prefer the original phone number.\n\t\t// This is because for some countries (e.g. Russia) the same digit could be both\n\t\t// a national prefix and a leading digit of a valid national phone number,\n\t\t// like `8` is the national prefix for Russia and both\n\t\t// `8 800 555 35 35` and `800 555 35 35` are valid numbers.\n\t\tif ((0,_common__WEBPACK_IMPORTED_MODULE_0__.matches_entirely)(national_number, metadata.nationalNumberPattern()) && !(0,_common__WEBPACK_IMPORTED_MODULE_0__.matches_entirely)(potential_national_number, metadata.nationalNumberPattern())) {\n\t\t\t// Keep the number without stripping national prefix.\n\t\t} else {\n\t\t\tnational_number = potential_national_number;\n\t\t\tcarrier_code = carrierCode;\n\t\t}\n\t}\n\n\treturn {\n\t\tnational_number: national_number,\n\t\tcarrier_code: carrier_code\n\t};\n}\n\n// Determines the country for a given (possibly incomplete) phone number.\n// export function get_country_from_phone_number(number, metadata)\n// {\n// \treturn parse_phone_number(number, null, metadata).country\n// }\n//# sourceMappingURL=parse.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/parse.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/parseIncompletePhoneNumber.js":
/*!*********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/parseIncompletePhoneNumber.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ parseIncompletePhoneNumber),\n/* harmony export */   parsePhoneNumberCharacter: () => (/* binding */ parsePhoneNumberCharacter)\n/* harmony export */ });\n/* harmony import */ var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/common.js\");\n\n\n/**\r\n * Parses phone number characters from a string.\r\n * Drops all punctuation leaving only digits and the leading `+` sign (if any).\r\n * Also converts wide-ascii and arabic-indic numerals to conventional numerals.\r\n * E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.\r\n * @param  {string} string\r\n * @return {string}\r\n * @example\r\n * ```js\r\n * parseIncompletePhoneNumber('8 (800) 555')\r\n * // Outputs '8800555'.\r\n * parseIncompletePhoneNumber('+7 800 555')\r\n * // Outputs '+7800555'.\r\n * ```\r\n */\nfunction parseIncompletePhoneNumber(string) {\n\tvar result = '';\n\n\t// Using `.split('')` here instead of normal `for ... of`\n\t// because the importing application doesn't neccessarily include an ES6 polyfill.\n\t// The `.split('')` approach discards \"exotic\" UTF-8 characters\n\t// (the ones consisting of four bytes) but digits\n\t// (including non-European ones) don't fall into that range\n\t// so such \"exotic\" characters would be discarded anyway.\n\tfor (var _iterator = string.split(''), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n\t\tvar _ref;\n\n\t\tif (_isArray) {\n\t\t\tif (_i >= _iterator.length) break;\n\t\t\t_ref = _iterator[_i++];\n\t\t} else {\n\t\t\t_i = _iterator.next();\n\t\t\tif (_i.done) break;\n\t\t\t_ref = _i.value;\n\t\t}\n\n\t\tvar character = _ref;\n\n\t\tresult += parsePhoneNumberCharacter(character, result) || '';\n\t}\n\n\treturn result;\n}\n\n/**\r\n * `input-format` `parse()` function.\r\n * https://github.com/catamphetamine/input-format\r\n * @param  {string} character - Yet another character from raw input string.\r\n * @param  {string} value - The value parsed so far.\r\n * @param  {object} meta - Optional custom use-case-specific metadata.\r\n * @return {string?} The parsed character.\r\n */\nfunction parsePhoneNumberCharacter(character, value) {\n\t// Only allow a leading `+`.\n\tif (character === '+') {\n\t\t// If this `+` is not the first parsed character\n\t\t// then discard it.\n\t\tif (value) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn '+';\n\t}\n\n\t// Allow digits.\n\treturn (0,_common__WEBPACK_IMPORTED_MODULE_0__.parseDigit)(character);\n}\n//# sourceMappingURL=parseIncompletePhoneNumber.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vbGlicGhvbmVudW1iZXItanNAMS4zLjAvbm9kZV9tb2R1bGVzL2xpYnBob25lbnVtYmVyLWpzL2VzNi9wYXJzZUluY29tcGxldGVQaG9uZU51bWJlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBc0M7O0FBRXRDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLFFBQVE7QUFDcEIsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDZTtBQUNmOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNKQUFzSjtBQUN0Sjs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFlBQVksUUFBUTtBQUNwQixZQUFZLFFBQVE7QUFDcEIsWUFBWSxRQUFRO0FBQ3BCLFlBQVksU0FBUztBQUNyQjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLFFBQVEsbURBQVU7QUFDbEI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B3YWduZXJhbmRjby9mcm9udGVuZC8uL25vZGVfbW9kdWxlcy8ucG5wbS9saWJwaG9uZW51bWJlci1qc0AxLjMuMC9ub2RlX21vZHVsZXMvbGlicGhvbmVudW1iZXItanMvZXM2L3BhcnNlSW5jb21wbGV0ZVBob25lTnVtYmVyLmpzPzcwNWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGFyc2VEaWdpdCB9IGZyb20gJy4vY29tbW9uJztcblxuLyoqXHJcbiAqIFBhcnNlcyBwaG9uZSBudW1iZXIgY2hhcmFjdGVycyBmcm9tIGEgc3RyaW5nLlxyXG4gKiBEcm9wcyBhbGwgcHVuY3R1YXRpb24gbGVhdmluZyBvbmx5IGRpZ2l0cyBhbmQgdGhlIGxlYWRpbmcgYCtgIHNpZ24gKGlmIGFueSkuXHJcbiAqIEFsc28gY29udmVydHMgd2lkZS1hc2NpaSBhbmQgYXJhYmljLWluZGljIG51bWVyYWxzIHRvIGNvbnZlbnRpb25hbCBudW1lcmFscy5cclxuICogRS5nLiBpbiBJcmFxIHRoZXkgZG9uJ3Qgd3JpdGUgYCs0NDIzMjMyMzRgIGJ1dCByYXRoZXIgYCvZpNmk2aLZo9mi2aPZotmj2aRgLlxyXG4gKiBAcGFyYW0gIHtzdHJpbmd9IHN0cmluZ1xyXG4gKiBAcmV0dXJuIHtzdHJpbmd9XHJcbiAqIEBleGFtcGxlXHJcbiAqIGBgYGpzXHJcbiAqIHBhcnNlSW5jb21wbGV0ZVBob25lTnVtYmVyKCc4ICg4MDApIDU1NScpXHJcbiAqIC8vIE91dHB1dHMgJzg4MDA1NTUnLlxyXG4gKiBwYXJzZUluY29tcGxldGVQaG9uZU51bWJlcignKzcgODAwIDU1NScpXHJcbiAqIC8vIE91dHB1dHMgJys3ODAwNTU1Jy5cclxuICogYGBgXHJcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcGFyc2VJbmNvbXBsZXRlUGhvbmVOdW1iZXIoc3RyaW5nKSB7XG5cdHZhciByZXN1bHQgPSAnJztcblxuXHQvLyBVc2luZyBgLnNwbGl0KCcnKWAgaGVyZSBpbnN0ZWFkIG9mIG5vcm1hbCBgZm9yIC4uLiBvZmBcblx0Ly8gYmVjYXVzZSB0aGUgaW1wb3J0aW5nIGFwcGxpY2F0aW9uIGRvZXNuJ3QgbmVjY2Vzc2FyaWx5IGluY2x1ZGUgYW4gRVM2IHBvbHlmaWxsLlxuXHQvLyBUaGUgYC5zcGxpdCgnJylgIGFwcHJvYWNoIGRpc2NhcmRzIFwiZXhvdGljXCIgVVRGLTggY2hhcmFjdGVyc1xuXHQvLyAodGhlIG9uZXMgY29uc2lzdGluZyBvZiBmb3VyIGJ5dGVzKSBidXQgZGlnaXRzXG5cdC8vIChpbmNsdWRpbmcgbm9uLUV1cm9wZWFuIG9uZXMpIGRvbid0IGZhbGwgaW50byB0aGF0IHJhbmdlXG5cdC8vIHNvIHN1Y2ggXCJleG90aWNcIiBjaGFyYWN0ZXJzIHdvdWxkIGJlIGRpc2NhcmRlZCBhbnl3YXkuXG5cdGZvciAodmFyIF9pdGVyYXRvciA9IHN0cmluZy5zcGxpdCgnJyksIF9pc0FycmF5ID0gQXJyYXkuaXNBcnJheShfaXRlcmF0b3IpLCBfaSA9IDAsIF9pdGVyYXRvciA9IF9pc0FycmF5ID8gX2l0ZXJhdG9yIDogX2l0ZXJhdG9yW1N5bWJvbC5pdGVyYXRvcl0oKTs7KSB7XG5cdFx0dmFyIF9yZWY7XG5cblx0XHRpZiAoX2lzQXJyYXkpIHtcblx0XHRcdGlmIChfaSA+PSBfaXRlcmF0b3IubGVuZ3RoKSBicmVhaztcblx0XHRcdF9yZWYgPSBfaXRlcmF0b3JbX2krK107XG5cdFx0fSBlbHNlIHtcblx0XHRcdF9pID0gX2l0ZXJhdG9yLm5leHQoKTtcblx0XHRcdGlmIChfaS5kb25lKSBicmVhaztcblx0XHRcdF9yZWYgPSBfaS52YWx1ZTtcblx0XHR9XG5cblx0XHR2YXIgY2hhcmFjdGVyID0gX3JlZjtcblxuXHRcdHJlc3VsdCArPSBwYXJzZVBob25lTnVtYmVyQ2hhcmFjdGVyKGNoYXJhY3RlciwgcmVzdWx0KSB8fCAnJztcblx0fVxuXG5cdHJldHVybiByZXN1bHQ7XG59XG5cbi8qKlxyXG4gKiBgaW5wdXQtZm9ybWF0YCBgcGFyc2UoKWAgZnVuY3Rpb24uXHJcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9jYXRhbXBoZXRhbWluZS9pbnB1dC1mb3JtYXRcclxuICogQHBhcmFtICB7c3RyaW5nfSBjaGFyYWN0ZXIgLSBZZXQgYW5vdGhlciBjaGFyYWN0ZXIgZnJvbSByYXcgaW5wdXQgc3RyaW5nLlxyXG4gKiBAcGFyYW0gIHtzdHJpbmd9IHZhbHVlIC0gVGhlIHZhbHVlIHBhcnNlZCBzbyBmYXIuXHJcbiAqIEBwYXJhbSAge29iamVjdH0gbWV0YSAtIE9wdGlvbmFsIGN1c3RvbSB1c2UtY2FzZS1zcGVjaWZpYyBtZXRhZGF0YS5cclxuICogQHJldHVybiB7c3RyaW5nP30gVGhlIHBhcnNlZCBjaGFyYWN0ZXIuXHJcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlUGhvbmVOdW1iZXJDaGFyYWN0ZXIoY2hhcmFjdGVyLCB2YWx1ZSkge1xuXHQvLyBPbmx5IGFsbG93IGEgbGVhZGluZyBgK2AuXG5cdGlmIChjaGFyYWN0ZXIgPT09ICcrJykge1xuXHRcdC8vIElmIHRoaXMgYCtgIGlzIG5vdCB0aGUgZmlyc3QgcGFyc2VkIGNoYXJhY3RlclxuXHRcdC8vIHRoZW4gZGlzY2FyZCBpdC5cblx0XHRpZiAodmFsdWUpIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRyZXR1cm4gJysnO1xuXHR9XG5cblx0Ly8gQWxsb3cgZGlnaXRzLlxuXHRyZXR1cm4gcGFyc2VEaWdpdChjaGFyYWN0ZXIpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFyc2VJbmNvbXBsZXRlUGhvbmVOdW1iZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/parseIncompletePhoneNumber.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/validate.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/validate.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isValidNumber)\n/* harmony export */ });\n/* harmony import */ var _getNumberType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getNumberType */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/getNumberType.js\");\n\n\n\n/**\r\n * Checks if a given phone number is valid.\r\n *\r\n * If the `number` is a string, it will be parsed to an object,\r\n * but only if it contains only valid phone number characters (including punctuation).\r\n * If the `number` is an object, it is used as is.\r\n *\r\n * The optional `defaultCountry` argument is the default country.\r\n * I.e. it does not restrict to just that country,\r\n * e.g. in those cases where several countries share\r\n * the same phone numbering rules (NANPA, Britain, etc).\r\n * For example, even though the number `07624 369230`\r\n * belongs to the Isle of Man (\"IM\" country code)\r\n * calling `isValidNumber('07624369230', 'GB', metadata)`\r\n * still returns `true` because the country is not restricted to `GB`,\r\n * it's just that `GB` is the default one for the phone numbering rules.\r\n * For restricting the country see `isValidNumberForRegion()`\r\n * though restricting a country might not be a good idea.\r\n * https://github.com/googlei18n/libphonenumber/blob/master/FAQ.md#when-should-i-use-isvalidnumberforregion\r\n *\r\n * Examples:\r\n *\r\n * ```js\r\n * isValidNumber('+78005553535', metadata)\r\n * isValidNumber('8005553535', 'RU', metadata)\r\n * isValidNumber('88005553535', 'RU', metadata)\r\n * isValidNumber({ phone: '8005553535', country: 'RU' }, metadata)\r\n * ```\r\n */\nfunction isValidNumber(arg_1, arg_2, arg_3) {\n  var _sort_out_arguments = (0,_getNumberType__WEBPACK_IMPORTED_MODULE_0__.sort_out_arguments)(arg_1, arg_2, arg_3),\n      input = _sort_out_arguments.input,\n      metadata = _sort_out_arguments.metadata;\n\n  if (!input) {\n    return false;\n  }\n\n  if (!input.country) {\n    return false;\n  }\n\n  if (!metadata.hasCountry(input.country)) {\n    throw new Error('Unknown country: ' + input.country);\n  }\n\n  metadata.country(input.country);\n\n  if (metadata.hasTypes()) {\n    return (0,_getNumberType__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(input, metadata.metadata) !== undefined;\n  }\n\n  return true;\n}\n//# sourceMappingURL=validate.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vbGlicGhvbmVudW1iZXItanNAMS4zLjAvbm9kZV9tb2R1bGVzL2xpYnBob25lbnVtYmVyLWpzL2VzNi92YWxpZGF0ZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF3RDtBQUNjOztBQUV0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLG9DQUFvQztBQUN2RDtBQUNBO0FBQ2U7QUFDZiw0QkFBNEIsa0VBQWtCO0FBQzlDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxXQUFXLDBEQUFlO0FBQzFCOztBQUVBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0B3YWduZXJhbmRjby9mcm9udGVuZC8uL25vZGVfbW9kdWxlcy8ucG5wbS9saWJwaG9uZW51bWJlci1qc0AxLjMuMC9ub2RlX21vZHVsZXMvbGlicGhvbmVudW1iZXItanMvZXM2L3ZhbGlkYXRlLmpzP2MwM2UiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHBhcnNlLCB7IGlzX3ZpYWJsZV9waG9uZV9udW1iZXIgfSBmcm9tICcuL3BhcnNlJztcbmltcG9ydCBnZXRfbnVtYmVyX3R5cGUsIHsgc29ydF9vdXRfYXJndW1lbnRzIH0gZnJvbSAnLi9nZXROdW1iZXJUeXBlJztcblxuLyoqXHJcbiAqIENoZWNrcyBpZiBhIGdpdmVuIHBob25lIG51bWJlciBpcyB2YWxpZC5cclxuICpcclxuICogSWYgdGhlIGBudW1iZXJgIGlzIGEgc3RyaW5nLCBpdCB3aWxsIGJlIHBhcnNlZCB0byBhbiBvYmplY3QsXHJcbiAqIGJ1dCBvbmx5IGlmIGl0IGNvbnRhaW5zIG9ubHkgdmFsaWQgcGhvbmUgbnVtYmVyIGNoYXJhY3RlcnMgKGluY2x1ZGluZyBwdW5jdHVhdGlvbikuXHJcbiAqIElmIHRoZSBgbnVtYmVyYCBpcyBhbiBvYmplY3QsIGl0IGlzIHVzZWQgYXMgaXMuXHJcbiAqXHJcbiAqIFRoZSBvcHRpb25hbCBgZGVmYXVsdENvdW50cnlgIGFyZ3VtZW50IGlzIHRoZSBkZWZhdWx0IGNvdW50cnkuXHJcbiAqIEkuZS4gaXQgZG9lcyBub3QgcmVzdHJpY3QgdG8ganVzdCB0aGF0IGNvdW50cnksXHJcbiAqIGUuZy4gaW4gdGhvc2UgY2FzZXMgd2hlcmUgc2V2ZXJhbCBjb3VudHJpZXMgc2hhcmVcclxuICogdGhlIHNhbWUgcGhvbmUgbnVtYmVyaW5nIHJ1bGVzIChOQU5QQSwgQnJpdGFpbiwgZXRjKS5cclxuICogRm9yIGV4YW1wbGUsIGV2ZW4gdGhvdWdoIHRoZSBudW1iZXIgYDA3NjI0IDM2OTIzMGBcclxuICogYmVsb25ncyB0byB0aGUgSXNsZSBvZiBNYW4gKFwiSU1cIiBjb3VudHJ5IGNvZGUpXHJcbiAqIGNhbGxpbmcgYGlzVmFsaWROdW1iZXIoJzA3NjI0MzY5MjMwJywgJ0dCJywgbWV0YWRhdGEpYFxyXG4gKiBzdGlsbCByZXR1cm5zIGB0cnVlYCBiZWNhdXNlIHRoZSBjb3VudHJ5IGlzIG5vdCByZXN0cmljdGVkIHRvIGBHQmAsXHJcbiAqIGl0J3MganVzdCB0aGF0IGBHQmAgaXMgdGhlIGRlZmF1bHQgb25lIGZvciB0aGUgcGhvbmUgbnVtYmVyaW5nIHJ1bGVzLlxyXG4gKiBGb3IgcmVzdHJpY3RpbmcgdGhlIGNvdW50cnkgc2VlIGBpc1ZhbGlkTnVtYmVyRm9yUmVnaW9uKClgXHJcbiAqIHRob3VnaCByZXN0cmljdGluZyBhIGNvdW50cnkgbWlnaHQgbm90IGJlIGEgZ29vZCBpZGVhLlxyXG4gKiBodHRwczovL2dpdGh1Yi5jb20vZ29vZ2xlaTE4bi9saWJwaG9uZW51bWJlci9ibG9iL21hc3Rlci9GQVEubWQjd2hlbi1zaG91bGQtaS11c2UtaXN2YWxpZG51bWJlcmZvcnJlZ2lvblxyXG4gKlxyXG4gKiBFeGFtcGxlczpcclxuICpcclxuICogYGBganNcclxuICogaXNWYWxpZE51bWJlcignKzc4MDA1NTUzNTM1JywgbWV0YWRhdGEpXHJcbiAqIGlzVmFsaWROdW1iZXIoJzgwMDU1NTM1MzUnLCAnUlUnLCBtZXRhZGF0YSlcclxuICogaXNWYWxpZE51bWJlcignODgwMDU1NTM1MzUnLCAnUlUnLCBtZXRhZGF0YSlcclxuICogaXNWYWxpZE51bWJlcih7IHBob25lOiAnODAwNTU1MzUzNScsIGNvdW50cnk6ICdSVScgfSwgbWV0YWRhdGEpXHJcbiAqIGBgYFxyXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGlzVmFsaWROdW1iZXIoYXJnXzEsIGFyZ18yLCBhcmdfMykge1xuICB2YXIgX3NvcnRfb3V0X2FyZ3VtZW50cyA9IHNvcnRfb3V0X2FyZ3VtZW50cyhhcmdfMSwgYXJnXzIsIGFyZ18zKSxcbiAgICAgIGlucHV0ID0gX3NvcnRfb3V0X2FyZ3VtZW50cy5pbnB1dCxcbiAgICAgIG1ldGFkYXRhID0gX3NvcnRfb3V0X2FyZ3VtZW50cy5tZXRhZGF0YTtcblxuICBpZiAoIWlucHV0KSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgaWYgKCFpbnB1dC5jb3VudHJ5KSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgaWYgKCFtZXRhZGF0YS5oYXNDb3VudHJ5KGlucHV0LmNvdW50cnkpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdVbmtub3duIGNvdW50cnk6ICcgKyBpbnB1dC5jb3VudHJ5KTtcbiAgfVxuXG4gIG1ldGFkYXRhLmNvdW50cnkoaW5wdXQuY291bnRyeSk7XG5cbiAgaWYgKG1ldGFkYXRhLmhhc1R5cGVzKCkpIHtcbiAgICByZXR1cm4gZ2V0X251bWJlcl90eXBlKGlucHV0LCBtZXRhZGF0YS5tZXRhZGF0YSkgIT09IHVuZGVmaW5lZDtcbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmFsaWRhdGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/validate.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/index.es6.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/index.es6.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AsYouType: () => (/* binding */ AsYouType),\n/* harmony export */   AsYouTypeCustom: () => (/* reexport safe */ _es6_AsYouType__WEBPACK_IMPORTED_MODULE_8__[\"default\"]),\n/* harmony export */   DIGITS: () => (/* reexport safe */ _es6_common__WEBPACK_IMPORTED_MODULE_10__.DIGITS),\n/* harmony export */   DIGIT_PLACEHOLDER: () => (/* reexport safe */ _es6_AsYouType__WEBPACK_IMPORTED_MODULE_8__.DIGIT_PLACEHOLDER),\n/* harmony export */   Metadata: () => (/* reexport safe */ _es6_metadata__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   PhoneNumberSearch: () => (/* binding */ PhoneNumberSearch),\n/* harmony export */   PhoneNumberSearchCustom: () => (/* reexport safe */ _es6_findPhoneNumbers__WEBPACK_IMPORTED_MODULE_7__.PhoneNumberSearch),\n/* harmony export */   findPhoneNumbers: () => (/* binding */ findPhoneNumbers),\n/* harmony export */   findPhoneNumbersCustom: () => (/* reexport safe */ _es6_findPhoneNumbers__WEBPACK_IMPORTED_MODULE_7__[\"default\"]),\n/* harmony export */   format: () => (/* binding */ format),\n/* harmony export */   formatCustom: () => (/* reexport safe */ _es6_format__WEBPACK_IMPORTED_MODULE_3__[\"default\"]),\n/* harmony export */   formatNumber: () => (/* binding */ formatNumber),\n/* harmony export */   formatRFC3966: () => (/* binding */ formatRFC3966),\n/* harmony export */   getCountryCallingCode: () => (/* binding */ getCountryCallingCode),\n/* harmony export */   getCountryCallingCodeCustom: () => (/* reexport safe */ _es6_getCountryCallingCode__WEBPACK_IMPORTED_MODULE_11__[\"default\"]),\n/* harmony export */   getExtPrefix: () => (/* binding */ getExtPrefix),\n/* harmony export */   getNumberType: () => (/* binding */ getNumberType),\n/* harmony export */   getNumberTypeCustom: () => (/* reexport safe */ _es6_getNumberType__WEBPACK_IMPORTED_MODULE_4__[\"default\"]),\n/* harmony export */   getPhoneCode: () => (/* binding */ getPhoneCode),\n/* harmony export */   getPhoneCodeCustom: () => (/* binding */ getPhoneCodeCustom),\n/* harmony export */   isValidNumber: () => (/* binding */ isValidNumber),\n/* harmony export */   isValidNumberCustom: () => (/* reexport safe */ _es6_validate__WEBPACK_IMPORTED_MODULE_5__[\"default\"]),\n/* harmony export */   isValidNumberForRegion: () => (/* binding */ isValidNumberForRegion),\n/* harmony export */   parse: () => (/* binding */ parse),\n/* harmony export */   parseCustom: () => (/* reexport safe */ _es6_parse__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   parseNumber: () => (/* binding */ parseNumber),\n/* harmony export */   parseRFC3966: () => (/* binding */ parseRFC3966),\n/* harmony export */   searchPhoneNumbers: () => (/* binding */ searchPhoneNumbers),\n/* harmony export */   searchPhoneNumbersCustom: () => (/* reexport safe */ _es6_findPhoneNumbers__WEBPACK_IMPORTED_MODULE_7__.searchPhoneNumbers)\n/* harmony export */ });\n/* harmony import */ var _metadata_min_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./metadata.min.json */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/metadata.min.json\");\n/* harmony import */ var _es6_parse__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./es6/parse */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/parse.js\");\n/* harmony import */ var _es6_format__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./es6/format */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/format.js\");\n/* harmony import */ var _es6_getNumberType__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./es6/getNumberType */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/getNumberType.js\");\n/* harmony import */ var _es6_validate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./es6/validate */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/validate.js\");\n/* harmony import */ var _es6_isValidNumberForRegion__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./es6/isValidNumberForRegion */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/isValidNumberForRegion.js\");\n/* harmony import */ var _es6_findPhoneNumbers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./es6/findPhoneNumbers */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/findPhoneNumbers.js\");\n/* harmony import */ var _es6_AsYouType__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./es6/AsYouType */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/AsYouType.js\");\n/* harmony import */ var _es6_getCountryCallingCode__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./es6/getCountryCallingCode */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/getCountryCallingCode.js\");\n/* harmony import */ var _es6_metadata__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./es6/metadata */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/metadata.js\");\n/* harmony import */ var _es6_RFC3966__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./es6/RFC3966 */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/RFC3966.js\");\n/* harmony import */ var _es6_common__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./es6/common */ \"(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/es6/common.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n;\r\n\r\n\r\nfunction parseNumber()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(_metadata_min_json__WEBPACK_IMPORTED_MODULE_1__)\r\n\treturn _es6_parse__WEBPACK_IMPORTED_MODULE_2__[\"default\"].apply(this, parameters)\r\n}\r\n\r\n// Deprecated: remove `parse()` export in 2.0.0.\r\n// (renamed to `parseNumber()`)\r\nfunction parse()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(_metadata_min_json__WEBPACK_IMPORTED_MODULE_1__)\r\n\treturn _es6_parse__WEBPACK_IMPORTED_MODULE_2__[\"default\"].apply(this, parameters)\r\n}\r\n\r\nfunction formatNumber()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(_metadata_min_json__WEBPACK_IMPORTED_MODULE_1__)\r\n\treturn _es6_format__WEBPACK_IMPORTED_MODULE_3__[\"default\"].apply(this, parameters)\r\n}\r\n\r\n// Deprecated: remove `format()` export in 2.0.0.\r\n// (renamed to `formatNumber()`)\r\nfunction format()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(_metadata_min_json__WEBPACK_IMPORTED_MODULE_1__)\r\n\treturn _es6_format__WEBPACK_IMPORTED_MODULE_3__[\"default\"].apply(this, parameters)\r\n}\r\n\r\nfunction getNumberType()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(_metadata_min_json__WEBPACK_IMPORTED_MODULE_1__)\r\n\treturn _es6_getNumberType__WEBPACK_IMPORTED_MODULE_4__[\"default\"].apply(this, parameters)\r\n}\r\n\r\nfunction isValidNumber()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(_metadata_min_json__WEBPACK_IMPORTED_MODULE_1__)\r\n\treturn _es6_validate__WEBPACK_IMPORTED_MODULE_5__[\"default\"].apply(this, parameters)\r\n}\r\n\r\nfunction isValidNumberForRegion()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(_metadata_min_json__WEBPACK_IMPORTED_MODULE_1__)\r\n\treturn _es6_isValidNumberForRegion__WEBPACK_IMPORTED_MODULE_6__[\"default\"].apply(this, parameters)\r\n}\r\n\r\nfunction findPhoneNumbers()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(_metadata_min_json__WEBPACK_IMPORTED_MODULE_1__)\r\n\treturn _es6_findPhoneNumbers__WEBPACK_IMPORTED_MODULE_7__[\"default\"].apply(this, parameters)\r\n}\r\n\r\nfunction searchPhoneNumbers()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(_metadata_min_json__WEBPACK_IMPORTED_MODULE_1__)\r\n\treturn _es6_findPhoneNumbers__WEBPACK_IMPORTED_MODULE_7__.searchPhoneNumbers.apply(this, parameters)\r\n}\r\n\r\nfunction PhoneNumberSearch(text, options)\r\n{\r\n\t_es6_findPhoneNumbers__WEBPACK_IMPORTED_MODULE_7__.PhoneNumberSearch.call(this, text, options, _metadata_min_json__WEBPACK_IMPORTED_MODULE_1__)\r\n}\r\n\r\nPhoneNumberSearch.prototype = Object.create(_es6_findPhoneNumbers__WEBPACK_IMPORTED_MODULE_7__.PhoneNumberSearch.prototype, {})\r\nPhoneNumberSearch.prototype.constructor = PhoneNumberSearch\r\n\r\nfunction AsYouType(country)\r\n{\r\n\t_es6_AsYouType__WEBPACK_IMPORTED_MODULE_8__[\"default\"].call(this, country, _metadata_min_json__WEBPACK_IMPORTED_MODULE_1__)\r\n}\r\n\r\nAsYouType.prototype = Object.create(_es6_AsYouType__WEBPACK_IMPORTED_MODULE_8__[\"default\"].prototype, {})\r\nAsYouType.prototype.constructor = AsYouType\r\n\r\nfunction getExtPrefix()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(_metadata_min_json__WEBPACK_IMPORTED_MODULE_1__)\r\n\treturn _es6_metadata__WEBPACK_IMPORTED_MODULE_0__.getExtPrefix.apply(this, parameters)\r\n}\r\n\r\nfunction parseRFC3966()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(_metadata_min_json__WEBPACK_IMPORTED_MODULE_1__)\r\n\treturn _es6_RFC3966__WEBPACK_IMPORTED_MODULE_9__.parseRFC3966.apply(this, parameters)\r\n}\r\n\r\nfunction formatRFC3966()\r\n{\r\n\tvar parameters = Array.prototype.slice.call(arguments)\r\n\tparameters.push(_metadata_min_json__WEBPACK_IMPORTED_MODULE_1__)\r\n\treturn _es6_RFC3966__WEBPACK_IMPORTED_MODULE_9__.formatRFC3966.apply(this, parameters)\r\n}\r\n\r\n// Deprecated: remove DIGITS export in 2.0.0 (unused).\r\n\r\n\r\n// Deprecated: remove this in 2.0.0 and make `custom.js` in ES6\r\n// (the old `custom.js` becomes `custom.commonjs.js`).\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction getCountryCallingCode(country)\r\n{\r\n\treturn (0,_es6_getCountryCallingCode__WEBPACK_IMPORTED_MODULE_11__[\"default\"])(country, _metadata_min_json__WEBPACK_IMPORTED_MODULE_1__)\r\n}\r\n\r\n// `getPhoneCode` name is deprecated, use `getCountryCallingCode` instead.\r\nfunction getPhoneCode(country)\r\n{\r\n\treturn getCountryCallingCode(country)\r\n}\r\n\r\n// `getPhoneCodeCustom` name is deprecated, use `getCountryCallingCodeCustom` instead.\r\nfunction getPhoneCodeCustom(country, metadata)\r\n{\r\n\treturn (0,_es6_getCountryCallingCode__WEBPACK_IMPORTED_MODULE_11__[\"default\"])(country, metadata)\r\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/index.es6.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/metadata.min.json":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/libphonenumber-js@1.3.0/node_modules/libphonenumber-js/metadata.min.json ***!
  \*****************************************************************************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"version":"1.3.0","country_calling_codes":{"1":["US","AG","AI","AS","BB","BM","BS","CA","DM","DO","GD","GU","JM","KN","KY","LC","MP","MS","PR","SX","TC","TT","VC","VG","VI"],"7":["RU","KZ"],"20":["EG"],"27":["ZA"],"30":["GR"],"31":["NL"],"32":["BE"],"33":["FR"],"34":["ES"],"36":["HU"],"39":["IT","VA"],"40":["RO"],"41":["CH"],"43":["AT"],"44":["GB","GG","IM","JE"],"45":["DK"],"46":["SE"],"47":["NO","SJ"],"48":["PL"],"49":["DE"],"51":["PE"],"52":["MX"],"53":["CU"],"54":["AR"],"55":["BR"],"56":["CL"],"57":["CO"],"58":["VE"],"60":["MY"],"61":["AU","CC","CX"],"62":["ID"],"63":["PH"],"64":["NZ"],"65":["SG"],"66":["TH"],"81":["JP"],"82":["KR"],"84":["VN"],"86":["CN"],"90":["TR"],"91":["IN"],"92":["PK"],"93":["AF"],"94":["LK"],"95":["MM"],"98":["IR"],"211":["SS"],"212":["MA","EH"],"213":["DZ"],"216":["TN"],"218":["LY"],"220":["GM"],"221":["SN"],"222":["MR"],"223":["ML"],"224":["GN"],"225":["CI"],"226":["BF"],"227":["NE"],"228":["TG"],"229":["BJ"],"230":["MU"],"231":["LR"],"232":["SL"],"233":["GH"],"234":["NG"],"235":["TD"],"236":["CF"],"237":["CM"],"238":["CV"],"239":["ST"],"240":["GQ"],"241":["GA"],"242":["CG"],"243":["CD"],"244":["AO"],"245":["GW"],"246":["IO"],"247":["AC"],"248":["SC"],"249":["SD"],"250":["RW"],"251":["ET"],"252":["SO"],"253":["DJ"],"254":["KE"],"255":["TZ"],"256":["UG"],"257":["BI"],"258":["MZ"],"260":["ZM"],"261":["MG"],"262":["RE","YT"],"263":["ZW"],"264":["NA"],"265":["MW"],"266":["LS"],"267":["BW"],"268":["SZ"],"269":["KM"],"290":["SH","TA"],"291":["ER"],"297":["AW"],"298":["FO"],"299":["GL"],"350":["GI"],"351":["PT"],"352":["LU"],"353":["IE"],"354":["IS"],"355":["AL"],"356":["MT"],"357":["CY"],"358":["FI","AX"],"359":["BG"],"370":["LT"],"371":["LV"],"372":["EE"],"373":["MD"],"374":["AM"],"375":["BY"],"376":["AD"],"377":["MC"],"378":["SM"],"380":["UA"],"381":["RS"],"382":["ME"],"383":["XK"],"385":["HR"],"386":["SI"],"387":["BA"],"389":["MK"],"420":["CZ"],"421":["SK"],"423":["LI"],"500":["FK"],"501":["BZ"],"502":["GT"],"503":["SV"],"504":["HN"],"505":["NI"],"506":["CR"],"507":["PA"],"508":["PM"],"509":["HT"],"590":["GP","BL","MF"],"591":["BO"],"592":["GY"],"593":["EC"],"594":["GF"],"595":["PY"],"596":["MQ"],"597":["SR"],"598":["UY"],"599":["CW","BQ"],"670":["TL"],"672":["NF"],"673":["BN"],"674":["NR"],"675":["PG"],"676":["TO"],"677":["SB"],"678":["VU"],"679":["FJ"],"680":["PW"],"681":["WF"],"682":["CK"],"683":["NU"],"685":["WS"],"686":["KI"],"687":["NC"],"688":["TV"],"689":["PF"],"690":["TK"],"691":["FM"],"692":["MH"],"800":["001"],"808":["001"],"850":["KP"],"852":["HK"],"853":["MO"],"855":["KH"],"856":["LA"],"870":["001"],"878":["001"],"880":["BD"],"881":["001"],"882":["001"],"883":["001"],"886":["TW"],"888":["001"],"960":["MV"],"961":["LB"],"962":["JO"],"963":["SY"],"964":["IQ"],"965":["KW"],"966":["SA"],"967":["YE"],"968":["OM"],"970":["PS"],"971":["AE"],"972":["IL"],"973":["BH"],"974":["QA"],"975":["BT"],"976":["MN"],"977":["NP"],"979":["001"],"992":["TJ"],"993":["TM"],"994":["AZ"],"995":["GE"],"996":["KG"],"998":["UZ"]},"countries":{"AC":["247","00","[46]\\\\d{4}|[01589]\\\\d{5}",[5,6]],"AD":["376","00","[16]\\\\d{5,8}|[37-9]\\\\d{5}",[6,8,9],[["(\\\\d{3})(\\\\d{3})","$1 $2",["[136-9]"]],["(\\\\d{4})(\\\\d{4})","$1 $2",["180","180[02]"]],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["690"]]]],"AE":["971","00","[2-79]\\\\d{7,8}|800\\\\d{2,9}",[5,6,7,8,9,10,11,12],[["([2-4679])(\\\\d{3})(\\\\d{4})","$1 $2 $3",["[2-4679][2-8]"]],["(5\\\\d)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["5"]],["([479]00)(\\\\d)(\\\\d{5})","$1 $2 $3",["[479]00"],"$1"],["([68]00)(\\\\d{2,9})","$1 $2",["[68]00"],"$1"]],"0","0$1"],"AF":["93","00","[2-7]\\\\d{8}",[9],[["([2-7]\\\\d)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["[2-7]"]]],"0","0$1"],"AG":["1","011","[2589]\\\\d{9}",[10],[["(\\\\d{3})(\\\\d{3})(\\\\d{4})","($1) $2-$3",0,0,0,"$1-$2-$3"]],"1",0,0,0,0,"268"],"AI":["1","011","[2589]\\\\d{9}",[10],[["(\\\\d{3})(\\\\d{3})(\\\\d{4})","($1) $2-$3",0,0,0,"$1-$2-$3"]],"1",0,0,0,0,"264"],"AL":["355","00","[2-57]\\\\d{7}|6\\\\d{8}|8\\\\d{5,7}|9\\\\d{5}",[6,7,8,9],[["(4)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["4[0-6]"]],["(6\\\\d)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["6"]],["(\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[2358][2-5]|4[7-9]"]],["(\\\\d{3})(\\\\d{3,5})","$1 $2",["[235][16-9]|[79]|8[016-9]"]]],"0","0$1"],"AM":["374","00","[1-9]\\\\d{7}",[8],[["(\\\\d{2})(\\\\d{6})","$1 $2",["1|47"]],["(\\\\d{2})(\\\\d{6})","$1 $2",["4[1349]|[5-7]|88|9[1-9]"],"0$1"],["(\\\\d{3})(\\\\d{5})","$1 $2",["[23]"]],["(\\\\d{3})(\\\\d{2})(\\\\d{3})","$1 $2 $3",["8|90"],"0 $1"]],"0","(0$1)"],"AO":["244","00","[29]\\\\d{8}",[9],[["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3"]]],"AR":["54","00","11\\\\d{8}|[2368]\\\\d{9}|9\\\\d{10}",[10,11],[["([68]\\\\d{2})(\\\\d{3})(\\\\d{4})","$1-$2-$3",["[68]"]],["(9)(11)(\\\\d{4})(\\\\d{4})","$2 15-$3-$4",["911"],0,0,"$1 $2 $3-$4"],["(9)(\\\\d{3})(\\\\d{3})(\\\\d{4})","$2 15-$3-$4",["9(?:2[2-4689]|3[3-8])","9(?:2(?:2[013]|3[067]|49|6[01346]|8|9[147-9])|3(?:36|4[1-358]|5[138]|6|7[069]|8[013578]))","9(?:2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3[4-6]|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45])))","9(?:2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3(?:4|5[014]|6[1-39])|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45])))"],0,0,"$1 $2 $3-$4"],["(9)(\\\\d{4})(\\\\d{2})(\\\\d{4})","$2 15-$3-$4",["9[23]"],0,0,"$1 $2 $3-$4"],["(11)(\\\\d{4})(\\\\d{4})","$1 $2-$3",["11"],0,1],["(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1 $2-$3",["2(?:2[013]|3[067]|49|6[01346]|8|9[147-9])|3(?:36|4[1-358]|5[138]|6|7[069]|8[013578])","2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3[4-6]|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45]))","2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3(?:4|5[014]|6[1-39])|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45]))"],0,1],["(\\\\d{4})(\\\\d{2})(\\\\d{4})","$1 $2-$3",["[23]"],0,1]],"0","0$1","0?(?:(11|2(?:2(?:02?|[13]|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:02?|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[67])|4(?:7[3-578]|9)|6(?:[0136]|2[24-6]|4[6-8]?|5[15-8])|80|9(?:0[1-3]|[19]|2\\\\d|3[1-6]|4[02568]?|5[2-4]|6[2-46]|72?|8[23]?))|3(?:3(?:2[79]|6|8[2578])|4(?:0[0-24-9]|[12]|3[5-8]?|4[24-7]|5[4-68]?|6[02-9]|7[126]|8[2379]?|9[1-36-8])|5(?:1|2[1245]|3[237]?|4[1-46-9]|6[2-4]|7[1-6]|8[2-5]?)|6[24]|7(?:[069]|1[1568]|2[15]|3[145]|4[13]|5[14-8]|7[2-57]|8[126])|8(?:[01]|2[15-7]|3[2578]?|4[13-6]|5[4-8]?|6[1-357-9]|7[36-8]?|8[5-8]?|9[124])))?15)?","9$1"],"AS":["1","011","[5689]\\\\d{9}",[10],[["(\\\\d{3})(\\\\d{3})(\\\\d{4})","($1) $2-$3",0,0,0,"$1-$2-$3"]],"1",0,0,0,0,"684"],"AT":["43","00","[1-9]\\\\d{3,12}",[4,5,6,7,8,9,10,11,12,13],[["(116\\\\d{3})","$1",["116"],"$1"],["(1)(\\\\d{3,12})","$1 $2",["1"]],["(5\\\\d)(\\\\d{3,5})","$1 $2",["5[079]"]],["(5\\\\d)(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["5[079]"]],["(5\\\\d)(\\\\d{4})(\\\\d{4,7})","$1 $2 $3",["5[079]"]],["(\\\\d{3})(\\\\d{3,10})","$1 $2",["(?:31|4)6|51|6(?:5[0-3579]|[6-9])|7(?:[28]0|32)|[89]"]],["(\\\\d{3})(\\\\d{2})","$1 $2",["517"]],["(\\\\d{4})(\\\\d{3,9})","$1 $2",["2|3(?:1[1-578]|[3-8])|4[2378]|5[2-6]|6(?:[12]|4[1-9]|5[468])|7(?:[24][1-8]|35|[5-79])"]]],"0","0$1"],"AU":["61","(?:14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011)|001[14-689]","1\\\\d{4,9}|[2-578]\\\\d{8}",[5,6,7,8,9,10],[["([2378])(\\\\d{4})(\\\\d{4})","$1 $2 $3",["[2378]"],"(0$1)"],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["14|[45]"],"0$1"],["(16)(\\\\d{3,4})","$1 $2",["16"],"0$1"],["(16)(\\\\d{3})(\\\\d{2,4})","$1 $2 $3",["16"],"0$1"],["(1[389]\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["1[389]0","1(?:[38]0|9)0"]],["(180)(2\\\\d{3})","$1 $2",["180","1802"]],["(19\\\\d)(\\\\d{3})","$1 $2",["19[13]"]],["(19\\\\d{2})(\\\\d{4})","$1 $2",["19[679]"]],["(13)(\\\\d{2})(\\\\d{2})","$1 $2 $3",["13[1-9]"]]],"0",0,0,0,0,0,[["[237]\\\\d{8}|8(?:51(?:0(?:0[03-9]|[1247]\\\\d|3[2-9]|5[0-8]|6[1-9]|8[0-6])|1(?:1[69]|[23]\\\\d|4[0-4]))|[6-8]\\\\d{4}|9(?:[02-9]\\\\d{3}|1(?:[0-57-9]\\\\d{2}|6[0135-9]\\\\d)))\\\\d{3}",[9]],["14(?:5\\\\d|71)\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[6-9]|7[02-9]|8[12457-9]|9[017-9])\\\\d{6}",[9]],["180(?:0\\\\d{3}|2)\\\\d{3}",[7,10]],["19(?:0[0126]\\\\d|[679])\\\\d{5}",[8,10]],["500\\\\d{6}",[9]],0,0,["16\\\\d{3,7}",[5,6,7,8,9]],["550\\\\d{6}",[9]],["13(?:00\\\\d{3}|45[0-4]|\\\\d)\\\\d{3}",[6,8,10]]],"0011"],"AW":["297","00","[25-9]\\\\d{6}",[7],[["(\\\\d{3})(\\\\d{4})","$1 $2"]]],"AX":["358","00|99(?:[01469]|5(?:11|3[23]|41|5[59]|77|88|9[09]))","1\\\\d{5,11}|[35]\\\\d{5,9}|2\\\\d{4,9}|4\\\\d{5,10}|6\\\\d{7,9}|7\\\\d{4,9}|8\\\\d{6,9}",[5,6,7,8,9,10,11,12],[["(\\\\d{3})(\\\\d{3,7})","$1 $2",["(?:[1-3]0|[6-8])0"]],["(75\\\\d{3})","$1",["75[12]"]],["(116\\\\d{3})","$1",["116"],"$1"],["(\\\\d{2})(\\\\d{4,10})","$1 $2",["[14]|2[09]|50|7[135]"]],["(\\\\d)(\\\\d{4,11})","$1 $2",["[25689][1-8]|3"]]],"0",0,0,0,0,0,[["18[1-8]\\\\d{3,9}",[6,7,8,9,10,11,12]],["4\\\\d{5,10}|50\\\\d{4,8}",[6,7,8,9,10,11]],["800\\\\d{4,7}",[7,8,9,10]],["[67]00\\\\d{5,6}",[8,9]],0,0,["[13]0\\\\d{4,8}|2(?:0(?:[016-8]\\\\d{3,7}|[2-59]\\\\d{2,7})|9\\\\d{4,8})|60(?:[12]\\\\d{5,6}|6\\\\d{7})|7(?:1\\\\d{7}|3\\\\d{8}|5[03-9]\\\\d{2,7})",[5,6,7,8,9,10]]],"00"],"AZ":["994","00","[1-9]\\\\d{8}",[9],[["(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["1[28]|2(?:[0-36]|[45]2)|365"]],["(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[4-8]"],"0$1"],["(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["9"],"0$1"]],"0","(0$1)"],"BA":["387","00","[3-9]\\\\d{7,8}",[8,9],[["(\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2-$3",["[3-5]"]],["(\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["6[1-356]|[7-9]"]],["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})","$1 $2 $3 $4",["6[047]"]]],"0","0$1"],"BB":["1","011","[2589]\\\\d{9}",[10],[["(\\\\d{3})(\\\\d{3})(\\\\d{4})","($1) $2-$3",0,0,0,"$1-$2-$3"]],"1",0,0,0,0,"246"],"BD":["880","00","[2-79]\\\\d{5,9}|1\\\\d{9}|8[0-7]\\\\d{4,8}",[6,7,8,9,10],[["(2)(\\\\d{7,8})","$1-$2",["2"]],["(\\\\d{2})(\\\\d{4,6})","$1-$2",["[3-79]1"]],["(\\\\d{4})(\\\\d{3,6})","$1-$2",["1|3(?:0|[2-58]2)|4(?:0|[25]2|3[23]|[4689][25])|5(?:[02-578]2|6[25])|6(?:[0347-9]2|[26][25])|7[02-9]2|8(?:[023][23]|[4-7]2)|9(?:[02][23]|[458]2|6[01367])"]],["(\\\\d{3})(\\\\d{3,7})","$1-$2",["[3-79][2-9]|8"]]],"0","0$1"],"BE":["32","00","[1-9]\\\\d{7,8}",[8,9],[["(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["4[5-9]"]],["(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[23]|4[23]|9[2-4]"]],["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[156]|7[018]|8(?:0[1-9]|[1-79])"]],["(\\\\d{3})(\\\\d{2})(\\\\d{3})","$1 $2 $3",["(?:80|9)0"]]],"0","0$1"],"BF":["226","00","[25-7]\\\\d{7}",[8],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4"]]],"BG":["359","00","[23567]\\\\d{5,7}|[489]\\\\d{6,8}",[6,7,8,9],[["(2)(\\\\d)(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["2"]],["(2)(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["2"]],["(\\\\d{3})(\\\\d{4})","$1 $2",["43[124-7]|70[1-9]"]],["(\\\\d{3})(\\\\d{3})(\\\\d{2})","$1 $2 $3",["43[124-7]|70[1-9]"]],["(\\\\d{3})(\\\\d{2})(\\\\d{3})","$1 $2 $3",["[78]00"]],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["99[69]"]],["(\\\\d{2})(\\\\d{3})(\\\\d{2,3})","$1 $2 $3",["[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]"]],["(\\\\d{2})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["48|8[7-9]|9[08]"]]],"0","0$1"],"BH":["973","00","[136-9]\\\\d{7}",[8],[["(\\\\d{4})(\\\\d{4})","$1 $2"]]],"BI":["257","00","[2367]\\\\d{7}",[8],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4"]]],"BJ":["229","00","[2689]\\\\d{7}",[8],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[2689]"]]]],"BL":["590","00","[56]\\\\d{8}",[9],[["([56]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["590|69[01]"]]],"0",0,0,0,0,0,[["590(?:2[7-9]|5[12]|87)\\\\d{4}"],["69(?:0\\\\d{2}|1(?:2[29]|3[0-5]))\\\\d{4}"]]],"BM":["1","011","[4589]\\\\d{9}",[10],[["(\\\\d{3})(\\\\d{3})(\\\\d{4})","($1) $2-$3",0,0,0,"$1-$2-$3"]],"1",0,0,0,0,"441"],"BN":["673","00","[2-578]\\\\d{6}",[7],[["([2-578]\\\\d{2})(\\\\d{4})","$1 $2",["[2-578]"]]]],"BO":["591","00(1\\\\d)?","[23467]\\\\d{7}|8\\\\d{8}",[8,9],[["([234])(\\\\d{7})","$1 $2",["[2-4]"]],["([67]\\\\d{7})","$1",["[67]"]],["(800)(\\\\d{2})(\\\\d{4})","$1 $2 $3",["800"]]],"0",0,"0(1\\\\d)?"],"BQ":["599","00","[347]\\\\d{6}",[7],[["(\\\\d{3})(\\\\d{4})","$1 $2",["[13-7]"]],["(9)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["9"]]],0,0,0,0,0,0,[["(?:318[023]|41(?:6[023]|70)|7(?:1[578]|50)\\\\d)\\\\d{3}"],["(?:31(?:8[14-8]|9[14578])|416[145-9]|7(?:0[01]|7[07]|8\\\\d|9[056])\\\\d)\\\\d{3}"]]],"BR":["55","00(?:1[245]|2[1-35]|31|4[13]|[56]5|99)","[1-46-9]\\\\d{7,10}|5(?:[0-4]\\\\d{7,9}|5(?:[2-8]\\\\d{7}|9\\\\d{7,8}))",[8,9,10,11],[["(\\\\d{4})(\\\\d{4})","$1-$2",["300|4(?:0[02]|37)","300|4(?:0(?:0|20)|370)"]],["([3589]00)(\\\\d{2,3})(\\\\d{4})","$1 $2 $3",["[3589]00"],"0$1"],["(\\\\d{2})(\\\\d{4})(\\\\d{4})","$1 $2-$3",["[1-9][1-9]"],"($1)"],["(\\\\d{2})(\\\\d{5})(\\\\d{4})","$1 $2-$3",["[1-9][1-9]9"],"($1)"]],"0",0,"0(?:(1[245]|2[1-35]|31|4[13]|[56]5|99)(\\\\d{10,11}))?","$2"],"BS":["1","011?","[2589]\\\\d{9}",[10],[["(\\\\d{3})(\\\\d{3})(\\\\d{4})","($1) $2-$3",0,0,0,"$1-$2-$3"]],"1",0,0,0,0,"242",0,"011"],"BT":["975","00","[1-8]\\\\d{6,7}",[7,8],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["1|77"]],["([2-8])(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[2-68]|7[246]"]]]],"BW":["267","00","[2-79]\\\\d{6,7}",[7,8],[["(\\\\d{3})(\\\\d{4})","$1 $2",["[2-6]"]],["(7\\\\d)(\\\\d{3})(\\\\d{3})","$1 $2 $3",["7"]],["(90)(\\\\d{5})","$1 $2",["90"]]]],"BY":["375","810","[1-4]\\\\d{8}|8(?:0(?:0\\\\d{3,7}|[13]\\\\d{7})|(?:10|20\\\\d)\\\\d{7})|9\\\\d{9,10}",[6,7,8,9,10,11],[["(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1 $2-$3-$4",["17[0-3589]|2[4-9]|[34]","17(?:[02358]|1[0-2]|9[0189])|2[4-9]|[34]"],"8 0$1"],["(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2-$3-$4",["1(?:5[24]|6[235]|7[467])|2(?:1[246]|2[25]|3[26])","1(?:5[24]|6(?:2|3[04-9]|5[0346-9])|7(?:[46]|7[37-9]))|2(?:1[246]|2[25]|3[26])"],"8 0$1"],["(\\\\d{4})(\\\\d{2})(\\\\d{3})","$1 $2-$3",["1(?:5[169]|6[3-5]|7[179])|2(?:1[35]|2[34]|3[3-5])","1(?:5[169]|6(?:3[1-3]|4|5[125])|7(?:1[3-9]|7[0-24-6]|9[2-7]))|2(?:1[35]|2[34]|3[3-5])"],"8 0$1"],["([89]\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["8[01]|9"],"8 $1"],["(82\\\\d)(\\\\d{4})(\\\\d{4})","$1 $2 $3",["82"],"8 $1"],["(800)(\\\\d{3})","$1 $2",["800"],"8 $1"],["(800)(\\\\d{2})(\\\\d{2,4})","$1 $2 $3",["800"],"8 $1"]],"8",0,"8?0?",0,0,0,0,"8~10"],"BZ":["501","00","[2-8]\\\\d{6}|0\\\\d{10}",[7,11],[["(\\\\d{3})(\\\\d{4})","$1-$2",["[2-8]"]],["(0)(800)(\\\\d{4})(\\\\d{3})","$1-$2-$3-$4",["080","0800"]]]],"CA":["1","011","[2-9]\\\\d{9}",[10],[["(\\\\d{3})(\\\\d{3})(\\\\d{4})","($1) $2-$3",0,0,0,"$1-$2-$3"]],"1",0,0,0,0,0,[["(?:2(?:04|[23]6|[48]9|50)|3(?:06|43|65)|4(?:03|1[68]|3[178]|50)|5(?:06|1[49]|48|79|8[17])|6(?:04|13|39|47)|7(?:0[59]|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\\\d{6}"],[""],["8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}"],["900[2-9]\\\\d{6}"],["(?:5(?:00|2[12]|33|44|66|77|88)|622)[2-9]\\\\d{6}"],0,0,0,["600[2-9]\\\\d{6}"]]],"CC":["61","(?:14(?:1[14]|34|4[17]|[56]6|7[47]|88))?001[14-689]","[1458]\\\\d{5,9}",[6,7,8,9,10],[["([2378])(\\\\d{4})(\\\\d{4})","$1 $2 $3",["[2378]"],"(0$1)"],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["14|[45]"],"0$1"],["(16)(\\\\d{3,4})","$1 $2",["16"],"0$1"],["(16)(\\\\d{3})(\\\\d{2,4})","$1 $2 $3",["16"],"0$1"],["(1[389]\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["1[389]0","1(?:[38]0|9)0"]],["(180)(2\\\\d{3})","$1 $2",["180","1802"]],["(19\\\\d)(\\\\d{3})","$1 $2",["19[13]"]],["(19\\\\d{2})(\\\\d{4})","$1 $2",["19[679]"]],["(13)(\\\\d{2})(\\\\d{2})","$1 $2 $3",["13[1-9]"]]],"0",0,0,0,0,0,[["8(?:51(?:0(?:02|31|60)|118)|91(?:0(?:1[0-2]|29)|1(?:[28]2|50|79)|2(?:10|64)|3(?:08|22|68)|4[29]8|62\\\\d|70[23]|959))\\\\d{3}",[9]],["14(?:5\\\\d|71)\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[6-9]|7[02-9]|8[12547-9]|9[017-9])\\\\d{6}",[9]],["180(?:0\\\\d{3}|2)\\\\d{3}",[7,10]],["19(?:0[0126]\\\\d|[679])\\\\d{5}",[8,10]],["500\\\\d{6}",[9]],0,0,0,["550\\\\d{6}",[9]],["13(?:00\\\\d{2})?\\\\d{4}",[6,10]]],"0011"],"CD":["243","00","[2-6]\\\\d{6}|[18]\\\\d{6,8}|9\\\\d{8}",[7,9],[["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["12"]],["([89]\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["8[0-2459]|9"]],["(\\\\d{2})(\\\\d{2})(\\\\d{3})","$1 $2 $3",["88"]],["(\\\\d{2})(\\\\d{5})","$1 $2",["[1-6]"]]],"0","0$1"],"CF":["236","00","[278]\\\\d{7}",[8],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4"]]],"CG":["242","00","[028]\\\\d{8}",[9],[["(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["801"]],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["[02]"]],["(\\\\d)(\\\\d{4})(\\\\d{4})","$1 $2 $3",["800"]]]],"CH":["41","00","[2-9]\\\\d{8}|860\\\\d{9}",[9],[["([2-9]\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[2-7]|[89]1"]],["([89]\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["8[047]|90"]],["(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4 $5",["860"]]],"0","0$1"],"CI":["225","00","[02-8]\\\\d{7}",[8],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4"]]],"CK":["682","00","[2-8]\\\\d{4}",[5],[["(\\\\d{2})(\\\\d{3})","$1 $2"]]],"CL":["56","(?:0|1(?:1[0-69]|2[0-57]|5[13-58]|69|7[0167]|8[018]))0","1230\\\\d{7}|[2-46-9]\\\\d{8,10}|5[1-3578]\\\\d{7}",[9,10,11],[["(\\\\d)(\\\\d{4})(\\\\d{4})","$1 $2 $3",["2[23]"],"($1)"],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["[357]|4[1-35]|6[13-57]|8(?:0[1-9]|[1-9])"],"($1)"],["(9)(\\\\d{4})(\\\\d{4})","$1 $2 $3",["9"]],["(44)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["44"]],["([68]00)(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["[68]00"]],["(600)(\\\\d{3})(\\\\d{2})(\\\\d{3})","$1 $2 $3 $4",["600"]],["(1230)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["123","1230"]],["(\\\\d{5})(\\\\d{4})","$1 $2",["219"],"($1)"]]],"CM":["237","00","[2368]\\\\d{7,8}",[8,9],[["([26])(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4 $5",["[26]"]],["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[23]|88"]]]],"CN":["86","(?:1(?:[12]\\\\d{3}|79\\\\d{2}|9[0-7]\\\\d{2}))?00","[1-7]\\\\d{6,11}|8[0-357-9]\\\\d{6,9}|9\\\\d{7,10}",[7,8,9,10,11,12],[["([48]00)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["[48]00"]],["(\\\\d{2})(\\\\d{5,6})","$1 $2",["(?:10|2\\\\d)[19]","(?:10|2\\\\d)(?:10|9[56])","(?:10|2\\\\d)(?:100|9[56])"],"0$1"],["(\\\\d{3})(\\\\d{5,6})","$1 $2",["[3-9]","[3-9]\\\\d\\\\d[19]","[3-9]\\\\d\\\\d(?:10|9[56])"],"0$1"],["(21)(\\\\d{4})(\\\\d{4,6})","$1 $2 $3",["21"],"0$1",1],["([12]\\\\d)(\\\\d{4})(\\\\d{4})","$1 $2 $3",["10[1-9]|2[02-9]","10[1-9]|2[02-9]","10(?:[1-79]|8(?:0[1-9]|[1-9]))|2[02-9]"],"0$1",1],["(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["3(?:1[02-9]|35|49|5|7[02-68]|9[1-68])|4(?:1[02-9]|2[179]|[35][2-9]|6[47-9]|7|8[23])|5(?:3[03-9]|4[36]|5[02-9]|6[1-46]|7[028]|80|9[2-46-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[04-9]|4[3-6]|6[2368])|8(?:1[236-8]|2[5-7]|3|5[1-9]|7[02-9]|8[36-8]|9[1-7])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])"],"0$1",1],["(\\\\d{3})(\\\\d{4})(\\\\d{4})","$1 $2 $3",["3(?:11|7[179])|4(?:[15]1|3[1-35])|5(?:1|2[37]|3[12]|51|7[13-79]|9[15])|7(?:[39]1|5[457]|6[09])|8(?:[57]1|98)"],"0$1",1],["(\\\\d{4})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["807","8078"],"0$1",1],["(\\\\d{3})(\\\\d{4})(\\\\d{4})","$1 $2 $3",["1(?:[3-57-9]|66)"]],["(10800)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["108","1080","10800"]],["(\\\\d{3})(\\\\d{7,8})","$1 $2",["950"]]],"0",0,"(1(?:[12]\\\\d{3}|79\\\\d{2}|9[0-7]\\\\d{2}))|0",0,0,0,0,"00"],"CO":["57","00(?:4(?:[14]4|56)|[579])","(?:[13]\\\\d{0,3}|[24-8])\\\\d{7}",[8,10,11],[["(\\\\d)(\\\\d{7})","$1 $2",["1(?:[2-7]|8[2-9]|9[0-3])|[24-8]","1(?:[2-7]|8[2-9]|9(?:09|[1-3]))|[24-8]"],"($1)"],["(\\\\d{3})(\\\\d{7})","$1 $2",["3"]],["(1)(\\\\d{3})(\\\\d{7})","$1-$2-$3",["1(?:80|9[04])","1(?:800|9(?:0[01]|4[78]))"],"0$1",0,"$1 $2 $3"]],"0",0,"0([3579]|4(?:44|56))?"],"CR":["506","00","[24-9]\\\\d{7,9}",[8,10],[["(\\\\d{4})(\\\\d{4})","$1 $2",["[24-7]|8[3-9]"]],["(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1-$2-$3",["[89]0"]]],0,0,"(19(?:0[012468]|1[09]|20|66|77|99))"],"CU":["53","119","[2-57]\\\\d{5,7}",[6,7,8],[["(\\\\d)(\\\\d{6,7})","$1 $2",["7"]],["(\\\\d{2})(\\\\d{4,6})","$1 $2",["[2-4]"]],["(\\\\d)(\\\\d{7})","$1 $2",["5"],"0$1"]],"0","(0$1)"],"CV":["238","0","[2-59]\\\\d{6}",[7],[["(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1 $2 $3"]]],"CW":["599","00","[134679]\\\\d{6,7}",[7,8],[["(\\\\d{3})(\\\\d{4})","$1 $2",["[13-7]"]],["(9)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["9"]]],0,0,0,0,0,0,[["9(?:[48]\\\\d{2}|50\\\\d|7(?:2[0-24]|[34]\\\\d|6[35-7]|77|8[7-9]))\\\\d{4}",[8]],["9(?:5(?:[12467]\\\\d|3[01])|6(?:[15-9]\\\\d|3[01]))\\\\d{4}",[8]],0,0,0,0,0,["955\\\\d{5}",[8]],0,["60[0-2]\\\\d{4}",[7]]]],"CX":["61","(?:14(?:1[14]|34|4[17]|[56]6|7[47]|88))?001[14-689]","[1458]\\\\d{5,9}",[6,7,8,9,10],[["([2378])(\\\\d{4})(\\\\d{4})","$1 $2 $3",["[2378]"],"(0$1)"],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["14|[45]"],"0$1"],["(16)(\\\\d{3,4})","$1 $2",["16"],"0$1"],["(16)(\\\\d{3})(\\\\d{2,4})","$1 $2 $3",["16"],"0$1"],["(1[389]\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["1[389]0","1(?:[38]0|9)0"]],["(180)(2\\\\d{3})","$1 $2",["180","1802"]],["(19\\\\d)(\\\\d{3})","$1 $2",["19[13]"]],["(19\\\\d{2})(\\\\d{4})","$1 $2",["19[679]"]],["(13)(\\\\d{2})(\\\\d{2})","$1 $2 $3",["13[1-9]"]]],"0",0,0,0,0,0,[["8(?:51(?:0(?:01|30|59)|117)|91(?:00[6-9]|1(?:21|49|78|81)|2(?:09|63)|3(?:12|26|75)|4(?:56|97)|64\\\\d|7(?:0[01]|1[0-2])|958))\\\\d{3}",[9]],["14(?:5\\\\d|71)\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[6-9]|7[02-9]|8[12547-9]|9[017-9])\\\\d{6}",[9]],["180(?:0\\\\d{3}|2)\\\\d{3}",[7,10]],["19(?:0[0126]\\\\d|[679])\\\\d{5}",[8,10]],["500\\\\d{6}",[9]],0,0,0,["550\\\\d{6}",[9]],["13(?:00\\\\d{2})?\\\\d{4}",[6,8,10]]],"0011"],"CY":["357","00","[257-9]\\\\d{7}",[8],[["(\\\\d{2})(\\\\d{6})","$1 $2"]]],"CZ":["420","00","[2-8]\\\\d{8}|9\\\\d{8,11}",[9],[["([2-9]\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[2-8]|9[015-7]"]],["(96\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3 $4",["96"]],["(9\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3 $4",["9[36]"]]]],"DE":["49","00","[1-35-9]\\\\d{3,14}|4(?:[0-8]\\\\d{3,12}|9(?:[0-37]\\\\d|4(?:[1-35-8]|4\\\\d?)|5\\\\d{1,2}|6[1-8]\\\\d?)\\\\d{2,8})",[4,5,6,7,8,9,10,11,12,13,14,15],[["(1\\\\d{2})(\\\\d{7,8})","$1 $2",["1[67]"]],["(15\\\\d{3})(\\\\d{6})","$1 $2",["15[0568]"]],["(1\\\\d{3})(\\\\d{7})","$1 $2",["15"]],["(\\\\d{2})(\\\\d{3,11})","$1 $2",["3[02]|40|[68]9"]],["(\\\\d{3})(\\\\d{3,11})","$1 $2",["2(?:0[1-389]|1[124]|2[18]|3[14]|[4-9]1)|3(?:[35-9][15]|4[015])|[4-8][1-9]1|9(?:06|[1-9]1)","2(?:0[1-389]|1(?:[14]|2[0-8])|2[18]|3[14]|[4-9]1)|3(?:[35-9][15]|4[015])|[4-8][1-9]1|9(?:06|[1-9]1)"]],["(\\\\d{4})(\\\\d{2,11})","$1 $2",["[24-6]|3(?:[3569][02-46-9]|4[2-4679]|7[2-467]|8[2-46-8])|[7-9](?:0[1-9]|[1-9])","[24-6]|3(?:3(?:0[1-467]|2[127-9]|3[124578]|[46][1246]|7[1257-9]|8[1256]|9[145])|4(?:2[135]|3[1357]|4[13578]|6[1246]|7[1356]|9[1346])|5(?:0[14]|2[1-3589]|3[1357]|[49][1246]|6[1-4]|7[13468]|8[13568])|6(?:0[1356]|2[1-489]|3[124-6]|4[1347]|6[13]|7[12579]|8[1-356]|9[135])|7(?:2[1-7]|3[1357]|4[145]|6[1-5]|7[1-4])|8(?:21|3[1468]|4[1347]|6[0135-9]|7[1467]|8[136])|9(?:0[12479]|2[1358]|3[1357]|4[134679]|6[1-9]|7[136]|8[147]|9[1468]))|[7-9](?:0[1-9]|[1-9])"]],["(3\\\\d{4})(\\\\d{1,10})","$1 $2",["3"]],["(800)(\\\\d{7,12})","$1 $2",["800"]],["(\\\\d{3})(\\\\d)(\\\\d{4,10})","$1 $2 $3",["1(?:37|80)|900","1(?:37|80)|900[1359]"]],["(1\\\\d{2})(\\\\d{5,11})","$1 $2",["181"]],["(18\\\\d{3})(\\\\d{6})","$1 $2",["185","1850","18500"]],["(18\\\\d{2})(\\\\d{7})","$1 $2",["18[68]"]],["(18\\\\d)(\\\\d{8})","$1 $2",["18[2-579]"]],["(700)(\\\\d{4})(\\\\d{4})","$1 $2 $3",["700"]],["(138)(\\\\d{4})","$1 $2",["138"]],["(15[013-68])(\\\\d{2})(\\\\d{8})","$1 $2 $3",["15[013-68]"]],["(15[279]\\\\d)(\\\\d{2})(\\\\d{7})","$1 $2 $3",["15[279]"]],["(1[67]\\\\d)(\\\\d{2})(\\\\d{7,8})","$1 $2 $3",["1(?:6[023]|7)"]]],"0","0$1"],"DJ":["253","00","[27]\\\\d{7}",[8],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4"]]],"DK":["45","00","[2-9]\\\\d{7}",[8],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4"]]],"DM":["1","011","[57-9]\\\\d{9}",[10],[["(\\\\d{3})(\\\\d{3})(\\\\d{4})","($1) $2-$3",0,0,0,"$1-$2-$3"]],"1",0,0,0,0,"767"],"DO":["1","011","[589]\\\\d{9}",[10],[["(\\\\d{3})(\\\\d{3})(\\\\d{4})","($1) $2-$3",0,0,0,"$1-$2-$3"]],"1",0,0,0,0,"8[024]9"],"DZ":["213","00","(?:[1-4]|[5-9]\\\\d)\\\\d{7}",[8,9],[["([1-4]\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[1-4]"]],["([5-8]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[5-8]"]],["(9\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["9"]]],"0","0$1"],"EC":["593","00","1\\\\d{9,10}|[2-8]\\\\d{7}|9\\\\d{8}",[8,9,10,11],[["(\\\\d)(\\\\d{3})(\\\\d{4})","$1 $2-$3",["[247]|[356][2-8]"],0,0,"$1-$2-$3"],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["9"],"0$1"],["(1800)(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["180","1800"],"$1"]],"0","(0$1)"],"EE":["372","00","[3-9]\\\\d{6,7}|800\\\\d{6,7}",[7,8,10],[["([3-79]\\\\d{2})(\\\\d{4})","$1 $2",["[369]|4[3-8]|5(?:[0-2]|5[0-478]|6[45])|7[1-9]","[369]|4[3-8]|5(?:[02]|1(?:[0-8]|95)|5[0-478]|6(?:4[0-4]|5[1-589]))|7[1-9]"]],["(70)(\\\\d{2})(\\\\d{4})","$1 $2 $3",["70"]],["(8000)(\\\\d{3})(\\\\d{3})","$1 $2 $3",["800","8000"]],["([458]\\\\d{3})(\\\\d{3,4})","$1 $2",["40|5|8(?:00|[1-5])","40|5|8(?:00[1-9]|[1-5])"]]]],"EG":["20","00","1\\\\d{4,9}|[24-6]\\\\d{8}|3\\\\d{7}|[89]\\\\d{8,9}",[8,9,10],[["(\\\\d)(\\\\d{7,8})","$1 $2",["[23]"]],["(\\\\d{2})(\\\\d{6,7})","$1 $2",["1(?:3|5[239])|[4-6]|[89][2-9]"]],["(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["1[0-25]|[89]00"]]],"0","0$1"],"EH":["212","00","[5-9]\\\\d{8}",[9],[["([5-7]\\\\d{2})(\\\\d{6})","$1-$2",["5(?:2[015-7]|3[0-4])|[67]"]],["([58]\\\\d{3})(\\\\d{5})","$1-$2",["5(?:2[2-489]|3[5-9]|92)|892","5(?:2(?:[2-48]|9[0-7])|3(?:[5-79]|8[0-7])|924)|892"]],["(5\\\\d{4})(\\\\d{4})","$1-$2",["5(?:29|38)","5(?:29|38)[89]"]],["([5]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["5(?:4[067]|5[03])"]],["(8[09])(\\\\d{7})","$1-$2",["8(?:0|9[013-9])"]]],"0",0,0,0,0,"528[89]"],"ER":["291","00","[178]\\\\d{6}",[7],[["(\\\\d)(\\\\d{3})(\\\\d{3})","$1 $2 $3"]],"0","0$1"],"ES":["34","00","[5-9]\\\\d{8}",[9],[["([89]00)(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[89]00"]],["([5-9]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[568]|[79][0-8]"]]]],"ET":["251","00","[1-59]\\\\d{8}",[9],[["([1-59]\\\\d)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["[1-59]"]]],"0","0$1"],"FI":["358","00|99(?:[01469]|5(?:11|3[23]|41|5[59]|77|88|9[09]))","1\\\\d{4,11}|[2-9]\\\\d{4,10}",[5,6,7,8,9,10,11,12],[["(\\\\d{3})(\\\\d{3,7})","$1 $2",["(?:[1-3]0|[6-8])0"]],["(75\\\\d{3})","$1",["75[12]"]],["(116\\\\d{3})","$1",["116"],"$1"],["(\\\\d{2})(\\\\d{4,10})","$1 $2",["[14]|2[09]|50|7[135]"]],["(\\\\d)(\\\\d{4,11})","$1 $2",["[25689][1-8]|3"]]],"0","0$1",0,0,0,0,[["1(?:[3569][1-8]\\\\d{3,9}|[47]\\\\d{5,10})|2[1-8]\\\\d{3,9}|3(?:[1-8]\\\\d{3,9}|9\\\\d{4,8})|[5689][1-8]\\\\d{3,9}"],["4(?:[0-8]\\\\d{4,9}|9\\\\d{3,8})|50\\\\d{4,8}",[6,7,8,9,10,11]],["800\\\\d{4,7}",[7,8,9,10]],["[67]00\\\\d{5,6}",[8,9]],0,0,["[13]0\\\\d{4,8}|2(?:0(?:[016-8]\\\\d{3,7}|[2-59]\\\\d{2,7})|9\\\\d{4,8})|60(?:[12]\\\\d{5,6}|6\\\\d{7})|7(?:1\\\\d{7}|3\\\\d{8}|5[03-9]\\\\d{3,7})",[5,6,7,8,9,10]]],"00"],"FJ":["679","0(?:0|52)","[2-9]\\\\d{6}|0\\\\d{10}",[7,11],[["(\\\\d{3})(\\\\d{4})","$1 $2",["[2-9]"]],["(\\\\d{4})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["0"]]],0,0,0,0,0,0,0,"00"],"FK":["500","00","[2-7]\\\\d{4}",[5]],"FM":["691","00","[39]\\\\d{6}",[7],[["(\\\\d{3})(\\\\d{4})","$1 $2"]]],"FO":["298","00","[2-9]\\\\d{5}",[6],[["(\\\\d{6})","$1"]],0,0,"(10(?:01|[12]0|88))"],"FR":["33","00","[1-9]\\\\d{8}",[9],[["([1-79])(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4 $5",["[1-79]"]],["(8\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["8"],"0 $1"]],"0","0$1"],"GA":["241","00","0?\\\\d{7}",[7,8],[["(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[2-7]"],"0$1"],["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["0"]]]],"GB":["44","00","\\\\d{7,10}",[7,9,10],[["(7\\\\d{3})(\\\\d{6})","$1 $2",["7(?:[1-57-9]|62)","7(?:[1-57-9]|624)"]],["(\\\\d{2})(\\\\d{4})(\\\\d{4})","$1 $2 $3",["2|5[56]|7[06]"]],["(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["1(?:[02-9]1|1)|3|9[018]"]],["(\\\\d{5})(\\\\d{4,5})","$1 $2",["1(?:38|5[23]|69|76|94)","1(?:(?:38|69)7|5(?:24|39)|768|946)","1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)"]],["(1\\\\d{3})(\\\\d{5,6})","$1 $2",["1"]],["(800)(\\\\d{4})","$1 $2",["800","8001","80011","800111","8001111"]],["(845)(46)(4\\\\d)","$1 $2 $3",["845","8454","84546","845464"]],["(8\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["8(?:4[2-5]|7[0-3])"]],["(80\\\\d)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["80"]],["(800)(\\\\d{6})","$1 $2",["800"]]],"0","0$1",0,0,0,0,[["2(?:0[01378]|3[0189]|4[017]|8[0-46-9]|9[0-2])\\\\d{7}|1(?:1(?:3[0-58]|4[0-5]|5[0-26-9]|6[0-4]|[78][0-49])|21[0-7]|31[0-8]|[4-69]1\\\\d)\\\\d{6}|1(?:2(?:0[024-9]|2[3-9]|3[3-79]|4[1-689]|[58][02-9]|6[0-47-9]|7[013-9]|9\\\\d)|3(?:0\\\\d|[25][02-9]|3[02-579]|[468][0-46-9]|7[1-35-79]|9[2-578])|4(?:0[03-9]|[28][02-57-9]|[37]\\\\d|4[02-69]|5[0-8]|[69][0-79])|5(?:0[1-35-9]|2[024-9]|3[015689]|4[02-9]|5[03-9]|6\\\\d|7[0-35-9]|8[0-468]|9[0-57-9])|6(?:0[034689]|2[0-35689]|[38][013-9]|4[1-467]|5[0-69]|6[13-9]|7[0-8]|9[0124578])|7(?:0[0246-9]|2\\\\d|3[0236-8]|4[03-9]|5[0-46-9]|6[013-9]|7[0-35-9]|8[024-9]|9[02-9])|8(?:0[35-9]|2[1-57-9]|3[02-578]|4[0-578]|5[124-9]|6[2-69]|7\\\\d|8[02-9]|9[02569])|9(?:0[02-589]|2[02-689]|3[1-57-9]|4[2-9]|5[0-579]|6[2-47-9]|7[0-24578]|8\\\\d|9[2-57]))\\\\d{6}|1(?:2(?:0(?:46[1-4]|87[2-9])|545[1-79]|76(?:2\\\\d|3[1-8]|6[1-6])|9(?:7(?:2[0-4]|3[2-5])|8(?:2[2-8]|7[0-47-9]|8[345])))|3(?:638[2-5]|647[23]|8(?:47[04-9]|64[0157-9]))|4(?:044[1-7]|20(?:2[23]|8\\\\d)|6(?:0(?:30|5[2-57]|6[1-8]|7[2-8])|140)|8(?:052|87[123]))|5(?:24(?:3[2-79]|6\\\\d)|276\\\\d|6(?:26[06-9]|686))|6(?:06(?:4\\\\d|7[4-79])|295[567]|35[34]\\\\d|47(?:24|61)|59(?:5[08]|6[67]|74)|955[0-4])|7(?:26(?:6[13-9]|7[0-7])|442\\\\d|50(?:2[0-3]|[3-68]2|76))|8(?:27[56]\\\\d|37(?:5[2-5]|8[239])|84(?:3[2-58]))|9(?:0(?:0(?:6[1-8]|85)|52\\\\d)|3583|4(?:66[1-8]|9(?:2[01]|81))|63(?:23|3[1-4])|9561))\\\\d{3}|176888[2-46-8]\\\\d{2}|16977[23]\\\\d{3}",[9,10]],["7(?:[1-3]\\\\d{3}|4(?:[0-46-9]\\\\d{2}|5(?:[0-689]\\\\d|7[0-57-9]))|5(?:0[0-8]|[13-9]\\\\d|2[0-35-9])\\\\d|7(?:0(?:0[01]|[1-9]\\\\d)|[1-7]\\\\d{2}|8[02-9]\\\\d|9[0-689]\\\\d)|8(?:[014-9]\\\\d|[23][0-8])\\\\d|9(?:[024-9]\\\\d{2}|1(?:[02-9]\\\\d|1[028])|3[0-689]\\\\d))\\\\d{5}",[10]],["80(?:0(?:1111|\\\\d{6,7})|8\\\\d{7})"],["(?:87[123]|9(?:[01]\\\\d|8[2349]))\\\\d{7}",[10]],["70\\\\d{8}",[10]],0,["(?:3[0347]|55)\\\\d{8}",[10]],["76(?:0[012]|2[356]|4[0134]|5[49]|6[0-369]|77|81|9[39])\\\\d{6}",[10]],["56\\\\d{8}",[10]],["8(?:4(?:5464\\\\d|[2-5]\\\\d{7})|70\\\\d{7})",[7,10]]],0," x"],"GD":["1","011","[4589]\\\\d{9}",[10],[["(\\\\d{3})(\\\\d{3})(\\\\d{4})","($1) $2-$3",0,0,0,"$1-$2-$3"]],"1",0,0,0,0,"473"],"GE":["995","00","[34578]\\\\d{8}",[9],[["(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[348]"],"0$1"],["(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["5|790"]],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["7"],"0$1"]],"0"],"GF":["594","00","[56]\\\\d{8}",[9],[["(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4"]],"0","0$1"],"GG":["44","00","[135789]\\\\d{6,9}",[7,9,10],[["(7\\\\d{3})(\\\\d{6})","$1 $2",["7(?:[1-57-9]|62)","7(?:[1-57-9]|624)"]],["(\\\\d{2})(\\\\d{4})(\\\\d{4})","$1 $2 $3",["2|5[56]|7[06]"]],["(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["1(?:[02-9]1|1)|3|9[018]"]],["(\\\\d{5})(\\\\d{4,5})","$1 $2",["1(?:38|5[23]|69|76|94)","1(?:(?:38|69)7|5(?:24|39)|768|946)","1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)"]],["(1\\\\d{3})(\\\\d{5,6})","$1 $2",["1"]],["(800)(\\\\d{4})","$1 $2",["800","8001","80011","800111","8001111"]],["(845)(46)(4\\\\d)","$1 $2 $3",["845","8454","84546","845464"]],["(8\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["8(?:4[2-5]|7[0-3])"]],["(80\\\\d)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["80"]],["(800)(\\\\d{6})","$1 $2",["800"]]],"0",0,0,0,0,0,[["1481[25-9]\\\\d{5}",[10]],["7(?:781\\\\d|839\\\\d|911[17])\\\\d{5}",[10]],["80(?:0(?:1111|\\\\d{6,7})|8\\\\d{7})"],["(?:87[123]|9(?:[01]\\\\d|8[0-3]))\\\\d{7}",[10]],["70\\\\d{8}",[10]],0,["(?:3[0347]|55)\\\\d{8}",[10]],["76(?:0[012]|2[356]|4[0134]|5[49]|6[0-369]|77|81|9[39])\\\\d{6}",[10]],["56\\\\d{8}",[10]],["8(?:4(?:5464\\\\d|[2-5]\\\\d{7})|70\\\\d{7})",[7,10]]]],"GH":["233","00","[235]\\\\d{8}|8\\\\d{7}",[8,9],[["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["[235]"]],["(\\\\d{3})(\\\\d{5})","$1 $2",["8"]]],"0","0$1"],"GI":["350","00","[256]\\\\d{7}",[8],[["(\\\\d{3})(\\\\d{5})","$1 $2",["2"]]]],"GL":["299","00","[1-689]\\\\d{5}",[6],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3"]]],"GM":["220","00","[2-9]\\\\d{6}",[7],[["(\\\\d{3})(\\\\d{4})","$1 $2"]]],"GN":["224","00","[367]\\\\d{7,8}",[8,9],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["3"]],["(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[67]"]]]],"GP":["590","00","[56]\\\\d{8}",[9],[["([56]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["590|69[01]"]]],"0","0$1",0,0,0,0,[["590(?:0[1-68]|1[0-2]|2[0-68]|3[1289]|4[0-24-9]|5[3-579]|6[0189]|7[08]|8[0-689]|9\\\\d)\\\\d{4}"],["69(?:0\\\\d{2}|1(?:2[29]|3[0-5]))\\\\d{4}"]]],"GQ":["240","00","[23589]\\\\d{8}",[9],[["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[235]"]],["(\\\\d{3})(\\\\d{6})","$1 $2",["[89]"]]]],"GR":["30","00","[26-9]\\\\d{9}",[10],[["([27]\\\\d)(\\\\d{4})(\\\\d{4})","$1 $2 $3",["21|7"]],["(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["2[2-9]1|[689]"]],["(2\\\\d{3})(\\\\d{6})","$1 $2",["2[2-9][02-9]"]]]],"GT":["502","00","[2-7]\\\\d{7}|1[89]\\\\d{9}",[8,11],[["(\\\\d{4})(\\\\d{4})","$1 $2",["[2-7]"]],["(\\\\d{4})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["1"]]]],"GU":["1","011","[5689]\\\\d{9}",[10],[["(\\\\d{3})(\\\\d{3})(\\\\d{4})","($1) $2-$3",0,0,0,"$1-$2-$3"]],"1",0,0,0,0,"671"],"GW":["245","00","(?:4(?:0\\\\d{5}|4\\\\d{7})|9\\\\d{8})",[7,9],[["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["44|9[5-7]"]],["(\\\\d{3})(\\\\d{4})","$1 $2",["40"]]]],"GY":["592","001","[2-46-9]\\\\d{6}",[7],[["(\\\\d{3})(\\\\d{4})","$1 $2"]]],"HK":["852","00(?:[126-9]|30|5[09])?","[2-7]\\\\d{7}|8[0-4]\\\\d{6,7}|9\\\\d{4,10}",[5,6,7,8,9,11],[["(\\\\d{4})(\\\\d{4})","$1 $2",["[2-7]|[89](?:0[1-9]|[1-9])"]],["(800)(\\\\d{3})(\\\\d{3})","$1 $2 $3",["800"]],["(900)(\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3 $4",["900"]],["(900)(\\\\d{2,5})","$1 $2",["900"]]],0,0,0,0,0,0,0,"00"],"HN":["504","00","[237-9]\\\\d{7}",[8],[["(\\\\d{4})(\\\\d{4})","$1-$2"]]],"HR":["385","00","[1-7]\\\\d{5,8}|[89]\\\\d{6,8}",[6,7,8,9],[["(1)(\\\\d{4})(\\\\d{3})","$1 $2 $3",["1"]],["([2-5]\\\\d)(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["[2-5]"]],["(9\\\\d)(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["9"]],["(6[01])(\\\\d{2})(\\\\d{2,3})","$1 $2 $3",["6[01]"]],["([67]\\\\d)(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["[67]"]],["(80[01])(\\\\d{2})(\\\\d{2,3})","$1 $2 $3",["80[01]"]],["(80[01])(\\\\d{3})(\\\\d{3})","$1 $2 $3",["80[01]"]]],"0","0$1"],"HT":["509","00","[2-489]\\\\d{7}",[8],[["(\\\\d{2})(\\\\d{2})(\\\\d{4})","$1 $2 $3"]]],"HU":["36","00","[1-9]\\\\d{7,8}",[8,9],[["(1)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["1"]],["(\\\\d{2})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["[2-9]"]]],"06","($1)"],"ID":["62","0(?:0[1789]|10(?:00|1[67]))","(?:[1-79]\\\\d{6,10}|8\\\\d{7,11})",[7,8,9,10,11,12],[["(\\\\d{2})(\\\\d{5,8})","$1 $2",["2[124]|[36]1"],"(0$1)"],["(\\\\d{3})(\\\\d{5,8})","$1 $2",["2[035-9]|[36][02-9]|[4579]"],"(0$1)"],["(8\\\\d{2})(\\\\d{3,4})(\\\\d{3})","$1-$2-$3",["8[1-35-9]"]],["(8\\\\d{2})(\\\\d{4})(\\\\d{4,5})","$1-$2-$3",["8[1-35-9]"]],["(1)(500)(\\\\d{3})","$1 $2 $3",["150","1500"],"$1"],["(177)(\\\\d{6,8})","$1 $2",["177"]],["(800)(\\\\d{5,7})","$1 $2",["800"]],["(804)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["804"]],["(80\\\\d)(\\\\d)(\\\\d{3})(\\\\d{3})","$1 $2 $3 $4",["80[79]"]]],"0","0$1"],"IE":["353","00","[124-9]\\\\d{6,9}",[7,8,9,10],[["(1)(\\\\d{3,4})(\\\\d{4})","$1 $2 $3",["1"]],["(\\\\d{2})(\\\\d{5})","$1 $2",["2[24-9]|47|58|6[237-9]|9[35-9]"]],["(\\\\d{3})(\\\\d{5})","$1 $2",["40[24]|50[45]"]],["(48)(\\\\d{4})(\\\\d{4})","$1 $2 $3",["48"]],["(818)(\\\\d{3})(\\\\d{3})","$1 $2 $3",["818"]],["(\\\\d{2})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["[24-69]|7[14]"]],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["76|8[35-9]"],"0$1"],["(8\\\\d)(\\\\d)(\\\\d{3})(\\\\d{4})","$1 $2 $3 $4",["8[35-9]5"],"0$1"],["(700)(\\\\d{3})(\\\\d{3})","$1 $2 $3",["700"],"0$1"],["(\\\\d{4})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["1(?:5|8[059])","1(?:5|8[059]0)"],"$1"]],"0","(0$1)"],"IL":["972","0(?:0|1[2-9])","1\\\\d{6,11}|[2-589]\\\\d{3}(?:\\\\d{3,6})?|6\\\\d{3}|7\\\\d{6,9}",[4,7,8,9,10,11,12],[["([2-489])(\\\\d{3})(\\\\d{4})","$1-$2-$3",["[2-489]"],"0$1"],["([57]\\\\d)(\\\\d{3})(\\\\d{4})","$1-$2-$3",["[57]"],"0$1"],["(153)(\\\\d{1,2})(\\\\d{3})(\\\\d{4})","$1 $2 $3 $4",["153"]],["(1)([7-9]\\\\d{2})(\\\\d{3})(\\\\d{3})","$1-$2-$3-$4",["1[7-9]"]],["(1255)(\\\\d{3})","$1-$2",["125","1255"]],["(1200)(\\\\d{3})(\\\\d{3})","$1-$2-$3",["120","1200"]],["(1212)(\\\\d{2})(\\\\d{2})","$1-$2-$3",["121","1212"]],["(1599)(\\\\d{6})","$1-$2",["159","1599"]],["(151)(\\\\d{1,2})(\\\\d{3})(\\\\d{4})","$1-$2 $3-$4",["151"]],["(\\\\d{4})","*$1",["[2-689]"]]],"0"],"IM":["44","00","[135789]\\\\d{6,9}",[10],[["(7\\\\d{3})(\\\\d{6})","$1 $2",["7(?:[1-57-9]|62)","7(?:[1-57-9]|624)"]],["(\\\\d{2})(\\\\d{4})(\\\\d{4})","$1 $2 $3",["2|5[56]|7[06]"]],["(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["1(?:[02-9]1|1)|3|9[018]"]],["(\\\\d{5})(\\\\d{4,5})","$1 $2",["1(?:38|5[23]|69|76|94)","1(?:(?:38|69)7|5(?:24|39)|768|946)","1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)"]],["(1\\\\d{3})(\\\\d{5,6})","$1 $2",["1"]],["(800)(\\\\d{4})","$1 $2",["800","8001","80011","800111","8001111"]],["(845)(46)(4\\\\d)","$1 $2 $3",["845","8454","84546","845464"]],["(8\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["8(?:4[2-5]|7[0-3])"]],["(80\\\\d)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["80"]],["(800)(\\\\d{6})","$1 $2",["800"]]],"0",0,0,0,0,0,[["1624[5-8]\\\\d{5}"],["7(?:4576|[59]24\\\\d|624[0-4689])\\\\d{5}"],["808162\\\\d{4}"],["(?:872299|90[0167]624)\\\\d{4}"],["70\\\\d{8}"],0,["3(?:08162\\\\d|3\\\\d{5}|4(?:40[49]06|5624\\\\d)|7(?:0624\\\\d|2299\\\\d))\\\\d{3}|55\\\\d{8}"],0,["56\\\\d{8}"],["8(?:4(?:40[49]06|5624\\\\d)|70624\\\\d)\\\\d{3}"]]],"IN":["91","00","008\\\\d{9}|1\\\\d{7,12}|[2-9]\\\\d{9,10}",[8,9,10,11,12,13],[["(\\\\d{8})","$1",["561","5616","56161"],"$1"],["(\\\\d{5})(\\\\d{5})","$1 $2",["6(?:0[02]|12|2[03689]|3[05-9]|9[019])|7(?:[02-8]|19|9[037-9])|8(?:0[015-9]|[1-9])|9","6(?:0(?:0|26)|127|2(?:[06][0-59]|3[0589]|8[0-39]|9[0-46])|3(?:0[0-39]|5[0-46-9]|6[0-3]|7[015-9]|8|9[0-79])|9[019])|7(?:[07]|19[0-5]|2(?:[0235-9]|[14][017-9])|3(?:[025-9]|[134][017-9])|4(?:[0-35689]|[47][017-9])|5(?:[02-46-9]|[15][017-9])|6(?:[02-9]|1[0-257-9])|8(?:[0-79]|8[0189])|9(?:[089]|31|7[02-9]))|8(?:0(?:[01589]|6[67]|7[02-9])|1(?:[0-57-9]|6[07-9])|2(?:[014][07-9]|[235-9])|3(?:[03-57-9]|[126][07-9])|[45]|6(?:[02457-9]|[136][07-9])|7(?:[078][07-9]|[1-69])|8(?:[0-25-9]|3[07-9]|4[047-9])|9(?:[02-9]|1[027-9]))|9","6(?:0(?:0|26)|1279|2(?:[06][0-59]|3[0589]|8[0-39]|9[0-46])|3(?:0[0-39]|5[0-46-9]|6[0-3]|7[015-9]|8|9[0-79])|9[019])|7(?:0|19[0-5]|2(?:[0235-79]|[14][017-9]|8(?:[0-69]|[78][089]))|3(?:[05-8]|1(?:[0189]|7[02-9])|2(?:[0-49][089]|[5-8])|3[017-9]|4(?:[07-9]|11)|9(?:[01689]|[2-5][089]|7[0189]))|4(?:[056]|1(?:[0135-9]|[24][089])|[29](?:[0-7][089]|[89])|3(?:[0-8][089]|9)|[47](?:[089]|11|7[02-8])|8(?:[0-24-7][089]|[389]))|5(?:[0346-9]|[15][017-9]|2(?:[03-9]|[12][089]))|6(?:[0346-9]|1[0-257-9]|2(?:[0-4]|[5-9][089])|5(?:[0-367][089]|[4589]))|7(?:0(?:[02-9]|1[089])|[1-9])|8(?:[0-79]|8(?:0[0189]|11|8[013-9]|9))|9(?:[089]|313|7(?:[02-8]|9[07-9])))|8(?:0(?:[01589]|6[67]|7(?:[02-8]|9[04-9]))|1(?:[0-57-9]|6(?:[089]|7[02-8]))|2(?:[014](?:[089]|7[02-8])|[235-9])|3(?:[03-57-9]|[126](?:[089]|7[02-8]))|[45]|6(?:[02457-9]|[136](?:[089]|7[02-8]))|7(?:0[07-9]|[1-69]|[78](?:[089]|7[02-8]))|8(?:[0-25-9]|3(?:[089]|7[02-8])|4(?:[0489]|7[02-8]))|9(?:[02-9]|1(?:[0289]|7[02-8])))|9"]],["(\\\\d{2})(\\\\d{4})(\\\\d{4})","$1 $2 $3",["11|2[02]|33|4[04]|79[1-9]|80[2-46]"]],["(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["1(?:2[0-249]|3[0-25]|4[145]|[59][14]|[68][1-9]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1|9[15])|6(?:12|[2-4]1|5[17]|6[13]|7[14]|80)|7(?:12|2[14]|3[134]|4[47]|5[15]|[67]1|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)"]],["(\\\\d{4})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["1(?:[23579]|[468][1-9])|[2-8]"]],["(\\\\d{2})(\\\\d{3})(\\\\d{4})(\\\\d{3})","$1 $2 $3 $4",["008"]],["(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["140"],"$1"],["(\\\\d{4})(\\\\d{2})(\\\\d{4})","$1 $2 $3",["160","1600"],"$1"],["(\\\\d{4})(\\\\d{4,5})","$1 $2",["180","1800"],"$1"],["(\\\\d{4})(\\\\d{2,4})(\\\\d{4})","$1 $2 $3",["180","1800"],"$1"],["(\\\\d{4})(\\\\d{3,4})(\\\\d{4})","$1 $2 $3",["186","1860"],"$1"],["(\\\\d{4})(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3 $4",["18[06]"],"$1"]],"0","0$1",0,0,1],"IO":["246","00","3\\\\d{6}",[7],[["(\\\\d{3})(\\\\d{4})","$1 $2"]]],"IQ":["964","00","[1-7]\\\\d{7,9}",[8,9,10],[["(1)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["1"]],["([2-6]\\\\d)(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["[2-6]"]],["(7\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["7"]]],"0","0$1"],"IR":["98","00","[1-8]\\\\d{5,9}|9(?:[0-4]\\\\d{8}|9\\\\d{8})",[6,7,10],[["(\\\\d{2})(\\\\d{4})(\\\\d{4})","$1 $2 $3",["[1-8]"]],["(\\\\d{2})(\\\\d{4,5})","$1 $2",["[1-8]"]],["(\\\\d{4,5})","$1",["96"]],["(\\\\d{3})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["9"]]],"0","0$1"],"IS":["354","1(?:0(?:01|10|20)|100)|00","[4-9]\\\\d{6}|38\\\\d{7}",[7,9],[["(\\\\d{3})(\\\\d{4})","$1 $2",["[4-9]"]],["(3\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["3"]]],0,0,0,0,0,0,0,"00"],"IT":["39","00","[01589]\\\\d{5,10}|3(?:[12457-9]\\\\d{8}|[36]\\\\d{7,9})",[6,7,8,9,10,11],[["(\\\\d{2})(\\\\d{3,4})(\\\\d{4})","$1 $2 $3",["0[26]|55"]],["(0[26])(\\\\d{4})(\\\\d{5})","$1 $2 $3",["0[26]"]],["(0[26])(\\\\d{4,6})","$1 $2",["0[26]"]],["(0\\\\d{2})(\\\\d{3,4})(\\\\d{4})","$1 $2 $3",["0[13-57-9][0159]"]],["(\\\\d{3})(\\\\d{3,6})","$1 $2",["0[13-57-9][0159]|8(?:03|4[17]|9[245])","0[13-57-9][0159]|8(?:03|4[17]|9(?:2|[45][0-4]))"]],["(0\\\\d{3})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["0[13-57-9][2-46-8]"]],["(0\\\\d{3})(\\\\d{2,6})","$1 $2",["0[13-57-9][2-46-8]"]],["(\\\\d{3})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["[13]|8(?:00|4[08]|9[59])","[13]|8(?:00|4[08]|9(?:5[5-9]|9))"]],["(\\\\d{4})(\\\\d{4})","$1 $2",["894","894[5-9]"]],["(\\\\d{3})(\\\\d{4})(\\\\d{4})","$1 $2 $3",["3"]]],0,0,0,0,0,0,[["0(?:[26]\\\\d{4,9}|(?:1(?:[0159]\\\\d|[27][1-5]|31|4[1-4]|6[1356]|8[2-57])|3(?:[0159]\\\\d|2[1-4]|3[12]|[48][1-6]|6[2-59]|7[1-7])|4(?:[0159]\\\\d|[23][1-9]|4[245]|6[1-5]|7[1-4]|81)|5(?:[0159]\\\\d|2[1-5]|3[2-6]|4[1-79]|6[4-6]|7[1-578]|8[3-8])|7(?:[0159]\\\\d|2[12]|3[1-7]|4[2346]|6[13569]|7[13-6]|8[1-59])|8(?:[0159]\\\\d|2[34578]|3[1-356]|[6-8][1-5])|9(?:[0159]\\\\d|[238][1-5]|4[12]|6[1-8]|7[1-6]))\\\\d{2,7})"],["3(?:[12457-9]\\\\d{8}|6\\\\d{7,8}|3\\\\d{7,9})",[9,10,11]],["80(?:0\\\\d{6}|3\\\\d{3})",[6,9]],["0878\\\\d{5}|1(?:44|6[346])\\\\d{6}|89(?:2\\\\d{3}|4(?:[0-4]\\\\d{2}|[5-9]\\\\d{4})|5(?:[0-4]\\\\d{2}|[5-9]\\\\d{6})|9\\\\d{6})",[6,8,9,10]],["1(?:78\\\\d|99)\\\\d{6}",[9,10]],0,0,0,["55\\\\d{8}",[10]],["84(?:[08]\\\\d{6}|[17]\\\\d{3})",[6,9]]]],"JE":["44","00","[135789]\\\\d{6,9}",[10],[["(7\\\\d{3})(\\\\d{6})","$1 $2",["7(?:[1-57-9]|62)","7(?:[1-57-9]|624)"]],["(\\\\d{2})(\\\\d{4})(\\\\d{4})","$1 $2 $3",["2|5[56]|7[06]"]],["(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["1(?:[02-9]1|1)|3|9[018]"]],["(\\\\d{5})(\\\\d{4,5})","$1 $2",["1(?:38|5[23]|69|76|94)","1(?:(?:38|69)7|5(?:24|39)|768|946)","1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)"]],["(1\\\\d{3})(\\\\d{5,6})","$1 $2",["1"]],["(800)(\\\\d{4})","$1 $2",["800","8001","80011","800111","8001111"]],["(845)(46)(4\\\\d)","$1 $2 $3",["845","8454","84546","845464"]],["(8\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["8(?:4[2-5]|7[0-3])"]],["(80\\\\d)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["80"]],["(800)(\\\\d{6})","$1 $2",["800"]]],"0",0,0,0,0,0,[["1534[0-24-8]\\\\d{5}"],["7(?:509\\\\d|7(?:00[378]|97[7-9])|829\\\\d|937\\\\d)\\\\d{5}"],["80(?:07(?:35|81)|8901)\\\\d{4}"],["(?:871206|90(?:066[59]|1810|71(?:07|55)))\\\\d{4}"],["701511\\\\d{4}"],0,["3(?:0(?:07(?:35|81)|8901)|3\\\\d{4}|4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))\\\\d{4}|55\\\\d{8}"],["76(?:0[012]|2[356]|4[0134]|5[49]|6[0-369]|77|81|9[39])\\\\d{6}"],["56\\\\d{8}"],["8(?:4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|70002)\\\\d{4}"]]],"JM":["1","011","[589]\\\\d{9}",[10],[["(\\\\d{3})(\\\\d{3})(\\\\d{4})","($1) $2-$3",0,0,0,"$1-$2-$3"]],"1",0,0,0,0,"876"],"JO":["962","00","[235-9]\\\\d{7,8}",[8,9],[["(\\\\d)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["[2356]|87"],"(0$1)"],["(7)(\\\\d{4})(\\\\d{4})","$1 $2 $3",["7[457-9]"]],["(\\\\d{2})(\\\\d{7})","$1 $2",["70"]],["(\\\\d{3})(\\\\d{5,6})","$1 $2",["8[0158]|9"]]],"0","0$1"],"JP":["81","010","[1-9]\\\\d{8,9}|00(?:[36]\\\\d{7,14}|7\\\\d{5,7}|8\\\\d{7})",[8,9,10,11,12,13,14,15,16,17],[["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1-$2-$3",["(?:12|57|99)0"]],["(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1-$2-$3",["800"]],["(\\\\d{2})(\\\\d{4})(\\\\d{4})","$1-$2-$3",["[2579]0|80[1-9]"]],["(\\\\d{4})(\\\\d)(\\\\d{4})","$1-$2-$3",["1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51|63)|9(?:49|80|9[16])","1(?:267|3(?:7[247]|9[278])|4(?:5[67]|66)|5(?:47|58|64|8[67])|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[78]|96)|477|51[24]|636)|9(?:496|802|9(?:1[23]|69))","1(?:267|3(?:7[247]|9[278])|4(?:5[67]|66)|5(?:47|58|64|8[67])|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[78]|96[2457-9])|477|51[24]|636[2-57-9])|9(?:496|802|9(?:1[23]|69))"]],["(\\\\d{3})(\\\\d{2})(\\\\d{4})","$1-$2-$3",["1(?:2[3-6]|3[3-9]|4[2-6]|5[2-8]|[68][2-7]|7[2-689]|9[1-578])|2(?:2[03-689]|3[3-58]|4[0-468]|5[04-8]|6[013-8]|7[06-9]|8[02-57-9]|9[13])|4(?:2[28]|3[689]|6[035-7]|7[05689]|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9[4-9])|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9[014-9])|8(?:2[49]|3[3-8]|4[5-8]|5[2-9]|6[35-9]|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9[3-7])","1(?:2[3-6]|3[3-9]|4[2-6]|5(?:[236-8]|[45][2-69])|[68][2-7]|7[2-689]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:[0468][2-9]|5[78]|7[2-4])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9(?:[4-7]|[89][2-8]))|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9[2-8])|3(?:[3-6][2-9]|7[2-6]|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5[4-7]|6[2-9]|8[2-8]|9[236-9])|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3[34]|4[2-69]|[5-7]))","1(?:2[3-6]|3[3-9]|4[2-6]|5(?:[236-8]|[45][2-69])|[68][2-7]|7[2-689]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:[0468][2-9]|5[78]|7[2-4])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9(?:[4-7]|[89][2-8]))|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9(?:20|[3578]|4[04-9]|6[56]))|3(?:[3-6][2-9]|7(?:[2-5]|6[0-59])|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5(?:[467]|5[014-9])|6(?:[2-8]|9[02-69])|8[2-8]|9(?:[236-8]|9[23]))|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3(?:3[02-9]|4[0-24689])|4[2-69]|[5-7]))","1(?:2[3-6]|3[3-9]|4[2-6]|5(?:[236-8]|[45][2-69])|[68][2-7]|7[2-689]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:[0468][2-9]|5[78]|7[2-4])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9(?:[4-7]|[89][2-8]))|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9(?:20|[3578]|4[04-9]|6(?:5[25]|60)))|3(?:[3-6][2-9]|7(?:[2-5]|6[0-59])|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5(?:[467]|5[014-9])|6(?:[2-8]|9[02-69])|8[2-8]|9(?:[236-8]|9[23]))|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3(?:3[02-9]|4[0-24689])|4[2-69]|[5-7]))"]],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1-$2-$3",["1|2(?:2[37]|5[5-9]|64|78|8[39]|91)|4(?:2[2689]|64|7[347])|5[2-589]|60|8(?:2[124589]|3[279]|[46-9])|9(?:[235-8]|93)","1|2(?:2[37]|5(?:[57]|[68]0|9[19])|64|78|8[39]|917)|4(?:2(?:20|[68]|9[178])|64|7[347])|5[2-589]|60|8(?:2[124589]|3[279]|[46-9])|9(?:[235-8]|93[34])","1|2(?:2[37]|5(?:[57]|[68]0|9(?:17|99))|64|78|8[39]|917)|4(?:2(?:20|[68]|9[178])|64|7[347])|5[2-589]|60|8(?:2[124589]|3[279]|[46-9])|9(?:[235-8]|93(?:31|4))"]],["(\\\\d{3})(\\\\d{2})(\\\\d{4})","$1-$2-$3",["2(?:[34]7|[56]9|74|9[14-79])|82|993"]],["(\\\\d)(\\\\d{4})(\\\\d{4})","$1-$2-$3",["3|4(?:2[09]|7[01])|6[1-9]"]],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1-$2-$3",["[2479][1-9]"]]],"0","0$1"],"KE":["254","000","20\\\\d{6,7}|[4-9]\\\\d{6,9}",[7,8,9,10],[["(\\\\d{2})(\\\\d{5,7})","$1 $2",["[24-6]"]],["(\\\\d{3})(\\\\d{6})","$1 $2",["7"]],["(\\\\d{3})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["[89]"]]],"0","0$1","005|0"],"KG":["996","00","[235-9]\\\\d{8,9}",[9,10],[["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[25-79]|31[25]"]],["(\\\\d{4})(\\\\d{5})","$1 $2",["3(?:1[36]|[2-9])"]],["(\\\\d{3})(\\\\d{3})(\\\\d)(\\\\d{3})","$1 $2 $3 $4",["8"]]],"0","0$1"],"KH":["855","00[14-9]","[1-9]\\\\d{7,9}",[8,9,10],[["(\\\\d{2})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["1\\\\d[1-9]|[2-9]"],"0$1"],["(1[89]00)(\\\\d{3})(\\\\d{3})","$1 $2 $3",["1[89]0","1[89]00"]]],"0"],"KI":["686","00","[2458]\\\\d{4}|3\\\\d{4,7}|[67]\\\\d{7}",[5,8],0,0,0,"0"],"KM":["269","00","[3478]\\\\d{6}",[7],[["(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1 $2 $3"]]],"KN":["1","011","[589]\\\\d{9}",[10],[["(\\\\d{3})(\\\\d{3})(\\\\d{4})","($1) $2-$3",0,0,0,"$1-$2-$3"]],"1",0,0,0,0,"869"],"KP":["850","00|99","1\\\\d{9}|[28]\\\\d{7}",[8,10],[["(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["1"]],["(\\\\d)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["2"]],["(\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["8"]]],"0","0$1"],"KR":["82","00(?:[1259]|3(?:[46]5|91)|7(?:00|27|3|55|6[126]))","00(?:3\\\\d{8,9}|7\\\\d{9,11})|[1-7]\\\\d{4,9}|8\\\\d{8}",[5,6,8,9,10,11,12,13,14],[["(\\\\d{2})(\\\\d{3,4})","$1-$2",["(?:3[1-3]|[46][1-4]|5[1-5])1"]],["(\\\\d{4})(\\\\d{4})","$1-$2",["1(?:5[246-9]|6[046-8]|8[03579])","1(?:5(?:22|44|66|77|88|99)|6(?:[07]0|44|6[16]|88)|8(?:00|33|55|77|99))"],"$1"],["(\\\\d{5})","$1",["1[016-9]1","1[016-9]11","1[016-9]114"]],["(\\\\d)(\\\\d{3,4})(\\\\d{4})","$1-$2-$3",["2[1-9]"]],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1-$2-$3",["60[2-9]|80"]],["(\\\\d{2})(\\\\d{3,4})(\\\\d{4})","$1-$2-$3",["1[0-25-9]|(?:3[1-3]|[46][1-4]|5[1-5])[1-9]"]],["(\\\\d{2})(\\\\d{4})(\\\\d{4})","$1-$2-$3",["[57]0"]]],"0","0$1","0(8[1-46-8]|85\\\\d{2})?"],"KW":["965","00","[12569]\\\\d{6,7}",[7,8],[["(\\\\d{4})(\\\\d{3,4})","$1 $2",["[16]|2(?:[0-35-9]|4[0-35-9])|52[25]|9[0-24-9]"]],["(\\\\d{3})(\\\\d{5})","$1 $2",["244|5(?:[015]|6[56])"]]]],"KY":["1","011","[3589]\\\\d{9}",[10],[["(\\\\d{3})(\\\\d{3})(\\\\d{4})","($1) $2-$3",0,0,0,"$1-$2-$3"]],"1",0,0,0,0,"345"],"KZ":["7","810","(?:33\\\\d|7\\\\d{2}|80[089])\\\\d{7}",[10],[["([3489]\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1 $2-$3-$4",["[3489]"]],["(7\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["7"]]],"8",0,0,0,0,0,[["33622\\\\d{5}|7(?:1(?:0(?:[23]\\\\d|4[0-3]|59|63)|1(?:[23]\\\\d|4[0-79]|59)|2(?:[23]\\\\d|59)|3(?:2\\\\d|3[0-79]|4[0-35-9]|59)|4(?:[24]\\\\d|3[013-9]|5[1-9])|5(?:2\\\\d|3[1-9]|4[0-7]|59)|6(?:[234]\\\\d|5[19]|61)|72\\\\d|8(?:[27]\\\\d|3[1-46-9]|4[0-5]))|2(?:1(?:[23]\\\\d|4[46-9]|5[3469])|2(?:2\\\\d|3[0679]|46|5[12679])|3(?:[234]\\\\d|5[139])|4(?:2\\\\d|3[1235-9]|59)|5(?:[23]\\\\d|4[01246-8]|59|61)|6(?:2\\\\d|3[1-9]|4[0-4]|59)|7(?:[2379]\\\\d|40|5[279])|8(?:[23]\\\\d|4[0-3]|59)|9(?:2\\\\d|3[124578]|59)))\\\\d{5}"],["7(?:0[012578]|47|6[02-4]|7[15-8]|85)\\\\d{7}"],["800\\\\d{7}"],["809\\\\d{7}"],["808\\\\d{7}"],0,0,0,["751\\\\d{7}"]],"8~10"],"LA":["856","00","[2-8]\\\\d{7,9}",[8,9,10],[["(20)(\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3 $4",["20"]],["([2-8]\\\\d)(\\\\d{3})(\\\\d{3})","$1 $2 $3",["2[13]|3[14]|[4-8]"]],["(30)(\\\\d{2})(\\\\d{2})(\\\\d{3})","$1 $2 $3 $4",["30"]]],"0","0$1"],"LB":["961","00","[13-9]\\\\d{6,7}",[7,8],[["(\\\\d)(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[13-69]|7(?:[2-57]|62|8[0-7]|9[04-9])|8[02-9]"],"0$1"],["([7-9]\\\\d)(\\\\d{3})(\\\\d{3})","$1 $2 $3",["7(?:[01]|6[013-9]|8[89]|9[1-3])|[89][01]"]]],"0"],"LC":["1","011","[5789]\\\\d{9}",[10],[["(\\\\d{3})(\\\\d{3})(\\\\d{4})","($1) $2-$3",0,0,0,"$1-$2-$3"]],"1",0,0,0,0,"758"],"LI":["423","00","6\\\\d{8}|[23789]\\\\d{6}",[7,9],[["(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1 $2 $3",["[237-9]"]],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["6[56]"]],["(69)(7\\\\d{2})(\\\\d{4})","$1 $2 $3",["697"]]],"0",0,"0|10(?:01|20|66)"],"LK":["94","00","[1-9]\\\\d{8}",[9],[["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[1-689]"]],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["7"]]],"0","0$1"],"LR":["231","00","2\\\\d{7,8}|[378]\\\\d{8}|4\\\\d{6}|5\\\\d{6,8}",[7,8,9],[["(2\\\\d)(\\\\d{3})(\\\\d{3})","$1 $2 $3",["2"]],["([4-5])(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[45]"]],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["[23578]"]]],"0","0$1"],"LS":["266","00","[2568]\\\\d{7}",[8],[["(\\\\d{4})(\\\\d{4})","$1 $2"]]],"LT":["370","00","[3-9]\\\\d{7}",[8],[["([34]\\\\d)(\\\\d{6})","$1 $2",["37|4(?:1|5[45]|6[2-4])"]],["([3-6]\\\\d{2})(\\\\d{5})","$1 $2",["3[148]|4(?:[24]|6[09])|528|6"]],["([7-9]\\\\d{2})(\\\\d{2})(\\\\d{3})","$1 $2 $3",["[7-9]"],"8 $1"],["(5)(2\\\\d{2})(\\\\d{4})","$1 $2 $3",["52[0-79]"]]],"8","(8-$1)","[08]",0,1],"LU":["352","00","[24-9]\\\\d{3,10}|3(?:[0-46-9]\\\\d{2,9}|5[013-9]\\\\d{1,8})",[4,5,6,7,8,9,10,11],[["(\\\\d{2})(\\\\d{3})","$1 $2",["[2-5]|7[1-9]|[89](?:0[2-9]|[1-9])"]],["(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3",["[2-5]|7[1-9]|[89](?:0[2-9]|[1-9])"]],["(\\\\d{2})(\\\\d{2})(\\\\d{3})","$1 $2 $3",["20"]],["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})","$1 $2 $3 $4",["2(?:[0367]|4[3-8])"]],["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})","$1 $2 $3 $4",["20"]],["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})","$1 $2 $3 $4 $5",["2(?:[0367]|4[3-8])"]],["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,4})","$1 $2 $3 $4",["2(?:[12589]|4[12])|[3-5]|7[1-9]|8(?:0[2-9]|[1-9])|9(?:0[2-46-9]|[1-9])"]],["(\\\\d{3})(\\\\d{2})(\\\\d{3})","$1 $2 $3",["70|80[01]|90[015]"]],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["6"]]],0,0,"(15(?:0[06]|1[12]|35|4[04]|55|6[26]|77|88|99)\\\\d)"],"LV":["371","00","[2689]\\\\d{7}",[8],[["([2689]\\\\d)(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[2689]"]]]],"LY":["218","00","[25679]\\\\d{8}",[9],[["([25-79]\\\\d)(\\\\d{7})","$1-$2",["[25-79]"]]],"0","0$1"],"MA":["212","00","[5-9]\\\\d{8}",[9],[["([5-7]\\\\d{2})(\\\\d{6})","$1-$2",["5(?:2[015-7]|3[0-4])|[67]"]],["([58]\\\\d{3})(\\\\d{5})","$1-$2",["5(?:2[2-489]|3[5-9]|92)|892","5(?:2(?:[2-48]|9[0-7])|3(?:[5-79]|8[0-7])|924)|892"]],["(5\\\\d{4})(\\\\d{4})","$1-$2",["5(?:29|38)","5(?:29|38)[89]"]],["([5]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["5(?:4[067]|5[03])"]],["(8[09])(\\\\d{7})","$1-$2",["8(?:0|9[013-9])"]]],"0","0$1",0,0,0,0,[["5(?:2(?:[015-79]\\\\d|2[02-9]|3[2-57]|4[2-8]|8[235-7])\\\\d|3(?:[0-48]\\\\d|[57][2-9]|6[2-8]|9[3-9])\\\\d|4[067]\\\\d{2}|5[03]\\\\d{2})\\\\d{4}"],["(?:6(?:[0-79]\\\\d|8[0-247-9])|7(?:0[067]|6[1267]|7[017]))\\\\d{6}"],["80\\\\d{7}"],["89\\\\d{7}"],0,0,0,0,["5924[01]\\\\d{4}"]]],"MC":["377","00","[34689]\\\\d{7,8}",[8,9],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[39]"],"$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["4"]],["(6)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4 $5",["6"]],["(\\\\d{3})(\\\\d{3})(\\\\d{2})","$1 $2 $3",["8"],"$1"]],"0","0$1"],"MD":["373","00","[235-9]\\\\d{7}",[8],[["(\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["22|3"]],["([25-7]\\\\d{2})(\\\\d{2})(\\\\d{3})","$1 $2 $3",["2[13-9]|[5-7]"]],["([89]\\\\d{2})(\\\\d{5})","$1 $2",["[89]"]]],"0","0$1"],"ME":["382","00","[2-9]\\\\d{7,8}",[8,9],[["(\\\\d{2})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["[2-57-9]|6[036-9]"]]],"0","0$1"],"MF":["590","00","[56]\\\\d{8}",[9],[["([56]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["590|69[01]"]]],"0",0,0,0,0,0,[["590(?:0[079]|13|2[79]|30|43|5[0-268]|7[79]|87)\\\\d{4}"],["69(?:0\\\\d{2}|1(?:2[29]|3[0-5]))\\\\d{4}"]]],"MG":["261","00","[23]\\\\d{8}",[9],[["([23]\\\\d)(\\\\d{2})(\\\\d{3})(\\\\d{2})","$1 $2 $3 $4",["[23]"]]],"0","0$1"],"MH":["692","011","[2-6]\\\\d{6}",[7],[["(\\\\d{3})(\\\\d{4})","$1-$2"]],"1"],"MK":["389","00","[2-578]\\\\d{7}",[8],[["(2)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["2"]],["([347]\\\\d)(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[347]"]],["([58]\\\\d{2})(\\\\d)(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[58]"]]],"0","0$1"],"ML":["223","00","[24-9]\\\\d{7}",[8],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[24-9]"]]]],"MM":["95","00","[1-7]\\\\d{5,8}|8\\\\d{5,9}|9(?:[279]\\\\d{0,2}|5|[34]\\\\d{1,2}|6(?:\\\\d{1,2})?|8(?:\\\\d{2})?)\\\\d{6}",[6,7,8,9,10],[["(\\\\d)(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["1|2[245]"]],["(2)(\\\\d{4})(\\\\d{4})","$1 $2 $3",["251"]],["(\\\\d)(\\\\d{2})(\\\\d{3})","$1 $2 $3",["16|2"]],["(\\\\d{2})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["4(?:[25]|3[24])|5[247-9]4|6[37]|7[0145]|8[13]"]],["(\\\\d{2})(\\\\d{2})(\\\\d{3,4})","$1 $2 $3",["[4-8]"]],["(9)(\\\\d{3})(\\\\d{4,6})","$1 $2 $3",["9(?:2[0-4]|[35-9]|4[137-9])"]],["(9)([34]\\\\d{4})(\\\\d{4})","$1 $2 $3",["9(?:3[0-36]|4[0-57-9])"]],["(9)(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3 $4",["92[56]"]],["(9)(\\\\d{3})(\\\\d{3})(\\\\d{2})","$1 $2 $3 $4",["93"]]],"0","0$1"],"MN":["976","001","[12]\\\\d{7,9}|[57-9]\\\\d{7}",[8,9,10],[["([12]\\\\d)(\\\\d{2})(\\\\d{4})","$1 $2 $3",["[12]1"]],["([12]2\\\\d)(\\\\d{5,6})","$1 $2",["[12]2[1-3]"]],["([12]\\\\d{3})(\\\\d{5})","$1 $2",["[12](?:27|[3-5])","[12](?:27|[3-5]\\\\d)2"]],["(\\\\d{4})(\\\\d{4})","$1 $2",["[57-9]"],"$1"],["([12]\\\\d{4})(\\\\d{4,5})","$1 $2",["[12](?:27|[3-5])","[12](?:27|[3-5]\\\\d)[4-9]"]]],"0","0$1"],"MO":["853","00","[268]\\\\d{7}",[8],[["([268]\\\\d{3})(\\\\d{4})","$1 $2",["[268]"]]]],"MP":["1","011","[5689]\\\\d{9}",[10],[["(\\\\d{3})(\\\\d{3})(\\\\d{4})","($1) $2-$3",0,0,0,"$1-$2-$3"]],"1",0,0,0,0,"670"],"MQ":["596","00","[56]\\\\d{8}",[9],[["(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4"]],"0","0$1"],"MR":["222","00","[2-48]\\\\d{7}",[8],[["([2-48]\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[2-48]"]]]],"MS":["1","011","[5689]\\\\d{9}",[10],[["(\\\\d{3})(\\\\d{3})(\\\\d{4})","($1) $2-$3",0,0,0,"$1-$2-$3"]],"1",0,0,0,0,"664"],"MT":["356","00","[2357-9]\\\\d{7}",[8],[["(\\\\d{4})(\\\\d{4})","$1 $2"]]],"MU":["230","0(?:0|[2-7]0|33)","[2-9]\\\\d{6,7}",[7,8],[["([2-46-9]\\\\d{2})(\\\\d{4})","$1 $2",["[2-46-9]"]],["(5\\\\d{3})(\\\\d{4})","$1 $2",["5"]]],0,0,0,0,0,0,0,"020"],"MV":["960","0(?:0|19)","[346-8]\\\\d{6,9}|9(?:00\\\\d{7}|\\\\d{6})",[7,10],[["(\\\\d{3})(\\\\d{4})","$1-$2",["[3467]|9(?:0[1-9]|[1-9])"]],["(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["[89]00"]]],0,0,0,0,0,0,0,"00"],"MW":["265","00","(?:1(?:\\\\d{2})?|[2789]\\\\d{2}|31\\\\d)\\\\d{6}",[7,9],[["(\\\\d)(\\\\d{3})(\\\\d{3})","$1 $2 $3",["1"]],["(2\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["2"]],["(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[17-9]"]],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["31"]]],"0","0$1"],"MX":["52","0[09]","[1-9]\\\\d{9,10}",[10,11],[["([358]\\\\d)(\\\\d{4})(\\\\d{4})","$1 $2 $3",["33|55|81"]],["(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["[2467]|3[0-2457-9]|5[089]|8[02-9]|9[0-35-9]"]],["(1)([358]\\\\d)(\\\\d{4})(\\\\d{4})","044 $2 $3 $4",["1(?:33|55|81)"],"$1",0,"$1 $2 $3 $4"],["(1)(\\\\d{3})(\\\\d{3})(\\\\d{4})","044 $2 $3 $4",["1(?:[2467]|3[0-2457-9]|5[089]|8[2-9]|9[1-35-9])"],"$1",0,"$1 $2 $3 $4"]],"01","01 $1","0[12]|04[45](\\\\d{10})","1$1",1],"MY":["60","00","[13-9]\\\\d{7,9}",[8,9,10],[["([4-79])(\\\\d{3})(\\\\d{4})","$1-$2 $3",["[4-79]"],"0$1"],["(3)(\\\\d{4})(\\\\d{4})","$1-$2 $3",["3"],"0$1"],["([18]\\\\d)(\\\\d{3})(\\\\d{3,4})","$1-$2 $3",["1[02-46-9][1-9]|8"],"0$1"],["(1)([36-8]00)(\\\\d{2})(\\\\d{4})","$1-$2-$3-$4",["1[36-8]0","1[36-8]00"]],["(11)(\\\\d{4})(\\\\d{4})","$1-$2 $3",["11"],"0$1"],["(15[49])(\\\\d{3})(\\\\d{4})","$1-$2 $3",["15[49]"],"0$1"]],"0"],"MZ":["258","00","[28]\\\\d{7,8}",[8,9],[["([28]\\\\d)(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["2|8[2-7]"]],["(80\\\\d)(\\\\d{3})(\\\\d{3})","$1 $2 $3",["80"]]]],"NA":["264","00","[68]\\\\d{7,8}",[8,9],[["(8\\\\d)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["8[1-35]"]],["(6\\\\d)(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["6"]],["(88)(\\\\d{3})(\\\\d{3})","$1 $2 $3",["88"]],["(870)(\\\\d{3})(\\\\d{3})","$1 $2 $3",["870"]]],"0","0$1"],"NC":["687","00","[2-57-9]\\\\d{5}",[6],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1.$2.$3",["[2-46-9]|5[0-4]"]]]],"NE":["227","00","[0289]\\\\d{7}",[8],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["09|[289]"]],["(08)(\\\\d{3})(\\\\d{3})","$1 $2 $3",["08"]]]],"NF":["672","00","[13]\\\\d{5}",[6],[["(\\\\d{2})(\\\\d{4})","$1 $2",["1"]],["(\\\\d)(\\\\d{5})","$1 $2",["3"]]]],"NG":["234","009","[1-6]\\\\d{5,8}|9\\\\d{5,9}|[78]\\\\d{5,13}",[7,8,10,11,12,13,14],[["(\\\\d)(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["[12]|9(?:0[3-9]|[1-9])"]],["(\\\\d{2})(\\\\d{3})(\\\\d{2,3})","$1 $2 $3",["[3-6]|7(?:0[1-9]|[1-79])|8[2-9]"]],["(\\\\d{3})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["70|8[01]|90[235-9]"]],["([78]00)(\\\\d{4})(\\\\d{4,5})","$1 $2 $3",["[78]00"]],["([78]00)(\\\\d{5})(\\\\d{5,6})","$1 $2 $3",["[78]00"]],["(78)(\\\\d{2})(\\\\d{3})","$1 $2 $3",["78"]]],"0","0$1"],"NI":["505","00","[125-8]\\\\d{7}",[8],[["(\\\\d{4})(\\\\d{4})","$1 $2"]]],"NL":["31","00","1\\\\d{4,8}|[2-7]\\\\d{8}|[89]\\\\d{6,9}",[5,6,7,8,9,10],[["([1-578]\\\\d)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["1[035]|2[0346]|3[03568]|4[0356]|5[0358]|7|8[4578]"]],["([1-5]\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["1[16-8]|2[259]|3[124]|4[17-9]|5[124679]"]],["(6)(\\\\d{8})","$1 $2",["6[0-57-9]"]],["(66)(\\\\d{7})","$1 $2",["66"]],["(14)(\\\\d{3,4})","$1 $2",["14"],"$1"],["([89]0\\\\d)(\\\\d{4,7})","$1 $2",["[89]0"]]],"0","0$1"],"NO":["47","00","0\\\\d{4}|[2-9]\\\\d{7}",[5,8],[["([489]\\\\d{2})(\\\\d{2})(\\\\d{3})","$1 $2 $3",["[489]"]],["([235-7]\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[235-7]"]]],0,0,0,0,0,0,[["(?:2[1-4]|3[1-3578]|5[1-35-7]|6[1-4679]|7[0-8])\\\\d{6}",[8]],["(?:4[015-8]|5[89]|9\\\\d)\\\\d{6}",[8]],["80[01]\\\\d{5}",[8]],["82[09]\\\\d{5}",[8]],["880\\\\d{5}",[8]],0,["0\\\\d{4}|81(?:0(?:0[7-9]|1\\\\d)|5\\\\d{2})\\\\d{3}"],0,["85[0-5]\\\\d{5}",[8]],["810(?:0[0-6]|[2-8]\\\\d)\\\\d{3}",[8]]]],"NP":["977","00","[1-8]\\\\d{7}|9(?:[1-69]\\\\d{6,8}|7[2-6]\\\\d{5,7}|8\\\\d{8})",[8,10],[["(1)(\\\\d{7})","$1-$2",["1[2-6]"]],["(\\\\d{2})(\\\\d{6})","$1-$2",["1[01]|[2-8]|9(?:[1-69]|7[15-9])"]],["(9\\\\d{2})(\\\\d{7})","$1-$2",["9(?:6[013]|7[245]|8)"],"$1"]],"0","0$1"],"NR":["674","00","[458]\\\\d{6}",[7],[["(\\\\d{3})(\\\\d{4})","$1 $2"]]],"NU":["683","00","[478]\\\\d{3,7}",[4,7],[["(\\\\d{3})(\\\\d{4})","$1 $2",["888"]]]],"NZ":["64","0(?:0|161)","6[235-9]\\\\d{6}|[2-57-9]\\\\d{7,9}",[8,9,10],[["(\\\\d)(\\\\d{3})(\\\\d{4})","$1-$2 $3",["240|[346]|7[2-57-9]|9[1-9]"]],["(\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["21"]],["(\\\\d{2})(\\\\d{3})(\\\\d{3,5})","$1 $2 $3",["2(?:1[1-9]|[69]|7[0-35-9])|70|86"]],["(2\\\\d)(\\\\d{3,4})(\\\\d{4})","$1 $2 $3",["2[028]"]],["(\\\\d{3})(\\\\d{2})(\\\\d{3})","$1 $2 $3",["90"]],["(\\\\d{3})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["2(?:10|74)|5|[89]0"]]],"0","0$1",0,0,0,0,0,"00"],"OM":["968","00","(?:5|[279]\\\\d)\\\\d{6}|800\\\\d{5,6}",[7,8,9],[["(2\\\\d)(\\\\d{6})","$1 $2",["2"]],["([79]\\\\d{3})(\\\\d{4})","$1 $2",["[79]"]],["([58]00)(\\\\d{4,6})","$1 $2",["[58]00"]]]],"PA":["507","00","[1-9]\\\\d{6,7}",[7,8],[["(\\\\d{3})(\\\\d{4})","$1-$2",["[1-57-9]"]],["(\\\\d{4})(\\\\d{4})","$1-$2",["6"]]]],"PE":["51","19(?:1[124]|77|90)00","[14-9]\\\\d{7,8}",[8,9],[["(1)(\\\\d{7})","$1 $2",["1"]],["([4-8]\\\\d)(\\\\d{6})","$1 $2",["[4-7]|8[2-4]"]],["(\\\\d{3})(\\\\d{5})","$1 $2",["80"]],["(9\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["9"],"$1"]],"0","(0$1)",0,0,0,0,0,0," Anexo "],"PF":["689","00","4\\\\d{5,7}|8\\\\d{7}",[6,8],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["4[09]|8[79]"]],["(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3",["44"]]]],"PG":["675","140[1-3]|00","[1-9]\\\\d{6,7}",[7,8],[["(\\\\d{3})(\\\\d{4})","$1 $2",["[13-689]|27"]],["(\\\\d{4})(\\\\d{4})","$1 $2",["20|7"]]],0,0,0,0,0,0,0,"00"],"PH":["63","00","1\\\\d{10,12}|2\\\\d{5,7}|[3-7]\\\\d{8}|8\\\\d{7,9}|9\\\\d{9}",[6,8,9,10,11,12,13],[["(2)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["2"],"(0$1)"],["(2)(\\\\d{5})","$1 $2",["2"],"(0$1)"],["(\\\\d{4})(\\\\d{4,6})","$1 $2",["3(?:23|39|46)|4(?:2[3-6]|[35]9|4[26]|76)|5(?:22|44)|642|8(?:62|8[245])","3(?:230|397|461)|4(?:2(?:35|[46]4|51)|396|4(?:22|63)|59[347]|76[15])|5(?:221|446)|642[23]|8(?:622|8(?:[24]2|5[13]))"],"(0$1)"],["(\\\\d{5})(\\\\d{4})","$1 $2",["346|4(?:27|9[35])|883","3469|4(?:279|9(?:30|56))|8834"],"(0$1)"],["([3-8]\\\\d)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["[3-8]"],"(0$1)"],["(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["81|9"],"0$1"],["(1800)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["180","1800"]],["(1800)(\\\\d{1,2})(\\\\d{3})(\\\\d{4})","$1 $2 $3 $4",["180","1800"]]],"0"],"PK":["92","00","1\\\\d{8}|[2-8]\\\\d{5,11}|9(?:[013-9]\\\\d{4,10}|2\\\\d(?:111\\\\d{6}|\\\\d{3,7}))",[8,9,10,11,12],[["([89]00)(\\\\d{3})(\\\\d{2})","$1 $2 $3",["[89]00"],"0$1"],["(1\\\\d{3})(\\\\d{5})","$1 $2",["1"],"$1"],["(\\\\d{2})(\\\\d{7,8})","$1 $2",["(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]"]],["(\\\\d{3})(\\\\d{6,7})","$1 $2",["2[349]|45|54|60|72|8[2-5]|9[2-469]","(?:2[349]|45|54|60|72|8[2-5]|9[2-469])\\\\d[2-9]"]],["(58\\\\d{3})(\\\\d{5})","$1 $2",["58[126]"]],["(3\\\\d{2})(\\\\d{7})","$1 $2",["3"],"0$1"],["(\\\\d{2})(111)(\\\\d{3})(\\\\d{3})","$1 $2 $3 $4",["(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)1","(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)11","(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)111"]],["(\\\\d{3})(111)(\\\\d{3})(\\\\d{3})","$1 $2 $3 $4",["2[349]|45|54|60|72|8[2-5]|9[2-9]","(?:2[349]|45|54|60|72|8[2-5]|9[2-9])\\\\d1","(?:2[349]|45|54|60|72|8[2-5]|9[2-9])\\\\d11","(?:2[349]|45|54|60|72|8[2-5]|9[2-9])\\\\d111"]]],"0","(0$1)"],"PL":["48","00","[1-57-9]\\\\d{6,8}|6\\\\d{5,8}",[6,7,8,9],[["(\\\\d{3})(\\\\d{3})","$1 $2",["11[68]|64"]],["(\\\\d{5})","$1",["19"]],["(\\\\d{2})(\\\\d{2})(\\\\d{3})","$1 $2 $3",["1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145]"]],["(\\\\d{3})(\\\\d{2})(\\\\d{2,3})","$1 $2 $3",["64"]],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["26|39|45|5[0137]|6[0469]|7[02389]|8[08]"]],["(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[14]|2[0-57-9]|3[2-4]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145]"]]]],"PM":["508","00","[45]\\\\d{5}",[6],[["([45]\\\\d)(\\\\d{2})(\\\\d{2})","$1 $2 $3",["[45]"]]],"0","0$1"],"PR":["1","011","[5789]\\\\d{9}",[10],[["(\\\\d{3})(\\\\d{3})(\\\\d{4})","($1) $2-$3",0,0,0,"$1-$2-$3"]],"1",0,0,0,0,"787|939"],"PS":["970","00","1\\\\d{9}|[24589]\\\\d{7,8}",[8,9,10],[["([2489])(2\\\\d{2})(\\\\d{4})","$1 $2 $3",["[2489]2"]],["(5[69]\\\\d)(\\\\d{3})(\\\\d{3})","$1 $2 $3",["5[69]"]],["(1[78]00)(\\\\d{3})(\\\\d{3})","$1 $2 $3",["1[78]0","1[78]00"],"$1"]],"0","0$1"],"PT":["351","00","[2-46-9]\\\\d{8}",[9],[["(2\\\\d)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["2[12]"]],["([2-46-9]\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["2[3-9]|[346-9]"]]]],"PW":["680","01[12]","[2-9]\\\\d{6}",[7],[["(\\\\d{3})(\\\\d{4})","$1 $2"]]],"PY":["595","00","5[0-5]\\\\d{4,7}|[2-46-9]\\\\d{5,8}",[6,7,8,9],[["(\\\\d{2})(\\\\d{5})","$1 $2",["[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]"],"(0$1)"],["(\\\\d{2})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]"],"(0$1)"],["(\\\\d{3})(\\\\d{3,6})","$1 $2",["[2-9]0"],"0$1"],["(\\\\d{3})(\\\\d{6})","$1 $2",["9[1-9]"],"0$1"],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["870","8700"]],["(\\\\d{3})(\\\\d{4,5})","$1 $2",["[2-8][1-9]"],"(0$1)"],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[2-8][1-9]"],"0$1"]],"0"],"QA":["974","00","[2-8]\\\\d{6,7}",[7,8],[["([28]\\\\d{2})(\\\\d{4})","$1 $2",["[28]"]],["([3-7]\\\\d{3})(\\\\d{4})","$1 $2",["[3-7]"]]]],"RE":["262","00","[268]\\\\d{8}",[9],[["([268]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[268]"]]],"0","0$1",0,0,0,"262|69|8"],"RO":["40","00","[23]\\\\d{5,8}|[7-9]\\\\d{8}",[6,9],[["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["[23]1"]],["(\\\\d{2})(\\\\d{4})","$1 $2",["[23]1"]],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[23][3-7]|[7-9]"]],["(2\\\\d{2})(\\\\d{3})","$1 $2",["2[3-6]"]]],"0","0$1",0,0,0,0,0,0," int "],"RS":["381","00","[126-9]\\\\d{4,11}|3(?:[0-79]\\\\d{3,10}|8[2-9]\\\\d{2,9})",[6,7,8,9,10,11,12],[["([23]\\\\d{2})(\\\\d{4,9})","$1 $2",["(?:2[389]|39)0"]],["([1-3]\\\\d)(\\\\d{5,10})","$1 $2",["1|2(?:[0-24-7]|[389][1-9])|3(?:[0-8]|9[1-9])"]],["(6\\\\d)(\\\\d{6,8})","$1 $2",["6"]],["([89]\\\\d{2})(\\\\d{3,9})","$1 $2",["[89]"]],["(7[26])(\\\\d{4,9})","$1 $2",["7[26]"]],["(7[08]\\\\d)(\\\\d{4,9})","$1 $2",["7[08]"]]],"0","0$1"],"RU":["7","810","[347-9]\\\\d{9}",[10],[["([3489]\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1 $2-$3-$4",["[3489]"]],["(7\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["7"]]],"8","8 ($1)",0,0,1,0,[["(?:3(?:0[12]|4[1-35-79]|5[1-3]|65|8[1-58]|9[0145])|4(?:01|1[1356]|2[13467]|7[1-5]|8[1-7]|9[1-689])|8(?:1[1-8]|2[01]|3[13-6]|4[0-8]|5[15]|6[1-35-79]|7[1-37-9]))\\\\d{7}"],["9\\\\d{9}"],["80[04]\\\\d{7}"],["80[39]\\\\d{7}"],["808\\\\d{7}"]],"8~10"],"RW":["250","00","[027-9]\\\\d{7,8}",[8,9],[["(2\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["2"]],["([7-9]\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[7-9]"],"0$1"],["(0\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["0"]]],"0"],"SA":["966","00","[15]\\\\d{8}|8\\\\d{9}|92\\\\d{7}",[9,10],[["(1\\\\d)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["1[1-467]"]],["(5\\\\d)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["5"]],["(92\\\\d{2})(\\\\d{5})","$1 $2",["92"],"$1"],["(800)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["800"],"$1"],["(811)(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["811"]]],"0","0$1"],"SB":["677","0[01]","[1-9]\\\\d{4,6}",[5,7],[["(\\\\d{2})(\\\\d{5})","$1 $2",["[7-9]"]]]],"SC":["248","0(?:[02]|10?)","[24689]\\\\d{5,6}",[7],[["(\\\\d)(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[246]"]]],0,0,0,0,0,0,0,"00"],"SD":["249","00","[19]\\\\d{8}",[9],[["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3"]],"0","0$1"],"SE":["46","00","[1-35-9]\\\\d{5,11}|4\\\\d{6,8}",[6,7,8,9,10],[["([1-469]\\\\d)(\\\\d{3})(\\\\d{2})","$1-$2 $3",["[12][136]|3[356]|4[0246]|6[03]|90[1-9]"],0,0,"$1 $2 $3"],["(9[034]\\\\d)(\\\\d{4})","$1-$2",["9(?:00|39|44)"],0,0,"$1 $2"],["(8)(\\\\d{2,3})(\\\\d{2,3})(\\\\d{2})","$1-$2 $3 $4",["8"],0,0,"$1 $2 $3 $4"],["([1-69]\\\\d)(\\\\d{2,3})(\\\\d{2})(\\\\d{2})","$1-$2 $3 $4",["1[013689]|2[0136]|3[1356]|4[0246]|54|6[03]|90"],0,0,"$1 $2 $3 $4"],["(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1-$2 $3 $4",["1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[0-5]|4[0-3])"],0,0,"$1 $2 $3 $4"],["(\\\\d{3})(\\\\d{2,3})(\\\\d{2})","$1-$2 $3",["1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[0-5]|4[0-3])"],0,0,"$1 $2 $3"],["(7\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1-$2 $3 $4",["7"],0,0,"$1 $2 $3 $4"],["(77)(\\\\d{2})(\\\\d{2})","$1-$2$3",["77"],0,0,"$1 $2 $3"],["(20)(\\\\d{2,3})(\\\\d{2})","$1-$2 $3",["20"],0,0,"$1 $2 $3"],["(9[034]\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{3})","$1-$2 $3 $4",["9[034]"],0,0,"$1 $2 $3 $4"],["(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1-$2 $3 $4 $5",["25[245]|67[3-6]"],0,0,"$1 $2 $3 $4 $5"]],"0","0$1"],"SG":["65","0[0-3]\\\\d","[36]\\\\d{7}|[17-9]\\\\d{7,10}",[8,10,11],[["([3689]\\\\d{3})(\\\\d{4})","$1 $2",["[369]|8[1-9]"]],["(1[89]00)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["1[89]0","1[89]00"]],["(7000)(\\\\d{4})(\\\\d{3})","$1 $2 $3",["700","7000"]],["(800)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["800"]]]],"SH":["290","00","[256]\\\\d{4}|8\\\\d{3}",[4,5],0,0,0,0,0,0,0,[["2(?:[0-57-9]\\\\d|6[4-9])\\\\d{2}"],["[56]\\\\d{4}",[5]],0,0,0,0,0,0,["262\\\\d{2}",[5]]]],"SI":["386","00","[1-7]\\\\d{6,7}|[89]\\\\d{4,7}",[5,6,7,8],[["(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[12]|[34][24-8]|5[2-8]|7[3-8]"],"(0$1)"],["([3-7]\\\\d)(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[37][01]|4[0139]|51|6"]],["([89][09])(\\\\d{3,6})","$1 $2",["[89][09]"]],["([58]\\\\d{2})(\\\\d{5})","$1 $2",["59|8[1-3]"]]],"0","0$1"],"SJ":["47","00","0\\\\d{4}|[45789]\\\\d{7}",[5,8],[["([489]\\\\d{2})(\\\\d{2})(\\\\d{3})","$1 $2 $3",["[489]"]],["([235-7]\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[235-7]"]]],0,0,0,0,0,0,[["79\\\\d{6}",[8]],["(?:4[015-8]|5[89]|9\\\\d)\\\\d{6}",[8]],["80[01]\\\\d{5}",[8]],["82[09]\\\\d{5}",[8]],["880\\\\d{5}",[8]],0,["0\\\\d{4}|81(?:0(?:0[7-9]|1\\\\d)|5\\\\d{2})\\\\d{3}"],0,["85[0-5]\\\\d{5}",[8]],["810(?:0[0-6]|[2-8]\\\\d)\\\\d{3}",[8]]]],"SK":["421","00","(?:[2-68]\\\\d{5,8}|9\\\\d{6,8})",[6,7,9],[["(2)(1[67])(\\\\d{3,4})","$1 $2 $3",["21[67]"]],["([3-5]\\\\d)(\\\\d{2})(\\\\d{2,3})","$1 $2 $3",["[3-5]"]],["(2)(\\\\d{3})(\\\\d{3})(\\\\d{2})","$1/$2 $3 $4",["2"]],["([3-5]\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1/$2 $3 $4",["[3-5]"]],["([689]\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[689]"]],["(9090)(\\\\d{3})","$1 $2",["909","9090"]]],"0","0$1"],"SL":["232","00","[2-9]\\\\d{7}",[8],[["(\\\\d{2})(\\\\d{6})","$1 $2"]],"0","(0$1)"],"SM":["378","00","[05-7]\\\\d{7,9}",[8,10],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[5-7]"]],["(0549)(\\\\d{6})","$1 $2",["054","0549"],0,0,"($1) $2"],["(\\\\d{6})","0549 $1",["[89]"],0,0,"(0549) $1"]],0,0,"([89]\\\\d{5})","0549$1"],"SN":["221","00","[3789]\\\\d{8}",[9],[["(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[379]"]],["(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["8"]]]],"SO":["252","00","[1-9]\\\\d{5,8}",[6,7,8,9],[["(\\\\d{6})","$1",["[134]"]],["(\\\\d)(\\\\d{6})","$1 $2",["[13-5]|2[0-79]"]],["(\\\\d)(\\\\d{7})","$1 $2",["24|[67]"]],["(\\\\d{2})(\\\\d{4})","$1 $2",["8[125]"]],["(\\\\d{2})(\\\\d{5,7})","$1 $2",["15|28|6[1-35-9]|799|9[2-9]"]],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["3[59]|4[89]|6[24-6]|79|8[08]|90"]]],"0"],"SR":["597","00","[2-8]\\\\d{5,6}",[6,7],[["(\\\\d{3})(\\\\d{3})","$1-$2",["[2-4]|5[2-58]"]],["(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1-$2-$3",["56"]],["(\\\\d{3})(\\\\d{4})","$1-$2",["[6-8]"]]]],"SS":["211","00","[19]\\\\d{8}",[9],[["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3",0,"0$1"]],"0"],"ST":["239","00","[29]\\\\d{6}",[7],[["(\\\\d{3})(\\\\d{4})","$1 $2"]]],"SV":["503","00","[267]\\\\d{7}|[89]\\\\d{6}(?:\\\\d{4})?",[7,8,11],[["(\\\\d{4})(\\\\d{4})","$1 $2",["[267]"]],["(\\\\d{3})(\\\\d{4})","$1 $2",["[89]"]],["(\\\\d{3})(\\\\d{4})(\\\\d{4})","$1 $2 $3",["[89]"]]]],"SX":["1","011","[5789]\\\\d{9}",[10],[["(\\\\d{3})(\\\\d{3})(\\\\d{4})","($1) $2-$3",0,0,0,"$1-$2-$3"]],"1",0,0,0,0,"721"],"SY":["963","00","[1-59]\\\\d{7,8}",[8,9],[["(\\\\d{2})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["[1-5]"]],["(9\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["9"]]],"0","0$1",0,0,1],"SZ":["268","00","[0237]\\\\d{7}|900\\\\d{6}",[8,9],[["(\\\\d{4})(\\\\d{4})","$1 $2",["[0237]"]],["(\\\\d{5})(\\\\d{4})","$1 $2",["900"]]]],"TA":["290","00","8\\\\d{3}",[4],0,0,0,0,0,0,0,[["8\\\\d{3}"]]],"TC":["1","011","[5689]\\\\d{9}",[10],[["(\\\\d{3})(\\\\d{3})(\\\\d{4})","($1) $2-$3",0,0,0,"$1-$2-$3"]],"1",0,0,0,0,"649"],"TD":["235","00|16","[2679]\\\\d{7}",[8],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4"]],0,0,0,0,0,0,0,"00"],"TG":["228","00","[279]\\\\d{7}",[8],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[279]"]]]],"TH":["66","00[1-9]","1\\\\d{8,9}|[2-9]\\\\d{7,8}",[8,9,10],[["(2)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["2"]],["([13-9]\\\\d)(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["14|[3-9]"]],["(1[89]00)(\\\\d{3})(\\\\d{3})","$1 $2 $3",["1[89]0","1[89]00"],"$1"]],"0","0$1"],"TJ":["992","810","[3-57-9]\\\\d{8}",[9],[["([349]\\\\d{2})(\\\\d{2})(\\\\d{4})","$1 $2 $3",["[34]7|91[78]"]],["([457-9]\\\\d)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["4[148]|[578]|9(?:[0235-9]|1[59])"]],["(331700)(\\\\d)(\\\\d{2})","$1 $2 $3",["331","3317","33170","331700"]],["(\\\\d{4})(\\\\d)(\\\\d{4})","$1 $2 $3",["3[1-5]","3(?:[1245]|3(?:[02-9]|1[0-589]))"]]],"8",0,0,0,1,0,0,"8~10"],"TK":["690","00","[2-47]\\\\d{3,6}",[4,5,6,7]],"TL":["670","00","[2-489]\\\\d{6}|7\\\\d{6,7}",[7,8],[["(\\\\d{3})(\\\\d{4})","$1 $2",["[2-489]|70"]],["(\\\\d{4})(\\\\d{4})","$1 $2",["7[3-8]"]]]],"TM":["993","810","[1-6]\\\\d{7}",[8],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2-$3-$4",["12"]],["(\\\\d{2})(\\\\d{6})","$1 $2",["6"],"8 $1"],["(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})","$1 $2-$3-$4",["13|[2-5]"]]],"8","(8 $1)",0,0,0,0,0,"8~10"],"TN":["216","00","[2-57-9]\\\\d{7}",[8],[["(\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3"]]],"TO":["676","00","[02-8]\\\\d{4,6}",[5,7],[["(\\\\d{2})(\\\\d{3})","$1-$2",["[1-6]|7[0-4]|8[05]"]],["(\\\\d{3})(\\\\d{4})","$1 $2",["7[5-9]|8[46-9]"]],["(\\\\d{4})(\\\\d{3})","$1 $2",["0"]]]],"TR":["90","00","[2-589]\\\\d{9}|444\\\\d{4}",[7,10],[["(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[23]|4(?:[0-35-9]|4[0-35-9])"],"(0$1)"],["(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["5(?:[02-69]|1[06])"],"0$1"],["(\\\\d{3})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["51|[89]"],"0$1"],["(444)(\\\\d{1})(\\\\d{3})","$1 $2 $3",["444"]]],"0",0,0,0,1],"TT":["1","011","[589]\\\\d{9}",[10],[["(\\\\d{3})(\\\\d{3})(\\\\d{4})","($1) $2-$3",0,0,0,"$1-$2-$3"]],"1",0,0,0,0,"868"],"TV":["688","00","[279]\\\\d{4,6}",[5,6,7]],"TW":["886","0(?:0[25679]|19)","2\\\\d{6,8}|[3-689]\\\\d{7,8}|7\\\\d{7,9}",[7,8,9,10],[["(20)(\\\\d)(\\\\d{4})","$1 $2 $3",["202"]],["([258]0)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["20[013-9]|50[0-46-9]|80[0-79]"]],["([2-8])(\\\\d{3,4})(\\\\d{4})","$1 $2 $3",["[25][2-8]|[346]|[78][1-9]"]],["(9\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["9"]],["(70)(\\\\d{4})(\\\\d{4})","$1 $2 $3",["70"]]],"0","0$1",0,0,0,0,0,0,"#"],"TZ":["255","00[056]","\\\\d{9}",[7,9],[["([24]\\\\d)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["[24]"]],["([67]\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[67]"]],["([89]\\\\d{2})(\\\\d{2})(\\\\d{4})","$1 $2 $3",["[89]"]]],"0","0$1"],"UA":["380","00","[3-9]\\\\d{8}",[9],[["([3-9]\\\\d)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["[38]9|4(?:[45][0-5]|87)|5(?:0|[67][37])|6[36-8]|7|9[1-9]","[38]9|4(?:[45][0-5]|87)|5(?:0|6(?:3[14-7]|7)|7[37])|6[36-8]|7|9[1-9]"]],["([3-689]\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["(?:3[1-8]|4[136-8])2|5(?:[12457]2|6[24])|6(?:[12][29]|[49]2|5[24])|8[0-8]|90","3(?:[1-46-8]2[013-9]|52)|4(?:[1378]2|62[013-9])|5(?:[12457]2|6[24])|6(?:[12][29]|[49]2|5[24])|8[0-8]|90"]],["([3-6]\\\\d{3})(\\\\d{5})","$1 $2",["3(?:[1-46-8]|5[013-9])|4(?:[137][013-9]|[45][6-9]|6|8[4-6])|5(?:[1245][013-9]|3|6[0135689]|7[4-6])|6(?:[12][13-8]|[49][013-9]|5[0135-9])","3(?:[1-46-8](?:[013-9]|22)|5[013-9])|4(?:[137][013-9]|[45][6-9]|6(?:[013-9]|22)|8[4-6])|5(?:[1245][013-9]|3|6(?:[015689]|3[02389])|7[4-6])|6(?:[12][13-8]|[49][013-9]|5[0135-9])"]]],"0","0$1",0,0,0,0,0,"0~0"],"UG":["256","00[057]","\\\\d{9}",[9],[["(\\\\d{3})(\\\\d{6})","$1 $2",["20[0-8]|4(?:6[45]|[7-9])|[7-9]","20(?:[013-8]|2[5-9])|4(?:6[45]|[7-9])|[7-9]"]],["(\\\\d{2})(\\\\d{7})","$1 $2",["3|4(?:[1-5]|6[0-36-9])"]],["(2024)(\\\\d{5})","$1 $2",["202","2024"]]],"0","0$1"],"US":["1","011","[2-9]\\\\d{9}",[10],[["(\\\\d{3})(\\\\d{3})(\\\\d{4})","($1) $2-$3",0,0,0,"$1-$2-$3"]],"1",0,0,0,1,0,[["(?:2(?:0[1-35-9]|1[02-9]|2[03-589]|3[149]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-57-9]|1[02-9]|2[0135]|3[0-24679]|4[67]|5[12]|6[014]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[0235]|58|6[39]|7[0589]|8[04])|5(?:0[1-57-9]|1[0235-8]|20|3[0149]|4[01]|5[19]|6[1-47]|7[013-5]|8[056])|6(?:0[1-35-9]|1[024-9]|2[03689]|3[016]|4[16]|5[017]|6[0-279]|78|8[012])|7(?:0[1-46-8]|1[2-9]|2[04-7]|3[1247]|4[037]|5[47]|6[02359]|7[02-59]|8[156])|8(?:0[1-68]|1[02-8]|2[08]|3[0-258]|4[3578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[014678]|4[0179]|5[12469]|7[0-3589]|8[04-69]))[2-9]\\\\d{6}"],[""],["8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}"],["900[2-9]\\\\d{6}"],["5(?:00|2[12]|33|44|66|77|88)[2-9]\\\\d{6}"],0,["710[2-9]\\\\d{6}"]]],"UY":["598","0(?:1[3-9]\\\\d|0)","[2489]\\\\d{6,7}",[7,8],[["(\\\\d{4})(\\\\d{4})","$1 $2",["[24]"]],["(\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["9[1-9]"],"0$1"],["(\\\\d{3})(\\\\d{4})","$1 $2",["[89]0"],"0$1"]],"0",0,0,0,0,0,0,"00"," int. "],"UZ":["998","810","[679]\\\\d{8}",[9],[["([679]\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[679]"]]],"8","8 $1",0,0,0,0,0,"8~10"],"VA":["39","00","(?:0(?:878\\\\d{5}|6698\\\\d{5})|[1589]\\\\d{5,10}|3(?:[12457-9]\\\\d{8}|[36]\\\\d{7,9}))",[6,8,9,10,11],[["(\\\\d{2})(\\\\d{3,4})(\\\\d{4})","$1 $2 $3",["0[26]|55"]],["(0[26])(\\\\d{4})(\\\\d{5})","$1 $2 $3",["0[26]"]],["(0[26])(\\\\d{4,6})","$1 $2",["0[26]"]],["(0\\\\d{2})(\\\\d{3,4})(\\\\d{4})","$1 $2 $3",["0[13-57-9][0159]"]],["(\\\\d{3})(\\\\d{3,6})","$1 $2",["0[13-57-9][0159]|8(?:03|4[17]|9[245])","0[13-57-9][0159]|8(?:03|4[17]|9(?:2|[45][0-4]))"]],["(0\\\\d{3})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["0[13-57-9][2-46-8]"]],["(0\\\\d{3})(\\\\d{2,6})","$1 $2",["0[13-57-9][2-46-8]"]],["(\\\\d{3})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["[13]|8(?:00|4[08]|9[59])","[13]|8(?:00|4[08]|9(?:5[5-9]|9))"]],["(\\\\d{4})(\\\\d{4})","$1 $2",["894","894[5-9]"]],["(\\\\d{3})(\\\\d{4})(\\\\d{4})","$1 $2 $3",["3"]]],0,0,0,0,0,0,[["06698\\\\d{5}",[10]],["3(?:[12457-9]\\\\d{8}|6\\\\d{7,8}|3\\\\d{7,9})",[9,10,11]],["80(?:0\\\\d{6}|3\\\\d{3})",[6,9]],["0878\\\\d{5}|1(?:44|6[346])\\\\d{6}|89(?:2\\\\d{3}|4(?:[0-4]\\\\d{2}|[5-9]\\\\d{4})|5(?:[0-4]\\\\d{2}|[5-9]\\\\d{6})|9\\\\d{6})",[6,8,9,10]],["1(?:78\\\\d|99)\\\\d{6}",[9,10]],0,0,0,["55\\\\d{8}",[10]],["84(?:[08]\\\\d{6}|[17]\\\\d{3})",[6,9]]]],"VC":["1","011","[5789]\\\\d{9}",[10],[["(\\\\d{3})(\\\\d{3})(\\\\d{4})","($1) $2-$3",0,0,0,"$1-$2-$3"]],"1",0,0,0,0,"784"],"VE":["58","00","[24589]\\\\d{9}",[10],[["(\\\\d{3})(\\\\d{7})","$1-$2"]],"0","0$1"],"VG":["1","011","[2589]\\\\d{9}",[10],[["(\\\\d{3})(\\\\d{3})(\\\\d{4})","($1) $2-$3",0,0,0,"$1-$2-$3"]],"1",0,0,0,0,"284"],"VI":["1","011","[3589]\\\\d{9}",[10],[["(\\\\d{3})(\\\\d{3})(\\\\d{4})","($1) $2-$3",0,0,0,"$1-$2-$3"]],"1",0,0,0,0,"340"],"VN":["84","00","1\\\\d{6,9}|2\\\\d{9}|6\\\\d{6,7}|7\\\\d{6}|8\\\\d{6,8}|9\\\\d{8}",[7,8,9,10],[["([17]99)(\\\\d{4})","$1 $2",["[17]99"]],["(\\\\d{2})(\\\\d{4})(\\\\d{4})","$1 $2 $3",["2[48]"]],["(80)(\\\\d{5})","$1 $2",["80"]],["(69\\\\d)(\\\\d{4,5})","$1 $2",["69"]],["(\\\\d{3})(\\\\d{4})(\\\\d{3})","$1 $2 $3",["2[0-35-79]"]],["([89]\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["8(?:8|9[89])|9"]],["(1[2689]\\\\d)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["1(?:[26]|8[68]|99)"]],["(86[689])(\\\\d{3})(\\\\d{3})","$1 $2 $3",["86[689]"]],["(1[89]00)(\\\\d{4,6})","$1 $2",["1[89]0","1[89]00"],"$1"]],"0","0$1",0,0,1],"VU":["678","00","[2-57-9]\\\\d{4,6}",[5,7],[["(\\\\d{3})(\\\\d{4})","$1 $2",["[579]"]]]],"WF":["681","00","[4-8]\\\\d{5}",[6],[["(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3"]]],"WS":["685","0","[2-578]\\\\d{4,9}|6[1-9]\\\\d{3}",[5,6,7,10],[["(8\\\\d{2})(\\\\d{3,7})","$1 $2",["8"]],["(7\\\\d)(\\\\d{5})","$1 $2",["7"]],["(\\\\d{5})","$1",["[2-6]"]]]],"XK":["383","00","[23][89]\\\\d{6,7}|4[3-79]\\\\d{6}|[89]00\\\\d{5}",[8,9],[["(\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["[23][89]|4[3-79]"]],["(\\\\d{3})(\\\\d{5})","$1 $2",["[89]00"]],["(\\\\d{3})(\\\\d{3})(\\\\d{3})","$1 $2 $3"]],"0","0$1"],"YE":["967","00","[1-7]\\\\d{6,8}",[7,8,9],[["([1-7])(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["[1-6]|7[24-68]"]],["(7\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["7[0137]"]]],"0","0$1"],"YT":["262","00","[268]\\\\d{8}",[9],[["([268]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})","$1 $2 $3 $4",["[268]"]]],"0",0,0,0,0,"269|63"],"ZA":["27","00","[1-79]\\\\d{8}|8\\\\d{4,8}",[5,6,7,8,9],[["(860)(\\\\d{3})(\\\\d{3})","$1 $2 $3",["860"]],["(\\\\d{2})(\\\\d{3,4})","$1 $2",["8[1-4]"]],["(\\\\d{2})(\\\\d{3})(\\\\d{2,3})","$1 $2 $3",["8[1-4]"]],["(\\\\d{2})(\\\\d{3})(\\\\d{4})","$1 $2 $3",["[1-79]|8(?:[0-57]|6[1-9])"]]],"0","0$1"],"ZM":["260","00","[289]\\\\d{8}",[9],[["(\\\\d{2})(\\\\d{4})","$1 $2",0,"$1"],["([1-8])(\\\\d{2})(\\\\d{4})","$1 $2 $3",["[1-8]"],"$1"],["([29]\\\\d)(\\\\d{7})","$1 $2",["[29]"]],["(800)(\\\\d{3})(\\\\d{3})","$1 $2 $3",["800"]]],"0","0$1"],"ZW":["263","00","2(?:[0-57-9]\\\\d{3,8}|6(?:[14]\\\\d{7}|\\\\d{4}))|[13-69]\\\\d{4,9}|7\\\\d{8}|8[06]\\\\d{5,8}",[5,6,7,8,9,10],[["([49])(\\\\d{3})(\\\\d{2,4})","$1 $2 $3",["4|9[2-9]"]],["(7\\\\d)(\\\\d{3})(\\\\d{4})","$1 $2 $3",["7"]],["(86\\\\d{2})(\\\\d{3})(\\\\d{3})","$1 $2 $3",["86[24]"]],["([2356]\\\\d{2})(\\\\d{3,5})","$1 $2",["2(?:0[45]|2[278]|[49]8|[78])|3(?:[09]8|17|3[78]|7[1569]|8[37])|5[15][78]|6(?:[29]8|37|[68][78]|75)"]],["(\\\\d{3})(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["2(?:1[39]|2[0157]|31|[56][14]|7[35]|84)|329"]],["([1-356]\\\\d)(\\\\d{3,5})","$1 $2",["1[3-9]|2[02569]|3[0-69]|5[05689]|6"]],["([235]\\\\d)(\\\\d{3})(\\\\d{3,4})","$1 $2 $3",["[23]9|54"]],["([25]\\\\d{3})(\\\\d{3,5})","$1 $2",["(?:25|54)8","258[23]|5483"]],["(8\\\\d{3})(\\\\d{6})","$1 $2",["86"]],["(80\\\\d)(\\\\d{4})","$1 $2",["80"]]],"0","0$1"],"001":["979",0,"\\\\d{9}",[9],[["(\\\\d)(\\\\d{4})(\\\\d{4})","$1 $2 $3"]]]}}');

/***/ })

};
;